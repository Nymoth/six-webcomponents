{"version":3,"file":"static/js/6843.02360415.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/components/six-file-upload/six-file-upload.tsx","../../../libraries/ui-library/dist/esm/src/components/six-file-upload/six-file-upload.scss?tag=six-file-upload&encapsulation=scoped"],"sourcesContent":["import { Component, Element, Event, EventEmitter, h, Listen, Prop, State } from '@stencil/core';\n\ninterface ISingleFile {\n  file: File;\n}\n\ninterface IMultipleFiles {\n  files: FileList;\n}\n\nexport type SixFileUploadSuccessPayload = ISingleFile | IMultipleFiles;\n\nexport interface SixFileUploadFailurePayload {\n  reason: string;\n}\n\n/**\n * @since 2.0.0\n * @status experimental\n *\n */\n@Component({\n  tag: 'six-file-upload',\n  styleUrl: 'six-file-upload.scss',\n  scoped: true,\n  shadow: false,\n})\nexport class SixFileUpload {\n  @Element() readonly host!: HTMLSixFileUploadElement;\n\n  private fileInput?: HTMLInputElement;\n\n  @State() isOver = false;\n\n  /** Set to true if file control should be small. */\n  @Prop() readonly compact: boolean = false;\n\n  /** Label of the drop area. */\n  @Prop() readonly label?: string;\n\n  /** Set when button is disabled. */\n  @Prop() readonly disabled = false;\n\n  /** Accepted MIME-Types. */\n  @Prop() readonly accept?: string;\n\n  /** More than one file allowed. */\n  @Prop() readonly multiple = false;\n\n  /** Allowed max file size in bytes. */\n  @Prop() readonly maxFileSize?: number;\n\n  /** Triggers when a file is added. */\n  @Event({ eventName: 'six-file-upload-success' }) success!: EventEmitter<SixFileUploadSuccessPayload>;\n\n  /** Triggers when an uploaded file doesn't match MIME type or max file size. */\n  @Event({ eventName: 'six-file-upload-failure' }) failure!: EventEmitter<SixFileUploadFailurePayload>;\n\n  @Listen('dragenter', { capture: false })\n  dragenterHandler() {\n    if (!this.disabled) {\n      this.isOver = true;\n    }\n  }\n\n  @Listen('dragover', { capture: false })\n  dragoverHandler() {\n    if (!this.disabled) {\n      this.isOver = true;\n    }\n  }\n\n  @Listen('dragleave', { capture: false })\n  dragleaveHandler() {\n    if (!this.disabled) {\n      this.isOver = false;\n    }\n  }\n\n  @Listen('drop', { capture: false })\n  dropHandler({ dataTransfer }: DragEvent) {\n    if (!this.disabled) {\n      this.isOver = false;\n      if (dataTransfer != null) {\n        this.handleFiles(dataTransfer.files);\n      }\n    }\n  }\n\n  private handleFiles = (files: FileList) => {\n    if (this.disabled || files.length === 0) {\n      return;\n    }\n\n    if (!this.multiple && files.length > 1) {\n      return this.failure.emit({ reason: 'Only one file is allowed.' });\n    }\n\n    for (const file of files) {\n      if (file == null) {\n        return;\n      }\n\n      let acceptedTypesList: string[] = [];\n      if (this.accept != null) {\n        acceptedTypesList = this.accept.replace(/\\s/g, '').split(',');\n      }\n\n      if (acceptedTypesList.length > 0 && acceptedTypesList.indexOf(file.type) === -1) {\n        const reason = files.length > 1 ? 'One or more files have invalid MIME type.' : 'File has invalid MIME type.';\n        return this.failure.emit({ reason });\n      }\n\n      if (this.maxFileSize != null && file.size > this.maxFileSize) {\n        const reason = files.length > 1 ? 'One or more files are too big' : 'File is too big.';\n        return this.failure.emit({ reason });\n      }\n    }\n\n    const eventPayload: SixFileUploadSuccessPayload = this.multiple ? { files } : { file: files[0] };\n    this.success.emit(eventPayload);\n  };\n\n  componentDidLoad() {\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {\n      this.host.addEventListener(eventName, this.preventDefaults, false);\n      document.body.addEventListener(eventName, this.preventDefaults, false);\n    });\n  }\n\n  disconnectedCallback() {\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {\n      this.host.removeEventListener(eventName, this.preventDefaults, false);\n      document.body.removeEventListener(eventName, this.preventDefaults, false);\n    });\n  }\n\n  private preventDefaults(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  private onChange = () => {\n    if (this.fileInput?.files != null) {\n      const files = this.fileInput.files;\n      this.handleFiles(files);\n      this.fileInput.value = '';\n    }\n  };\n\n  private renderLabel() {\n    return (\n      this.label ??\n      (this.compact ? (\n        'Upload'\n      ) : (\n        <span>\n          Drop files to upload, or <span class=\"six-file-upload__label--highlighted\">browse</span>\n        </span>\n      ))\n    );\n  }\n\n  render() {\n    const Container = this.compact ? 'six-button' : 'six-card';\n\n    return (\n      <div\n        class={{\n          'six-file-upload': true,\n          'six-file-upload--disabled': this.disabled,\n        }}\n      >\n        <Container\n          class={{\n            'six-file-upload__container--compact': this.compact,\n            'six-file-upload__container--full': !this.compact,\n          }}\n        >\n          {this.compact && (\n            <span slot=\"prefix\">\n              <six-icon class=\"six-file-upload__label-icon\">arrow_circle_up</six-icon>\n            </span>\n          )}\n          <div\n            class={{\n              'six-file-upload__drop-zone': true,\n              'six-file-upload__drop-zone--hover': this.isOver,\n              'six-file-upload__drop-zone--compact': this.compact,\n            }}\n          >\n            <span>{this.renderLabel()}</span>\n            <input\n              class=\"six-file-upload__input\"\n              type=\"file\"\n              name=\"resume\"\n              disabled={this.disabled}\n              accept={this.accept}\n              multiple={this.multiple}\n              onChange={this.onChange}\n              ref={(el) => (this.fileInput = el)}\n            />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","@import 'src/global/component';\n\n$over-color: var(--six-color-action-light-to-be-defined);\n$disabled-color: var(--six-color-inactive);\n$transition: 0.3s;\n$margin: 1rem;\n\n:host {\n  position: static;\n  display: block;\n}\n\n.six-file-upload {\n  six-card {\n    box-shadow: none;\n    padding: 0;\n    width: 100%;\n\n    &.kyc-file-upload__container--compact {\n      width: inherit;\n    }\n  }\n\n  &__label {\n    &--highlighted {\n      color: var(--six-color-action-600);\n    }\n  }\n\n  &__container {\n    &--full {\n      border: dashed 1px var(--six-color-web-rock-500);\n    }\n  }\n\n  &__label-icon {\n    margin-right: 0.5rem;\n  }\n\n  &__drop-zone {\n    padding: 2rem 0;\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    transition: background-color $transition;\n\n    &--compact {\n      padding: 0;\n    }\n  }\n\n  &__input {\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    user-select: none;\n    height: 100%;\n    opacity: 0;\n    outline: none;\n  }\n\n  &--disabled &__drop-zone {\n    background-color: $disabled-color;\n  }\n\n  &:not(.six-file-upload--disabled) &__drop-zone:hover,\n  &__drop-zone--hover {\n    background-color: $over-color;\n\n    &.six-file-upload__drop-zone--compact {\n      background-color: inherit;\n    }\n  }\n\n  &--disabled &__input {\n    cursor: not-allowed;\n  }\n}\n"],"names":["SixFileUpload","handleFiles","files","disabled","length","multiple","failure","emit","reason","file","acceptedTypesList","accept","replace","split","indexOf","type","maxFileSize","size","eventPayload","success","onChange","fileInput","value","this","isOver","dataTransfer","forEach","eventName","host","addEventListener","preventDefaults","document","body","removeEventListener","e","preventDefault","stopPropagation","label","compact","h","class","Container","slot","renderLabel","name","ref","el"],"sourceRoot":""}