{"version":3,"file":"static/js/2282.ebb754dc.chunk.js","mappings":"iPAmBaA,EAAe,W,wDAIX,I,iBAGO,E,gBAGD,C,sDAGrB,WACEC,KAAKC,gB,GACN,8BAED,WACED,KAAKC,gB,GACN,4BAEO,W,MACN,GAAyB,OAAP,QAAd,EAAAD,KAAKE,iBAAS,eAAEC,GAApB,CAEA,IACMC,EAAyB,EADhBJ,KAAKE,UAAUC,EAAEE,QAAQC,MACLC,KAAKC,GAClCC,EAASL,EAAiBJ,KAAKU,WAAa,IAAON,EAEzDJ,KAAKE,UAAUS,MAAMC,gBAAkB,GAAH,OAAMR,EAAa,YAAIA,GAC3DJ,KAAKE,UAAUS,MAAME,iBAAmB,GAAH,OAAMJ,EAPN,C,GAQtC,oBAED,WAAM,WACJ,OACEK,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,KAAK,OAAOC,MAAM,kBACrBF,EAAAA,EAAAA,GAAAA,MAAAA,CAAKE,MAAM,uBAAuBC,MAAOjB,KAAKkB,KAAMC,OAAQnB,KAAKkB,OAC/DJ,EAAAA,EAAAA,GAAAA,SAAAA,CACEE,MAAM,uBAAsB,eACdhB,KAAKoB,YAAW,iBACf,QACfC,KAAK,cACLlB,EAAGH,KAAKkB,KAAO,EAAuB,EAAnBlB,KAAKoB,YACxBE,GAAItB,KAAKkB,KAAO,EAChBK,GAAIvB,KAAKkB,KAAO,KAGlBJ,EAAAA,EAAAA,GAAAA,SAAAA,CACEU,IAAK,SAACC,GAAE,OAAM,EAAKvB,UAAYuB,CAAsB,EACrDT,MAAM,2BAA0B,eAClBhB,KAAKoB,YAAW,iBACf,QACfC,KAAK,cACLlB,EAAGH,KAAKkB,KAAO,EAAuB,EAAnBlB,KAAKoB,YACxBE,GAAItB,KAAKkB,KAAO,EAChBK,GAAIvB,KAAKkB,KAAO,MAIpBJ,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,KAAK,QAAQC,MAAM,yBACvBF,EAAAA,EAAAA,GAAAA,OAAAA,O,IAIP,gC,oDA/DyB,G,QCnBD,+uB","sources":["../../../libraries/ui-library/dist/esm/src/components/six-progress-ring/six-progress-ring.tsx","../../../libraries/ui-library/dist/esm/src/components/six-progress-ring/six-progress-ring.scss?tag=six-progress-ring&encapsulation=shadow"],"sourcesContent":["import { Component, h, Prop, Watch } from '@stencil/core';\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - A label to show inside the ring.\n *\n * @part base - The component's base wrapper.\n * @part label - The progress ring label.\n */\n\n@Component({\n  tag: 'six-progress-ring',\n  styleUrl: 'six-progress-ring.scss',\n  shadow: true,\n})\nexport class SixProgressRing {\n  private indicator?: SVGCircleElement;\n\n  /** The size of the progress ring in pixels. */\n  @Prop() size = 128;\n\n  /** The stroke width of the progress ring in pixels. */\n  @Prop() strokeWidth = 4;\n\n  /** The current progress percentage, 0 - 100. */\n  @Prop() percentage = 0;\n\n  @Watch('percentage')\n  handlePercentageChange() {\n    this.updateProgress();\n  }\n\n  componentDidLoad() {\n    this.updateProgress();\n  }\n\n  private updateProgress() {\n    if (this.indicator?.r == null) return;\n\n    const radius = this.indicator.r.baseVal.value;\n    const circumference = radius * 2 * Math.PI;\n    const offset = circumference - (this.percentage / 100) * circumference;\n\n    this.indicator.style.strokeDasharray = `${circumference} ${circumference}`;\n    this.indicator.style.strokeDashoffset = `${offset}`;\n  }\n\n  render() {\n    return (\n      <div part=\"base\" class=\"progress-ring\">\n        <svg class=\"progress-ring__image\" width={this.size} height={this.size}>\n          <circle\n            class=\"progress-ring__track\"\n            stroke-width={this.strokeWidth}\n            stroke-linecap=\"round\"\n            fill=\"transparent\"\n            r={this.size / 2 - this.strokeWidth * 2}\n            cx={this.size / 2}\n            cy={this.size / 2}\n          />\n\n          <circle\n            ref={(el) => (this.indicator = el as SVGCircleElement)}\n            class=\"progress-ring__indicator\"\n            stroke-width={this.strokeWidth}\n            stroke-linecap=\"round\"\n            fill=\"transparent\"\n            r={this.size / 2 - this.strokeWidth * 2}\n            cx={this.size / 2}\n            cy={this.size / 2}\n          />\n        </svg>\n\n        <span part=\"label\" class=\"progress-ring__label\">\n          <slot />\n        </span>\n      </div>\n    );\n  }\n}\n","@import 'src/global/component';\n\n/**\n * @prop --track-color: The track color.\n * @prop --indicator-color: The indicator color.\n */\n:host {\n  --track-color: var(--six-progress-track-color);\n  --indicator-color: var(--six-progress-indicator-color);\n\n  display: inline-flex;\n}\n\n.progress-ring {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.progress-ring__image {\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n}\n\n.progress-ring__track {\n  stroke: var(--track-color);\n}\n\n.progress-ring__indicator {\n  stroke: var(--indicator-color);\n  transition: 0.35s stroke-dashoffset, 0.35s stroke;\n}\n\n.progress-ring__label {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  user-select: none;\n  font-family: var(--six-font-family);\n}\n"],"names":["SixProgressRing","this","updateProgress","indicator","r","circumference","baseVal","value","Math","PI","offset","percentage","style","strokeDasharray","strokeDashoffset","h","part","class","width","size","height","strokeWidth","fill","cx","cy","ref","el"],"sourceRoot":""}