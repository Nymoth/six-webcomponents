{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/slot-5253e199.js","../node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js","../node_modules/@six/ui-library/dist/esm/form-control-17478ad2.js","../node_modules/@six/ui-library/dist/esm/six-checkbox.entry.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","el","name","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","Object","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","EventListeners","this","eventListeners","add","listener","identifier","push","addEventListener","remove","a","sameItem","b","keys","every","key","getFilteredEventListeners","removeByIdentifier","undefined","find","removeAll","length","pop","removeEventListener","filter","item","FormControl","props","children","hasLabel","label","hasLabelSlot","hasHelpText","helpText","hasHelpTextSlot","useErrorTextAttribute","errorText","hasErrorTextSlot","h","part","class","size","displayError","disabled","id","labelId","required","htmlFor","inputId","onClick","onLabelClick","errorTextId","helpTextId","SixCheckbox","hostRef","registerInstance","sixBlur","createEvent","sixChange","sixFocus","customErrorText","customValidation","hasFocus","checked","indeterminate","invalid","errorOnBlur","defaultState","input","checkValidity","emit","handleSlotChange","handleClick","bind","handleBlur","handleFocus","handleMouseDown","handleInvalid","shadowRoot","event","validationMessage","preventDefault","options","focus","blur","reportValidity","validity","valid","message","setCustomValidity","checkbox","onMouseDown","viewBox","stroke","fill","transform","d","ref","type","value","role","onBlur","onFocus","onInvalid","getElement","style","_defineProperty","obj","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/11.140e5a4c.chunk.js","sourcesContent":["//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n","import { h } from './index-a2605a62.js';\n\nconst FormControl = (props, children) => {\r\n  const hasLabel = props.label ? true : props.hasLabelSlot;\r\n  const hasHelpText = props.helpText ? true : props.hasHelpTextSlot;\r\n  /** ErrorTextAttribute has precedence if non empty value is provided or if slot is not set */\r\n  const useErrorTextAttribute = (props.errorText && props.errorText !== '') || !props.hasErrorTextSlot;\r\n  return (h(\"div\", { part: \"form-control\", class: {\r\n      'form-control': true,\r\n      'form-control--small': props.size === 'small',\r\n      'form-control--medium': props.size === 'medium',\r\n      'form-control--large': props.size === 'large',\r\n      'form-control--has-label': hasLabel,\r\n      'form-control--has-help-text': hasHelpText,\r\n      'form-control--has-error-text': props.displayError,\r\n      'form-control--disabled': props.disabled,\r\n      'form-control--invalid': props.displayError && !props.disabled,\r\n    } },\r\n    h(\"label\", { part: \"label\", id: props.labelId, class: {\r\n        'form-control__label': true,\r\n        'form-control__label__required': props.required,\r\n      }, htmlFor: props.inputId, \"aria-hidden\": hasLabel ? 'false' : 'true', onClick: props.onLabelClick },\r\n      h(\"slot\", { name: \"label\" }, props.label)),\r\n    h(\"div\", { class: \"form-control__input\" }, children),\r\n    h(\"div\", { part: \"error-text\", id: props.errorTextId, class: \"form-control__error-text\", \"aria-hidden\": props.displayError ? 'false' : 'true' }, useErrorTextAttribute ? props.errorText : h(\"slot\", { name: \"error-text\" })),\r\n    h(\"div\", { part: \"help-text\", id: props.helpTextId, class: \"form-control__help-text\", \"aria-hidden\": hasHelpText ? 'false' : 'true' },\r\n      h(\"slot\", { name: \"help-text\" }, props.helpText))));\r\n};\n\nexport { FormControl as F };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { F as FormControl } from './form-control-17478ad2.js';\nimport { h as hasSlot } from './slot-5253e199.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\n\nconst sixCheckboxCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\\\"*\\\"}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;color:var(--six-color-danger-800);margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:inline-block}.checkbox{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.checkbox__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size);border:solid var(--six-border-width) var(--six-input-border-color);border-radius:0;background-color:var(--six-input-background-color);color:var(--six-checkbox-color);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow}.checkbox__control input[type=checkbox]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none}.checkbox__control .checkbox__icon{display:inline-flex;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size)}.checkbox__control .checkbox__icon svg{width:100%;height:100%}.checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-hover)}.checkbox--checked .checkbox__control,.checkbox--indeterminate .checkbox__control{border-color:var(--six-selection-control-color);background-color:var(--six-selection-control-color)}.checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__control:hover,.checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-focus);background-color:var(--six-input-border-color-focus)}.checkbox--disabled{cursor:not-allowed;color:var(--six-input-color-disabled)}.checkbox--disabled .checkbox__control{border-color:var(--six-input-border-color-disabled)}.checkbox--disabled.checkbox--checked .checkbox__control,.checkbox--disabled.checkbox--indeterminate .checkbox__control{background-color:var(--six-selection-control-color-disabled)}.checkbox--invalid:not(.checkbox--disabled) .checkbox__control{border-color:var(--six-input-border-color-danger)}.checkbox__label{line-height:var(--six-selection-control-toggle-size);margin-left:0.5em;user-select:none}\";\n\nlet id = 0;\r\nlet SixCheckbox = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixBlur = createEvent(this, \"six-checkbox-blur\", 7);\r\n    this.sixChange = createEvent(this, \"six-checkbox-change\", 7);\r\n    this.sixFocus = createEvent(this, \"six-checkbox-focus\", 7);\r\n    this.inputId = `checkbox-${++id}`;\r\n    this.labelId = `checkbox-label-${id}`;\r\n    this.errorTextId = `input-error-text-${id}`;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.eventListeners = new EventListeners();\r\n    this.hasFocus = false;\r\n    this.hasErrorTextSlot = false;\r\n    /** Set to true to disable the checkbox. */\r\n    this.disabled = false;\r\n    /** Set to true to make the checkbox a required field. */\r\n    this.required = false;\r\n    /** The checkbox's error text. Alternatively, you can use the error-text slot. */\r\n    this.errorText = '';\r\n    /** Set to true to draw the checkbox in a checked state. */\r\n    this.checked = false;\r\n    /** Set to true to draw the checkbox in an indeterminate state. */\r\n    this.indeterminate = false;\r\n    /** This will be true when the control is in an invalid state. Validity is determined by the `required` prop. */\r\n    this.invalid = false;\r\n    /** Set to display the error text on blur and not when typing */\r\n    this.errorOnBlur = false;\r\n    /** default state whether the radio button should be checked or not when resetting */\r\n    this.defaultState = false;\r\n  }\r\n  handleCheckedChange() {\r\n    if (!this.input) {\r\n      return;\r\n    }\r\n    this.input.checked = this.checked;\r\n    this.input.indeterminate = this.indeterminate;\r\n    this.invalid = !this.input.checkValidity();\r\n    this.sixChange.emit();\r\n  }\r\n  handleLabelChange() {\r\n    this.handleSlotChange();\r\n  }\r\n  connectedCallback() {\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleInvalid = this.handleInvalid.bind(this);\r\n    this.host.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\r\n  }\r\n  disconnectedCallback() {\r\n    this.host.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\r\n    this.eventListeners.removeAll();\r\n  }\r\n  componentWillLoad() {\r\n    this.defaultState = this.checked;\r\n  }\r\n  componentDidLoad() {\r\n    this.input.indeterminate = this.indeterminate;\r\n    this.eventListeners.add(this.input, 'invalid', (event) => {\r\n      if (this.customValidation || (!this.hasErrorTextSlot && !this.errorText && !this.customErrorText)) {\r\n        this.customErrorText = this.input.validationMessage;\r\n      }\r\n      event.preventDefault();\r\n    });\r\n  }\r\n  /** Sets focus on the checkbox. */\r\n  async setFocus(options) {\r\n    this.input.focus(options);\r\n  }\r\n  /** Removes focus from the checkbox. */\r\n  async removeFocus() {\r\n    this.input.blur();\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.input.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.input.validity.valid;\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    this.customErrorText = '';\r\n    this.customValidation = message !== '';\r\n    this.input.setCustomValidity(message);\r\n    this.invalid = !this.input.checkValidity();\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.checked = this.defaultState;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.input.setCustomValidity('');\r\n    this.invalid = false;\r\n  }\r\n  handleClick() {\r\n    this.checked = this.input.checked;\r\n    this.indeterminate = false;\r\n  }\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n    this.sixBlur.emit();\r\n  }\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n    this.sixFocus.emit();\r\n  }\r\n  handleMouseDown(event) {\r\n    // Prevent clicks on the label from briefly blurring the input\r\n    event.preventDefault();\r\n    this.input.focus();\r\n  }\r\n  handleInvalid() {\r\n    this.invalid = true;\r\n  }\r\n  handleSlotChange() {\r\n    this.hasErrorTextSlot = hasSlot(this.host, 'error-text');\r\n  }\r\n  displayError() {\r\n    return this.invalid && (!this.errorOnBlur || !this.hasFocus);\r\n  }\r\n  render() {\r\n    return (h(FormControl, { inputId: this.inputId, errorTextId: this.errorTextId, errorText: this.customErrorText ? this.customErrorText : this.errorText, hasErrorTextSlot: this.hasErrorTextSlot, size: \"medium\", disabled: this.disabled, required: this.required, displayError: this.displayError() }, h(\"label\", { part: \"base\", class: {\r\n        checkbox: true,\r\n        'checkbox--checked': this.checked,\r\n        'checkbox--disabled': this.disabled,\r\n        'checkbox--focused': this.hasFocus,\r\n        'checkbox--invalid': this.invalid,\r\n        'checkbox--indeterminate': this.indeterminate,\r\n      }, htmlFor: this.inputId, onMouseDown: this.handleMouseDown }, h(\"span\", { part: \"control\", class: \"checkbox__control\" }, this.checked && (h(\"span\", { part: \"checked-icon\", class: \"checkbox__icon\" }, h(\"svg\", { viewBox: \"0 0 16 16\" }, h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\", \"stroke-linecap\": \"round\" }, h(\"g\", { stroke: \"currentColor\", \"stroke-width\": \"2\" }, h(\"g\", { transform: \"translate(3.428571, 3.428571)\" }, h(\"path\", { d: \"M0,5.71428571 L3.42857143,9.14285714\" }), h(\"path\", { d: \"M9.14285714,0 L3.42857143,9.14285714\" }))))))), !this.checked && this.indeterminate && (h(\"span\", { part: \"indeterminate-icon\", class: \"checkbox__icon\" }, h(\"svg\", { viewBox: \"0 0 16 16\" }, h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\", \"stroke-linecap\": \"round\" }, h(\"g\", { stroke: \"currentColor\", \"stroke-width\": \"2\" }, h(\"g\", { transform: \"translate(2.285714, 6.857143)\" }, h(\"path\", { d: \"M10.2857143,1.14285714 L1.14285714,1.14285714\" }))))))), h(\"input\", { ref: (el) => (this.input = el), id: this.inputId, type: \"checkbox\", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, required: this.required, role: \"checkbox\", \"aria-checked\": this.checked ? 'true' : 'false', \"aria-labelledby\": this.labelId, onClick: this.handleClick, onBlur: this.handleBlur, onFocus: this.handleFocus, onInvalid: this.handleInvalid })), h(\"span\", { part: \"label\", id: this.labelId, class: \"checkbox__label\" }, h(\"slot\", null)))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"checked\": [\"handleCheckedChange\"],\r\n    \"indeterminate\": [\"handleCheckedChange\"],\r\n    \"errorText\": [\"handleLabelChange\"]\r\n  }; }\r\n};\r\nSixCheckbox.style = sixCheckboxCss;\n\nexport { SixCheckbox as six_checkbox };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}