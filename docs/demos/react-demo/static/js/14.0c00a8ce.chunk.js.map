{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/slot-5253e199.js","../node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js","../node_modules/@six/ui-library/dist/esm/form-control-17478ad2.js","../node_modules/@six/ui-library/dist/esm/six-textarea.entry.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","el","name","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","Object","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","EventListeners","this","eventListeners","add","listener","identifier","push","addEventListener","remove","a","sameItem","b","keys","every","key","getFilteredEventListeners","removeByIdentifier","undefined","find","removeAll","length","pop","removeEventListener","filter","item","FormControl","props","children","hasLabel","label","hasLabelSlot","hasHelpText","helpText","hasHelpTextSlot","useErrorTextAttribute","errorText","hasErrorTextSlot","h","part","class","size","displayError","disabled","id","labelId","required","htmlFor","inputId","onClick","onLabelClick","errorTextId","helpTextId","SixTextarea","hostRef","registerInstance","sixChange","createEvent","sixInput","sixFocus","sixBlur","sixValueChange","customErrorText","customValidation","hasFocus","value","rows","resize","readonly","invalid","errorOnBlur","defaultValue","handleSlotChange","textarea","setTextareaHeight","checkValidity","emit","handleChange","bind","handleInput","handleInvalid","handleBlur","handleFocus","shadowRoot","resizeObserver","ResizeObserver","observe","event","validationMessage","preventDefault","unobserve","options","focus","blur","select","selectionStart","selectionEnd","selectionDirection","setSelectionRange","replacement","start","end","selectMode","setRangeText","reportValidity","validity","valid","message","setCustomValidity","style","height","scrollHeight","ref","placeholder","readOnly","minLength","minlength","maxLength","maxlength","autoCapitalize","autocapitalize","autoCorrect","autocorrect","autoFocus","autofocus","spellcheck","inputMode","inputmode","onChange","onInput","onInvalid","onFocus","onBlur","getElement","_defineProperty","obj","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/14.0c00a8ce.chunk.js","sourcesContent":["//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n","import { h } from './index-a2605a62.js';\n\nconst FormControl = (props, children) => {\r\n  const hasLabel = props.label ? true : props.hasLabelSlot;\r\n  const hasHelpText = props.helpText ? true : props.hasHelpTextSlot;\r\n  /** ErrorTextAttribute has precedence if non empty value is provided or if slot is not set */\r\n  const useErrorTextAttribute = (props.errorText && props.errorText !== '') || !props.hasErrorTextSlot;\r\n  return (h(\"div\", { part: \"form-control\", class: {\r\n      'form-control': true,\r\n      'form-control--small': props.size === 'small',\r\n      'form-control--medium': props.size === 'medium',\r\n      'form-control--large': props.size === 'large',\r\n      'form-control--has-label': hasLabel,\r\n      'form-control--has-help-text': hasHelpText,\r\n      'form-control--has-error-text': props.displayError,\r\n      'form-control--disabled': props.disabled,\r\n      'form-control--invalid': props.displayError && !props.disabled,\r\n    } },\r\n    h(\"label\", { part: \"label\", id: props.labelId, class: {\r\n        'form-control__label': true,\r\n        'form-control__label__required': props.required,\r\n      }, htmlFor: props.inputId, \"aria-hidden\": hasLabel ? 'false' : 'true', onClick: props.onLabelClick },\r\n      h(\"slot\", { name: \"label\" }, props.label)),\r\n    h(\"div\", { class: \"form-control__input\" }, children),\r\n    h(\"div\", { part: \"error-text\", id: props.errorTextId, class: \"form-control__error-text\", \"aria-hidden\": props.displayError ? 'false' : 'true' }, useErrorTextAttribute ? props.errorText : h(\"slot\", { name: \"error-text\" })),\r\n    h(\"div\", { part: \"help-text\", id: props.helpTextId, class: \"form-control__help-text\", \"aria-hidden\": hasHelpText ? 'false' : 'true' },\r\n      h(\"slot\", { name: \"help-text\" }, props.helpText))));\r\n};\n\nexport { FormControl as F };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { F as FormControl } from './form-control-17478ad2.js';\nimport { h as hasSlot } from './slot-5253e199.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\n\nconst sixTextareaCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\\\"*\\\"}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;color:var(--six-color-danger-800);margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:block}.textarea{display:flex;align-items:center;position:relative;width:100%;font-family:var(--six-font-family);font-weight:var(--six-input-font-weight);line-height:var(--six-line-height-normal);letter-spacing:var(--six-input-letter-spacing);background-color:var(--six-input-background-color);border:solid var(--six-border-width) var(--six-input-border-color);vertical-align:middle;transition:var(--six-transition-fast) color, var(--six-transition-fast) border, var(--six-transition-fast) box-shadow;cursor:text}.textarea:hover:not(.textarea--disabled){background-color:var(--six-input-background-color-hover);border-color:var(--six-input-border-color-hover)}.textarea:hover:not(.textarea--disabled) .textarea__control{color:var(--six-input-color-hover)}.textarea.textarea--focused:not(.textarea--disabled){background-color:var(--six-input-background-color-focus);box-shadow:var(--six-input-focus-shadow);border-color:var(--six-input-border-color-focus);color:var(--six-input-color-focus)}.textarea.textarea--focused:not(.textarea--disabled) .textarea__control{color:var(--six-input-color-focus)}.textarea.textarea--disabled{background-color:var(--six-input-background-color-disabled);border-color:var(--six-input-border-color-disabled);cursor:not-allowed}.textarea.textarea--disabled .textarea__control{color:var(--six-input-color-disabled)}.textarea.textarea--disabled .textarea__control::placeholder{color:var(--six-input-placeholder-color-disabled)}.textarea__control{flex:1 1 auto;font-family:inherit;font-size:inherit;font-weight:inherit;line-height:1.4;color:var(--sl-input-color);border:none;background:none;box-shadow:none;cursor:inherit;-webkit-appearance:none}.textarea__control::-webkit-search-decoration,.textarea__control::-webkit-search-cancel-button,.textarea__control::-webkit-search-results-button,.textarea__control::-webkit-search-results-decoration{-webkit-appearance:none}.textarea__control::placeholder{color:var(--six-input-placeholder-color);user-select:none}.textarea__control:focus{outline:none}.textarea--invalid:not(.textarea--disabled):not(.textarea--focused){border-color:var(--six-input-border-color-danger)}.textarea--small{border-radius:var(--six-input-border-radius-small);font-size:var(--six-input-font-size-small)}.textarea--small .textarea__control{padding:0.5em var(--six-input-spacing-small)}.textarea--medium{border-radius:var(--six-input-border-radius-medium);font-size:var(--six-input-font-size-medium)}.textarea--medium .textarea__control{padding:0.5em var(--six-input-spacing-medium)}.textarea--large{border-radius:var(--six-input-border-radius-large);font-size:var(--six-input-font-size-large)}.textarea--large .textarea__control{padding:0.5em var(--six-input-spacing-large)}.textarea--resize-none .textarea__control{resize:none}.textarea--resize-vertical .textarea__control{resize:vertical}.textarea--resize-auto .textarea__control{height:auto;resize:none}\";\n\nlet id = 0;\r\nlet SixTextarea = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixChange = createEvent(this, \"six-textarea-change\", 7);\r\n    this.sixInput = createEvent(this, \"six-textarea-input\", 7);\r\n    this.sixFocus = createEvent(this, \"six-textarea-focus\", 7);\r\n    this.sixBlur = createEvent(this, \"six-textarea-blur\", 7);\r\n    this.sixValueChange = createEvent(this, \"six-textarea-value-change\", 7);\r\n    this.inputId = `textarea-${++id}`;\r\n    this.labelId = `textarea-label-${id}`;\r\n    this.helpTextId = `textarea-help-text-${id}`;\r\n    this.errorTextId = `input-error-text-${id}`;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.eventListeners = new EventListeners();\r\n    this.hasFocus = false;\r\n    this.hasHelpTextSlot = false;\r\n    this.hasErrorTextSlot = false;\r\n    this.hasLabelSlot = false;\r\n    /** The textarea's size. */\r\n    this.size = 'medium';\r\n    /** The textarea's name attribute. */\r\n    this.name = '';\r\n    /** The textarea's value attribute. */\r\n    this.value = '';\r\n    /** The textarea's label. Alternatively, you can use the label slot. */\r\n    this.label = '';\r\n    /** The textarea's help text. Alternatively, you can use the help-text slot. */\r\n    this.helpText = '';\r\n    /** The textarea's error text. Alternatively, you can use the error-text slot. */\r\n    this.errorText = '';\r\n    /** The number of rows to display by default. */\r\n    this.rows = 4;\r\n    /** Controls how the textarea can be resized. */\r\n    this.resize = 'vertical';\r\n    /** Set to true to disable the textarea. */\r\n    this.disabled = false;\r\n    /** Set to true for a readonly textarea. */\r\n    this.readonly = false;\r\n    /**\r\n     * This will be true when the control is in an invalid state. Validity is determined by props such as `required`,\r\n     * `minlength`, and `maxlength` using the browser's constraint validation API.\r\n     */\r\n    this.invalid = false;\r\n    /** Set to display the error text on blur and not when typing */\r\n    this.errorOnBlur = false;\r\n    /** default value the textarea will be reverted to when reset is executed */\r\n    this.defaultValue = '';\r\n  }\r\n  handleLabelChange() {\r\n    this.handleSlotChange();\r\n  }\r\n  handleRowsChange() {\r\n    if (this.textarea) {\r\n      this.setTextareaHeight();\r\n    }\r\n  }\r\n  handleValueChange() {\r\n    if (!this.textarea) {\r\n      return;\r\n    }\r\n    this.textarea.value = this.value;\r\n    this.invalid = !this.textarea.checkValidity();\r\n    this.sixValueChange.emit();\r\n  }\r\n  connectedCallback() {\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleInvalid = this.handleInvalid.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleSlotChange = this.handleSlotChange.bind(this);\r\n    this.host.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\r\n  }\r\n  componentWillLoad() {\r\n    this.defaultValue = this.value || '';\r\n    this.handleSlotChange();\r\n  }\r\n  componentDidLoad() {\r\n    this.setTextareaHeight();\r\n    this.resizeObserver = new ResizeObserver(() => this.setTextareaHeight());\r\n    this.resizeObserver.observe(this.textarea);\r\n    this.eventListeners.add(this.textarea, 'invalid', (event) => {\r\n      if (this.customValidation || (!this.hasErrorTextSlot && !this.errorText && !this.customErrorText)) {\r\n        this.customErrorText = this.textarea.validationMessage;\r\n      }\r\n      event.preventDefault();\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    this.resizeObserver.unobserve(this.textarea);\r\n    this.host.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\r\n    this.eventListeners.removeAll();\r\n  }\r\n  /** Sets focus on the textarea. */\r\n  async setFocus(options) {\r\n    this.textarea.focus(options);\r\n  }\r\n  /** Removes focus fromt the textarea. */\r\n  async removeFocus() {\r\n    this.textarea.blur();\r\n  }\r\n  /** Selects all the text in the input. */\r\n  async select() {\r\n    return this.textarea.select();\r\n  }\r\n  /** Sets the start and end positions of the text selection (0-based). */\r\n  async setSelectionRange(selectionStart, selectionEnd, selectionDirection = 'none') {\r\n    return this.textarea.setSelectionRange(selectionStart, selectionEnd, selectionDirection);\r\n  }\r\n  /** Replaces a range of text with a new string. */\r\n  async setRangeText(replacement, start, end, selectMode = 'preserve') {\r\n    this.textarea.setRangeText(replacement, start, end, selectMode);\r\n    if (this.value !== this.textarea.value) {\r\n      this.value = this.textarea.value;\r\n      this.setTextareaHeight();\r\n      this.sixChange.emit();\r\n      this.sixInput.emit();\r\n    }\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.textarea.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.textarea.validity.valid;\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    this.customErrorText = '';\r\n    this.customValidation = message !== '';\r\n    this.textarea.setCustomValidity(message);\r\n    this.invalid = !this.textarea.checkValidity();\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.value = this.defaultValue;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.textarea.setCustomValidity('');\r\n    this.invalid = false;\r\n  }\r\n  handleChange() {\r\n    this.sixChange.emit();\r\n  }\r\n  handleInput() {\r\n    this.value = this.textarea.value;\r\n    this.setTextareaHeight();\r\n    this.sixInput.emit();\r\n  }\r\n  handleInvalid() {\r\n    this.invalid = true;\r\n  }\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n    this.sixBlur.emit();\r\n  }\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n    this.sixFocus.emit();\r\n  }\r\n  handleSlotChange() {\r\n    this.hasLabelSlot = hasSlot(this.host, 'label');\r\n    this.hasHelpTextSlot = hasSlot(this.host, 'help-text');\r\n    this.hasErrorTextSlot = hasSlot(this.host, 'error-text');\r\n  }\r\n  setTextareaHeight() {\r\n    if (this.resize === 'auto') {\r\n      this.textarea.style.height = 'auto';\r\n      this.textarea.style.height = this.textarea.scrollHeight + 'px';\r\n    }\r\n    else {\r\n      this.textarea.style.height = undefined;\r\n    }\r\n  }\r\n  displayError() {\r\n    return this.invalid && (!this.errorOnBlur || !this.hasFocus);\r\n  }\r\n  render() {\r\n    var _a;\r\n    return (h(FormControl, { inputId: this.inputId, label: this.label, labelId: this.labelId, hasLabelSlot: this.hasLabelSlot, helpTextId: this.helpTextId, helpText: this.helpText, hasHelpTextSlot: this.hasHelpTextSlot, errorTextId: this.errorTextId, errorText: this.customErrorText ? this.customErrorText : this.errorText, hasErrorTextSlot: this.hasErrorTextSlot, size: this.size, disabled: this.disabled, required: this.required, displayError: this.displayError() }, h(\"div\", { part: \"base\", class: {\r\n        textarea: true,\r\n        // Sizes\r\n        'textarea--small': this.size === 'small',\r\n        'textarea--medium': this.size === 'medium',\r\n        'textarea--large': this.size === 'large',\r\n        // States\r\n        'textarea--disabled': this.disabled,\r\n        'textarea--focused': this.hasFocus,\r\n        'textarea--empty': ((_a = this.value) === null || _a === void 0 ? void 0 : _a.length) === 0,\r\n        'textarea--invalid': this.invalid,\r\n        // Modifiers\r\n        'textarea--resize-none': this.resize === 'none',\r\n        'textarea--resize-vertical': this.resize === 'vertical',\r\n        'textarea--resize-auto': this.resize === 'auto',\r\n      } }, h(\"textarea\", { part: \"textarea\", ref: (el) => (this.textarea = el), id: this.inputId, class: \"textarea__control\", name: this.name, placeholder: this.placeholder, disabled: this.disabled, readOnly: this.readonly, rows: this.rows, minLength: this.minlength, maxLength: this.maxlength, value: this.value, autoCapitalize: this.autocapitalize, autoCorrect: this.autocorrect, autoFocus: this.autofocus, spellcheck: this.spellcheck, required: this.required, inputMode: this.inputmode, \"aria-labelledby\": this.labelId, onChange: this.handleChange, onInput: this.handleInput, onInvalid: this.handleInvalid, onFocus: this.handleFocus, onBlur: this.handleBlur }))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"helpText\": [\"handleLabelChange\"],\r\n    \"errorText\": [\"handleLabelChange\"],\r\n    \"label\": [\"handleLabelChange\"],\r\n    \"rows\": [\"handleRowsChange\"],\r\n    \"value\": [\"handleValueChange\"]\r\n  }; }\r\n};\r\nSixTextarea.style = sixTextareaCss;\n\nexport { SixTextarea as six_textarea };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}