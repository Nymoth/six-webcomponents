{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/six-alert.entry.js"],"names":["toastStack","Object","assign","document","createElement","className","SixAlert","hostRef","registerInstance","this","sixShow","createEvent","sixAfterShow","sixHide","sixAfterHide","isVisible","open","closable","type","duration","Infinity","show","hide","restartAutoHide","handleCloseClick","bind","handleMouseMove","handleTransitionEnd","a","emit","defaultPrevented","autoHideTimeout","setTimeout","clearTimeout","Promise","resolve","parentElement","body","append","host","requestAnimationFrame","addEventListener","remove","querySelector","once","event","target","propertyName","classList","contains","h","ref","el","alert","part","class","role","onMouseMove","onTransitionEnd","name","exportparts","onClick","getElement","style"],"mappings":"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","file":"static/js/33.63786dbc.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\n\nconst sixAlertCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:contents;margin:0}.alert{position:relative;display:flex;align-items:stretch;background-color:var(--six-color-white);border:solid 1px var(--six-color-web-rock-200);border-top-width:3px;border-radius:var(--six-border-radius-medium);box-shadow:var(--box-shadow);font-family:var(--six-font-sans);font-size:var(--six-font-size-small);font-weight:var(--six-font-weight-normal);line-height:1.6;color:var(--six-color-web-rock-700);opacity:0;transform:scale(0.9);transition:var(--six-transition-medium) opacity ease, var(--six-transition-medium) transform ease;margin:inherit}.alert:not(.alert--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.alert--open{opacity:1;transform:none}.alert__icon{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-large)}.alert__icon ::slotted(*){margin-left:var(--six-spacing-large)}.alert--primary{border-top-color:var(--six-color-web-rock-900)}.alert--primary .alert__icon{color:var(--six-color-web-rock-900)}.alert--success{border-top-color:var(--six-color-success-600)}.alert--success .alert__icon{color:var(--six-color-success-600)}.alert--info{border-top-color:var(--six-color-action-500)}.alert--info .alert__icon{color:var(--six-color-action-500)}.alert--warning{border-top-color:var(--six-color-warning-800)}.alert--warning .alert__icon{color:var(--six-color-warning-800)}.alert--danger{border-top-color:var(--six-color-danger-900)}.alert--danger .alert__icon{color:var(--six-color-danger-900)}.alert__message{flex:1 1 auto;padding:var(--six-spacing-large);overflow:hidden}.alert__close{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-large);padding-right:var(--six-spacing-medium)}\";\n\nconst toastStack = Object.assign(document.createElement('div'), { className: 'six-toast-stack' });\r\nlet SixAlert = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixShow = createEvent(this, \"six-alert-show\", 7);\r\n    this.sixAfterShow = createEvent(this, \"six-alert-after-show\", 7);\r\n    this.sixHide = createEvent(this, \"six-alert-hide\", 7);\r\n    this.sixAfterHide = createEvent(this, \"six-alert-after-hide\", 7);\r\n    this.isVisible = false;\r\n    /** Indicates whether or not the alert is open. You can use this in lieu of the show/hide methods. */\r\n    this.open = false;\r\n    /** Set to true to make the alert closable. */\r\n    this.closable = false;\r\n    /** The type of alert. */\r\n    this.type = 'primary';\r\n    /**\r\n     * The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with the\r\n     * alert before it closes (e.g. moves the mouse over it), the timer will restart.\r\n     */\r\n    this.duration = Infinity;\r\n  }\r\n  handleOpenChange() {\r\n    this.open ? this.show() : this.hide();\r\n  }\r\n  handleDurationChange() {\r\n    this.restartAutoHide();\r\n  }\r\n  connectedCallback() {\r\n    this.handleCloseClick = this.handleCloseClick.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n  }\r\n  componentWillLoad() {\r\n    // Show on init if open\r\n    if (this.open) {\r\n      this.show();\r\n    }\r\n  }\r\n  /** Shows the alert. */\r\n  async show() {\r\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\r\n    if (this.isVisible) {\r\n      return;\r\n    }\r\n    const sixShow = this.sixShow.emit();\r\n    if (sixShow.defaultPrevented) {\r\n      this.open = false;\r\n      return;\r\n    }\r\n    this.isVisible = true;\r\n    this.open = true;\r\n    if (this.duration < Infinity) {\r\n      this.autoHideTimeout = setTimeout(() => this.hide(), this.duration);\r\n    }\r\n  }\r\n  /** Hides the alert */\r\n  async hide() {\r\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\r\n    if (!this.isVisible) {\r\n      return;\r\n    }\r\n    const sixHide = this.sixHide.emit();\r\n    if (sixHide.defaultPrevented) {\r\n      this.open = true;\r\n      return;\r\n    }\r\n    clearTimeout(this.autoHideTimeout);\r\n    this.isVisible = false;\r\n    this.open = false;\r\n  }\r\n  /**\r\n   * Displays the alert as a toast notification. This will move the alert out of its position in the DOM and, when\r\n   * dismissed, it will be removed from the DOM completely. By storing a reference to the alert, you can reuse it by\r\n   * calling this method again. The returned promise will resolve after the alert is hidden.\r\n   */\r\n  async toast() {\r\n    return new Promise((resolve) => {\r\n      if (!toastStack.parentElement) {\r\n        document.body.append(toastStack);\r\n      }\r\n      toastStack.append(this.host);\r\n      requestAnimationFrame(() => this.show());\r\n      this.host.addEventListener('six-alert-after-hide', () => {\r\n        this.host.remove();\r\n        resolve();\r\n        // Remove the toast stack from the DOM when there are no more alerts\r\n        if (toastStack.querySelector('six-alert') === null) {\r\n          toastStack.remove();\r\n        }\r\n      }, { once: true });\r\n    });\r\n  }\r\n  handleCloseClick() {\r\n    this.hide();\r\n  }\r\n  handleMouseMove() {\r\n    this.restartAutoHide();\r\n  }\r\n  handleTransitionEnd(event) {\r\n    const target = event.target;\r\n    // Ensure we only emit one event when the target element is no longer visible\r\n    if (event.propertyName === 'opacity' && target.classList.contains('alert')) {\r\n      this.isVisible = this.open;\r\n      this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();\r\n    }\r\n  }\r\n  restartAutoHide() {\r\n    clearTimeout(this.autoHideTimeout);\r\n    if (this.open && this.duration < Infinity) {\r\n      this.autoHideTimeout = setTimeout(() => this.hide(), this.duration);\r\n    }\r\n  }\r\n  render() {\r\n    return (h(\"div\", { ref: (el) => (this.alert = el), part: \"base\", class: {\r\n        alert: true,\r\n        'alert--open': this.open,\r\n        'alert--visible': this.isVisible,\r\n        'alert--closable': this.closable,\r\n        'alert--primary': this.type === 'primary',\r\n        'alert--success': this.type === 'success',\r\n        'alert--info': this.type === 'info',\r\n        'alert--warning': this.type === 'warning',\r\n        'alert--danger': this.type === 'danger',\r\n      }, role: \"alert\", \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", \"aria-hidden\": this.open ? 'false' : 'true', onMouseMove: this.handleMouseMove, onTransitionEnd: this.handleTransitionEnd }, h(\"span\", { part: \"icon\", class: \"alert__icon\" }, h(\"slot\", { name: \"icon\" })), h(\"span\", { part: \"message\", class: \"alert__message\" }, h(\"slot\", null)), this.closable && (h(\"span\", { class: \"alert__close\" }, h(\"six-icon-button\", { name: \"clear\", exportparts: \"base:close-button\", onClick: this.handleCloseClick })))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"open\": [\"handleOpenChange\"],\r\n    \"duration\": [\"handleDurationChange\"]\r\n  }; }\r\n};\r\nSixAlert.style = sixAlertCss;\n\nexport { SixAlert as six_alert };\n"],"sourceRoot":""}