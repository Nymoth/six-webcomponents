{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/six-badge.entry.js"],"names":["SixBadge","hostRef","registerInstance","this","type","pill","pulse","h","ref","el","badge","part","class","role","style"],"mappings":"6KAIIA,EAAQ,WACV,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GAEvBE,KAAKC,KAAO,UAEZD,KAAKE,MAAO,EAEZF,KAAKG,OAAQ,EARL,0CAUV,WAAS,WACP,OAAQC,YAAE,OAAQ,CAAEC,IAAK,SAACC,GAAD,OAAS,EAAKC,MAAQD,GAAKE,KAAM,OAAQC,MAAO,CACrEF,OAAO,EAEP,iBAAgC,YAAdP,KAAKC,KACvB,mBAAkC,cAAdD,KAAKC,KACzB,iBAAgC,YAAdD,KAAKC,KACvB,iBAAgC,YAAdD,KAAKC,KACvB,gBAA+B,WAAdD,KAAKC,KACtB,gBAA+B,WAAdD,KAAKC,KACtB,cAA6B,SAAdD,KAAKC,KACpB,cAAeD,KAAKE,KACpB,eAAgBF,KAAKG,OACpBO,KAAM,UAAYN,YAAE,OAAQ,WAvBzB,KA0BZP,EAASc,MA5BW","file":"static/js/35.30231781.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-a2605a62.js';\n\nconst sixBadgeCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:inline-flex}.badge{display:inline-flex;align-items:center;justify-content:center;font-family:var(--six-font-family);font-size:var(--six-font-size-x-small);font-weight:var(--six-font-weight-semibold);letter-spacing:var(--six-letter-spacing-normal);line-height:1;border-radius:var(--six-border-radius-small);white-space:nowrap;padding:3px 6px;user-select:none;cursor:inherit}.badge--info{background-color:var(--six-color-web-rock-900);color:var(--six-color-white)}.badge--success{background-color:var(--six-color-success-500);color:var(--six-color-web-rock-900)}.badge--warning{background-color:var(--six-color-warning-700);color:var(--six-color-web-rock-900)}.badge--danger{background-color:var(--six-color-danger-800);color:var(--six-color-white)}.badge--action{background-color:var(--six-color-action-500);color:var(--six-color-white)}.badge--primary{background-color:var(--six-color-clay-50);color:var(--six-color-black)}.badge--pill{border-radius:var(--six-border-radius-pill)}.badge--pulse{animation:pulse 1.5s infinite}.badge--pulse.badge--info{--pulse-color:var(--six-color-web-rock-900)}.badge--pulse.badge--success{--pulse-color:var(--six-color-success-500)}.badge--pulse.badge--warning{--pulse-color:var(--six-color-warning-700)}.badge--pulse.badge--danger{--pulse-color:var(--six-color-danger-800)}.badge--pulse.badge--action{--pulse-color:var(--six-color-action-500)}.badge--pulse.badge--primary{--pulse-color:var(--six-color-clay-50)}@keyframes pulse{0%{box-shadow:0 0 0 0 var(--pulse-color)}70%{box-shadow:0 0 0 0.5rem transparent}100%{box-shadow:0 0 0 0 transparent}}\";\n\nlet SixBadge = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /** The badge's type. */\r\n    this.type = 'primary';\r\n    /** Set to true to draw a pill-style badge with rounded edges. */\r\n    this.pill = false;\r\n    /** Set to true to make the badge pulsate to draw attention. */\r\n    this.pulse = false;\r\n  }\r\n  render() {\r\n    return (h(\"span\", { ref: (el) => (this.badge = el), part: \"base\", class: {\r\n        badge: true,\r\n        // Types\r\n        'badge--primary': this.type === 'primary',\r\n        'badge--secondary': this.type === 'secondary',\r\n        'badge--success': this.type === 'success',\r\n        'badge--warning': this.type === 'warning',\r\n        'badge--danger': this.type === 'danger',\r\n        'badge--action': this.type === 'action',\r\n        'badge--info': this.type === 'info',\r\n        'badge--pill': this.pill,\r\n        'badge--pulse': this.pulse,\r\n      }, role: \"status\" }, h(\"slot\", null)));\r\n  }\r\n};\r\nSixBadge.style = sixBadgeCss;\n\nexport { SixBadge as six_badge };\n"],"sourceRoot":""}