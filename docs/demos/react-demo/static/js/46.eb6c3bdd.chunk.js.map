{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/six-progress-bar.entry.js"],"names":["SixProgressBar","hostRef","registerInstance","this","percentage","indeterminate","h","part","class","role","style","width"],"mappings":"oLAIIA,EAAc,WAChB,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GAEvBE,KAAKC,WAAa,EAElBD,KAAKE,eAAgB,EANP,0CAQhB,WACE,OAAQC,YAAE,MAAO,CAAEC,KAAM,OAAQC,MAAO,CACpC,gBAAgB,EAChB,8BAA+BL,KAAKE,eACnCI,KAAM,cAAe,gBAAiB,IAAK,gBAAiB,MAAO,gBAAiBN,KAAKE,cAAgB,KAAOF,KAAKC,YAAcE,YAAE,MAAO,CAAEC,KAAM,YAAaC,MAAO,0BAA2BE,MAAO,CAC3MC,MAAO,GAAF,OAAKR,KAAKC,WAAV,QACDD,KAAKE,eAAkBC,YAAE,OAAQ,CAAEC,KAAM,QAASC,MAAO,uBAAyBF,YAAE,OAAQ,aAdtF,KAiBlBN,EAAeU,MAnBW","file":"static/js/46.eb6c3bdd.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-a2605a62.js';\n\nconst sixProgressBarCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{--height:16px;--track-color:var(--six-progress-track-color);--indicator-color:var(--six-progress-indicator-color);--label-color:var(--six-progress-label-color);display:block}.progress-bar{position:relative;background-color:var(--track-color);height:var(--height);border-radius:var(--sl-border-radius-pill);overflow:hidden}.progress-bar__indicator{height:100%;font-family:var(--six-font-sans);font-size:12px;font-weight:var(--six-font-weight-normal);background-color:var(--indicator-color);color:var(--label-color);text-align:center;line-height:var(--height);white-space:nowrap;overflow:hidden;transition:400ms width, 400ms background-color;user-select:none}.progress-bar--indeterminate .progress-bar__indicator{position:absolute;animation:indeterminate 2.5s infinite cubic-bezier(0.37, 0, 0.63, 1)}@keyframes indeterminate{0%{left:-50%;width:50%}75%,100%{left:100%;width:50%}}\";\n\nlet SixProgressBar = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /** The progress bar's percentage, 0 to 100. */\r\n    this.percentage = 0;\r\n    /** When true, percentage is ignored, the label is hidden, and the progress bar is drawn in an indeterminate state. */\r\n    this.indeterminate = false;\r\n  }\r\n  render() {\r\n    return (h(\"div\", { part: \"base\", class: {\r\n        'progress-bar': true,\r\n        'progress-bar--indeterminate': this.indeterminate,\r\n      }, role: \"progressbar\", \"aria-valuemin\": \"0\", \"aria-valuemax\": \"100\", \"aria-valuenow\": this.indeterminate ? null : this.percentage }, h(\"div\", { part: \"indicator\", class: \"progress-bar__indicator\", style: {\r\n        width: `${this.percentage}%`,\r\n      } }, !this.indeterminate && (h(\"span\", { part: \"label\", class: \"progress-bar__label\" }, h(\"slot\", null))))));\r\n  }\r\n};\r\nSixProgressBar.style = sixProgressBarCss;\n\nexport { SixProgressBar as six_progress_bar };\n"],"sourceRoot":""}