{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/slot-5253e199.js","../node_modules/@six/ui-library/dist/esm/scroll-99b214c2.js","../node_modules/@six/ui-library/dist/esm/modal-e5709f6b.js","../node_modules/@six/ui-library/dist/esm/six-dialog.entry.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","el","name","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","Object","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","getOffset","element","parent","top","Math","round","getBoundingClientRect","left","locks","Set","lockBodyScrolling","lockingEl","add","document","body","classList","unlockBodyScrolling","delete","size","remove","scrollIntoView","container","direction","behavior","offset","offsetTop","scrollTop","offsetLeft","scrollLeft","minX","maxX","offsetWidth","minY","maxY","offsetHeight","scrollTo","clientWidth","clientHeight","isPreventScrollSupported","supported","createElement","focus","activeModals","Modal","options","this","handleFocusIn","bind","push","addEventListener","filter","modal","removeEventListener","length","event","target","tagName","toLowerCase","isActive","closest","onFocusOut","hasPreventScroll","id","SixDialog","hostRef","registerInstance","sixShow","createEvent","sixAfterShow","sixHide","sixAfterHide","sixInitialFocus","sixOverlayDismiss","componentId","willShow","willHide","hasFooter","isVisible","open","label","noHeader","show","hide","handleCloseClick","handleTransitionEnd","handleKeyDown","handleOverlayClick","handleSlotChange","panel","a","emit","defaultPrevented","activate","requestAnimationFrame","preventScroll","dialog","once","deactivate","key","propertyName","contains","h","ref","part","class","onKeyDown","onTransitionEnd","onClick","role","tabIndex","String","fromCharCode","exportparts","onSlotchange","getElement","style","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/15.55d26804.chunk.js","sourcesContent":["//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","//\r\n// Returns an element's offset relative to its parent. Similar to element.offsetTop and element.offsetLeft, except the\r\n// parent doesn't have to be positioned relative or absolute.\r\n//\r\n// NOTE: This was created to work around what appears to be a bug in Chrome where a slotted element's offsetParent\r\n// seems to ignore elements inside the surrounding shadow DOM: https://bugs.chromium.org/p/chromium/issues/detail?id=920069\r\n//\r\nfunction getOffset(element, parent) {\r\n  return {\r\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\r\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left),\r\n  };\r\n}\n\nconst locks = new Set();\r\n//\r\n// Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible\r\n// without premature unlocking.\r\n//\r\nfunction lockBodyScrolling(lockingEl) {\r\n  locks.add(lockingEl);\r\n  document.body.classList.add('six-scroll-lock');\r\n}\r\n//\r\n// Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method.\r\n//\r\nfunction unlockBodyScrolling(lockingEl) {\r\n  locks.delete(lockingEl);\r\n  if (locks.size === 0) {\r\n    document.body.classList.remove('six-scroll-lock');\r\n  }\r\n}\r\n//\r\n// Scrolls an element into view of its container. If the element is already in view, nothing will happen.\r\n//\r\nfunction scrollIntoView(element, container, direction = 'vertical', behavior = 'smooth') {\r\n  const offset = getOffset(element, container);\r\n  const offsetTop = offset.top + container.scrollTop;\r\n  const offsetLeft = offset.left + container.scrollLeft;\r\n  const minX = container.scrollLeft;\r\n  const maxX = container.scrollLeft + container.offsetWidth;\r\n  const minY = container.scrollTop;\r\n  const maxY = container.scrollTop + container.offsetHeight;\r\n  if (direction === 'horizontal' || direction === 'both') {\r\n    if (offsetLeft < minX) {\r\n      container.scrollTo({ left: offsetLeft, behavior });\r\n    }\r\n    else if (offsetLeft + element.clientWidth > maxX) {\r\n      container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });\r\n    }\r\n  }\r\n  if (direction === 'vertical' || direction === 'both') {\r\n    if (offsetTop < minY) {\r\n      container.scrollTo({ top: offsetTop, behavior });\r\n    }\r\n    else if (offsetTop + element.clientHeight > maxY) {\r\n      container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });\r\n    }\r\n  }\r\n}\n\nexport { getOffset as g, lockBodyScrolling as l, scrollIntoView as s, unlockBodyScrolling as u };\n","//\r\n// Determines if the browser supports focus({ preventScroll })\r\n//\r\nconst isPreventScrollSupported = () => {\r\n  let supported = false;\r\n  const element = document.createElement('div');\r\n  element.focus &&\r\n    element.focus({\r\n      get preventScroll() {\r\n        supported = true;\r\n        return false;\r\n      },\r\n    });\r\n  return supported;\r\n};\n\nlet activeModals = [];\r\nclass Modal {\r\n  constructor(element, options) {\r\n    this.element = element;\r\n    this.options = options;\r\n    this.handleFocusIn = this.handleFocusIn.bind(this);\r\n  }\r\n  activate() {\r\n    activeModals.push(this.element);\r\n    document.addEventListener('focusin', this.handleFocusIn);\r\n  }\r\n  deactivate() {\r\n    activeModals = activeModals.filter((modal) => modal !== this.element);\r\n    document.removeEventListener('focusin', this.handleFocusIn);\r\n  }\r\n  isActive() {\r\n    // The \"active\" modal is always the most recent one shown\r\n    return activeModals[activeModals.length - 1] === this.element;\r\n  }\r\n  handleFocusIn(event) {\r\n    const target = event.target;\r\n    const tagName = this.element.tagName.toLowerCase();\r\n    // If focus is lost while the modal is active, run the onFocusOut callback\r\n    if (this.isActive() && target.closest(tagName) !== this.element && typeof this.options.onFocusOut === 'function') {\r\n      this.options.onFocusOut(event);\r\n    }\r\n  }\r\n}\n\nexport { Modal as M, isPreventScrollSupported as i };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { u as unlockBodyScrolling, l as lockBodyScrolling } from './scroll-99b214c2.js';\nimport { h as hasSlot } from './slot-5253e199.js';\nimport { i as isPreventScrollSupported, M as Modal } from './modal-e5709f6b.js';\n\nconst sixDialogCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{--width:31rem;display:contents}.dialog{display:flex;align-items:center;justify-content:center;position:fixed;top:0;right:0;bottom:0;left:0;z-index:var(--six-z-index-dialog);color:var(--six-color-web-rock-900)}.dialog:not(.dialog--visible){position:absolute;width:1px;height:1px;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;pointer-events:none;visibility:hidden}.dialog__panel{display:flex;flex-direction:column;z-index:2;width:var(--width);max-width:calc(100% - var(--six-spacing-xx-large));max-height:calc(100% - var(--six-spacing-xx-large));background-color:var(--six-panel-background-color);border-radius:var(--six-border-radius-medium);box-shadow:var(--six-shadow-x-large);opacity:0;transform:scale(0.8);transition:var(--six-transition-medium) opacity, var(--six-transition-medium) transform}.dialog__panel:focus{outline:none}@media screen and (max-width: 420px){.dialog__panel{max-height:80vh}}.dialog--open .dialog__panel{display:flex;opacity:1;transform:none}.dialog__header{flex:0 0 auto;display:flex}.dialog__title{flex:1 1 auto;font-size:var(--six-font-size-x-large);font-weight:var(--six-font-weight-bold);line-height:var(--six-line-height-dense);padding:var(--six-spacing-large) var(--six-spacing-large) var(--six-spacing-small)}.dialog__close{flex:0 0 auto;display:flex;align-items:center;font-size:var(--six-font-size-x-large);padding:0 var(--six-spacing-x-small)}.dialog__body{flex:1 1 auto;padding:var(--six-spacing-small) var(--six-spacing-large) var(--six-spacing-large);overflow:auto;-webkit-overflow-scrolling:touch}.dialog__footer{flex:0 0 auto;text-align:right;padding:var(--six-spacing-large)}.dialog__footer ::slotted(six-button:not(:first-of-type)){margin-left:var(--six-spacing-xx-small)}.dialog:not(.dialog--has-footer) .dialog__footer{display:none}.dialog__overlay{position:fixed;top:0;right:0;bottom:0;left:0;background-color:var(--six-overlay-background-color);opacity:0;transition:var(--six-transition-medium) opacity}.dialog--open .dialog__overlay{opacity:0.8}\";\n\nconst hasPreventScroll = isPreventScrollSupported();\r\nlet id = 0;\r\nlet SixDialog = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixShow = createEvent(this, \"six-dialog-show\", 7);\r\n    this.sixAfterShow = createEvent(this, \"six-dialog-after-show\", 7);\r\n    this.sixHide = createEvent(this, \"six-dialog-hide\", 7);\r\n    this.sixAfterHide = createEvent(this, \"six-dialog-after-hide\", 7);\r\n    this.sixInitialFocus = createEvent(this, \"six-dialog-initial-focus\", 7);\r\n    this.sixOverlayDismiss = createEvent(this, \"six-dialog-overlay-dismiss\", 7);\r\n    this.componentId = `dialog-${++id}`;\r\n    this.willShow = false;\r\n    this.willHide = false;\r\n    this.hasFooter = false;\r\n    this.isVisible = false;\r\n    /** Indicates whether or not the dialog is open. You can use this in lieu of the show/hide methods. */\r\n    this.open = false;\r\n    /**\r\n     * The dialog's label as displayed in the header. You should always include a relevant label even when using\r\n     * `no-header`, as it is required for proper accessibility.\r\n     */\r\n    this.label = '';\r\n    /**\r\n     * Set to true to disable the header. This will also remove the default close button, so please ensure you provide an\r\n     * easy, accessible way for users to dismiss the dialog.\r\n     */\r\n    this.noHeader = false;\r\n  }\r\n  handleOpenChange() {\r\n    this.open ? this.show() : this.hide();\r\n  }\r\n  connectedCallback() {\r\n    this.handleCloseClick = this.handleCloseClick.bind(this);\r\n    this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleOverlayClick = this.handleOverlayClick.bind(this);\r\n    this.handleSlotChange = this.handleSlotChange.bind(this);\r\n    this.modal = new Modal(this.host, {\r\n      onFocusOut: () => this.panel.focus(),\r\n    });\r\n  }\r\n  componentWillLoad() {\r\n    this.handleSlotChange();\r\n    // Show on init if open\r\n    if (this.open) {\r\n      this.show();\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n  /** Shows the dialog */\r\n  async show() {\r\n    if (this.willShow) {\r\n      return;\r\n    }\r\n    const sixShow = this.sixShow.emit();\r\n    if (sixShow.defaultPrevented) {\r\n      this.open = false;\r\n      return;\r\n    }\r\n    this.willShow = true;\r\n    this.isVisible = true;\r\n    this.open = true;\r\n    this.modal.activate();\r\n    lockBodyScrolling(this.host);\r\n    if (this.open) {\r\n      if (hasPreventScroll) {\r\n        // Wait for the next frame before setting initial focus so the dialog is technically visible\r\n        requestAnimationFrame(() => {\r\n          const sixInitialFocus = this.sixInitialFocus.emit();\r\n          if (!sixInitialFocus.defaultPrevented) {\r\n            this.panel.focus({ preventScroll: true });\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        // Once Safari supports { preventScroll: true } we can remove this nasty little hack, but until then we need to\r\n        // wait for the transition to complete before setting focus, otherwise the panel may render in a buggy way its\r\n        // out of view initially.\r\n        //\r\n        // Fiddle: https://jsfiddle.net/g6buoafq/1/\r\n        // Safari: https://bugs.webkit.org/show_bug.cgi?id=178583\r\n        //\r\n        this.dialog.addEventListener('transitionend', () => {\r\n          const sixInitialFocus = this.sixInitialFocus.emit();\r\n          if (!sixInitialFocus.defaultPrevented) {\r\n            this.panel.focus();\r\n          }\r\n        }, { once: true });\r\n      }\r\n    }\r\n  }\r\n  /** Hides the dialog */\r\n  async hide() {\r\n    if (this.willHide) {\r\n      return;\r\n    }\r\n    const sixHide = this.sixHide.emit();\r\n    if (sixHide.defaultPrevented) {\r\n      this.open = true;\r\n      return;\r\n    }\r\n    this.willHide = true;\r\n    this.open = false;\r\n    this.modal.deactivate();\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n  handleCloseClick() {\r\n    this.hide();\r\n  }\r\n  handleKeyDown(event) {\r\n    if (event.key === 'Escape') {\r\n      this.hide();\r\n    }\r\n  }\r\n  handleOverlayClick() {\r\n    const sixOverlayDismiss = this.sixOverlayDismiss.emit();\r\n    if (!sixOverlayDismiss.defaultPrevented) {\r\n      this.hide();\r\n    }\r\n  }\r\n  handleSlotChange() {\r\n    this.hasFooter = hasSlot(this.host, 'footer');\r\n  }\r\n  handleTransitionEnd(event) {\r\n    const target = event.target;\r\n    // Ensure we only emit one event when the target element is no longer visible\r\n    if (event.propertyName === 'opacity' && target.classList.contains('dialog__panel')) {\r\n      this.isVisible = this.open;\r\n      this.willShow = false;\r\n      this.willHide = false;\r\n      this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();\r\n    }\r\n  }\r\n  render() {\r\n    return (h(\"div\", { ref: (el) => (this.dialog = el), part: \"base\", class: {\r\n        dialog: true,\r\n        'dialog--open': this.open,\r\n        'dialog--visible': this.isVisible,\r\n        'dialog--has-footer': this.hasFooter,\r\n      }, onKeyDown: this.handleKeyDown, onTransitionEnd: this.handleTransitionEnd }, h(\"div\", { part: \"overlay\", class: \"dialog__overlay\", onClick: this.handleOverlayClick }), h(\"div\", { ref: (el) => (this.panel = el), part: \"panel\", class: \"dialog__panel\", role: \"dialog\", \"aria-modal\": \"true\", \"aria-hidden\": this.open ? 'false' : 'true', \"aria-label\": this.noHeader ? this.label : null, \"aria-labelledby\": !this.noHeader ? `${this.componentId}-title` : null, tabIndex: 0 }, !this.noHeader && (h(\"header\", { part: \"header\", class: \"dialog__header\" }, h(\"span\", { part: \"title\", class: \"dialog__title\", id: `${this.componentId}-title` }, h(\"slot\", { name: \"label\" }, this.label || String.fromCharCode(65279))), h(\"six-icon-button\", { exportparts: \"base:close-button\", class: \"dialog__close\", name: \"close\", onClick: this.handleCloseClick }))), h(\"div\", { part: \"body\", class: \"dialog__body\" }, h(\"slot\", null)), h(\"footer\", { part: \"footer\", class: \"dialog__footer\" }, h(\"slot\", { name: \"footer\", onSlotchange: this.handleSlotChange })))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"open\": [\"handleOpenChange\"]\r\n  }; }\r\n};\r\nSixDialog.style = sixDialogCss;\n\nexport { SixDialog as six_dialog };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}