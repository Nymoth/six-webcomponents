{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/six-radio.entry.js"],"names":["id","SixRadio","hostRef","registerInstance","this","sixBlur","createEvent","sixChange","sixFocus","inputId","labelId","hasFocus","disabled","checked","invalid","defaultState","getSiblingRadios","map","radio","input","emit","handleClick","bind","handleBlur","handleFocus","handleKeyDown","handleMouseDown","options","a","focus","blur","reportValidity","validity","valid","message","setCustomValidity","checkValidity","form","host","closest","document","body","name","querySelectorAll","filter","getAllRadios","event","includes","key","radios","incr","index","indexOf","length","setFocus","preventDefault","h","part","class","htmlFor","onKeyDown","onMouseDown","viewBox","stroke","fill","cx","cy","r","ref","el","type","value","role","onClick","onBlur","onFocus","getElement","style"],"mappings":"4MAIIA,EAAK,EACLC,EAAQ,WACV,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GACvBE,KAAKC,QAAUC,YAAYF,KAAM,iBAAkB,GACnDA,KAAKG,UAAYD,YAAYF,KAAM,mBAAoB,GACvDA,KAAKI,SAAWF,YAAYF,KAAM,kBAAmB,GACrDA,KAAKK,QAAL,kBAA0BT,GAC1BI,KAAKM,QAAL,sBAA8BV,GAC9BI,KAAKO,UAAW,EAEhBP,KAAKQ,UAAW,EAEhBR,KAAKS,SAAU,EAKfT,KAAKU,SAAU,EAEfV,KAAKW,cAAe,EAnBZ,uDAqBV,WACMX,KAAKS,SACPT,KAAKY,mBAAmBC,KAAI,SAACC,GAAD,OAAYA,EAAML,SAAU,KAEtDT,KAAKe,QACPf,KAAKe,MAAMN,QAAUT,KAAKS,QAC1BT,KAAKG,UAAUa,UA3BT,+BA8BV,WACEhB,KAAKiB,YAAcjB,KAAKiB,YAAYC,KAAKlB,MACzCA,KAAKmB,WAAanB,KAAKmB,WAAWD,KAAKlB,MACvCA,KAAKoB,YAAcpB,KAAKoB,YAAYF,KAAKlB,MACzCA,KAAKqB,cAAgBrB,KAAKqB,cAAcH,KAAKlB,MAC7CA,KAAKsB,gBAAkBtB,KAAKsB,gBAAgBJ,KAAKlB,QAnCzC,+BAqCV,WACEA,KAAKW,aAAeX,KAAKS,UAtCjB,6DAyCV,WAAec,GAAf,SAAAC,EAAA,sDACExB,KAAKe,MAAMU,MAAMF,GADnB,gDAzCU,uHA6CV,sBAAAC,EAAA,sDACExB,KAAKe,MAAMW,OADb,gDA7CU,yHAiDV,sBAAAF,EAAA,+EACSxB,KAAKe,MAAMY,kBADpB,gDAjDU,wHAqDV,sBAAAH,EAAA,+EACSxB,KAAKe,MAAMa,SAASC,OAD7B,gDArDU,4HAyDV,WAAwBC,GAAxB,SAAAN,EAAA,sDACExB,KAAKe,MAAMgB,kBAAkBD,GAC7B9B,KAAKU,SAAWV,KAAKe,MAAMiB,gBAF7B,gDAzDU,iHA8DV,sBAAAR,EAAA,sDACExB,KAAKS,QAAUT,KAAKW,aACpBX,KAAKe,MAAMgB,kBAAkB,IAC7B/B,KAAKU,SAAU,EAHjB,gDA9DU,gFAmEV,WAAe,WACPuB,EAAOjC,KAAKkC,KAAKC,QAAQ,mBAAqBC,SAASC,KAC7D,OAAKrC,KAAKsC,KAEH,YAAIL,EAAKM,iBAAiB,cAAcC,QAAO,SAAC1B,GAAD,OAAWA,EAAMwB,OAAS,EAAKA,QAD5E,KAtED,8BAyEV,WAAmB,WACjB,OAAOtC,KAAKyC,eAAeD,QAAO,SAAC1B,GAAD,OAAWA,IAAU,EAAKoB,UA1EpD,yBA4EV,WACElC,KAAKS,QAAUT,KAAKe,MAAMN,UA7ElB,wBA+EV,WACET,KAAKO,UAAW,EAChBP,KAAKC,QAAQe,SAjFL,yBAmFV,WACEhB,KAAKO,UAAW,EAChBP,KAAKI,SAASY,SArFN,2BAuFV,SAAc0B,GACZ,GAAI,CAAC,UAAW,YAAa,YAAa,cAAcC,SAASD,EAAME,KAAM,CAC3E,IAAMC,EAAS7C,KAAKyC,eAAeD,QAAO,SAAC1B,GAAD,OAAYA,EAAMN,YACtDsC,EAAO,CAAC,UAAW,aAAaH,SAASD,EAAME,MAAQ,EAAI,EAC7DG,EAAQF,EAAOG,QAAQhD,KAAKkC,MAAQY,EACpCC,EAAQ,IACVA,EAAQF,EAAOI,OAAS,GACtBF,EAAQF,EAAOI,OAAS,IAC1BF,EAAQ,GACV/C,KAAKyC,eAAe5B,KAAI,SAACC,GAAD,OAAYA,EAAML,SAAU,KACpDoC,EAAOE,GAAOG,WACdL,EAAOE,GAAOtC,SAAU,EACxBiC,EAAMS,oBAnGA,6BAsGV,SAAgBT,GAEdA,EAAMS,iBACNnD,KAAKe,MAAMU,UAzGH,oBA2GV,WAAS,WACP,OAAQ2B,YAAE,QAAS,CAAEC,KAAM,OAAQC,MAAO,CACtCxC,OAAO,EACP,iBAAkBd,KAAKS,QACvB,kBAAmBT,KAAKQ,SACxB,iBAAkBR,KAAKO,UACtBgD,QAASvD,KAAKK,QAASmD,UAAWxD,KAAKqB,cAAeoC,YAAazD,KAAKsB,iBAAmB8B,YAAE,OAAQ,CAAEC,KAAM,UAAWC,MAAO,kBAAoBF,YAAE,OAAQ,CAAEC,KAAM,eAAgBC,MAAO,eAAiBF,YAAE,MAAO,CAAEM,QAAS,aAAeN,YAAE,IAAK,CAAEO,OAAQ,OAAQ,eAAgB,IAAKC,KAAM,OAAQ,YAAa,WAAaR,YAAE,IAAK,CAAEQ,KAAM,gBAAkBR,YAAE,SAAU,CAAES,GAAI,IAAKC,GAAI,IAAKC,EAAG,UAAYX,YAAE,QAAS,CAAEY,IAAK,SAACC,GAAD,OAAS,EAAKlD,MAAQkD,GAAKrE,GAAII,KAAKK,QAAS6D,KAAM,QAAS5B,KAAMtC,KAAKsC,KAAM6B,MAAOnE,KAAKmE,MAAO1D,QAAST,KAAKS,QAASD,SAAUR,KAAKQ,SAAU4D,KAAM,QAAS,eAAgBpE,KAAKS,QAAU,OAAS,QAAS,kBAAmBT,KAAKM,QAAS+D,QAASrE,KAAKiB,YAAaqD,OAAQtE,KAAKmB,WAAYoD,QAASvE,KAAKoB,eAAiBgC,YAAE,OAAQ,CAAEC,KAAM,QAASzD,GAAII,KAAKM,QAASgD,MAAO,gBAAkBF,YAAE,OAAQ,UAjHzzB,gBAmHV,WAAa,OAAOoB,YAAWxE,SAnHrB,qBAoHV,WAAwB,MAAO,CAC7B,QAAW,CAAC,4BArHJ,KAwHZH,EAAS4E,MA3HW","file":"static/js/48.a4d055ab.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\n\nconst sixRadioCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:inline-block}.radio{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.radio__icon{display:inline-flex;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size)}.radio__icon svg{width:100%;height:100%}.radio__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size);border:solid var(--six-border-width) var(--six-input-border-color);border-radius:50%;background-color:var(--six-input-background-color);color:transparent;transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow}.radio__control input[type=radio]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none}.radio:not(.radio--checked):not(.radio--disabled) .radio__control:hover{border-color:var(--six-input-border-color-hover)}.radio--checked .radio__control{color:var(--six-selection-control-color);border-color:var(--six-selection-control-color)}.radio.radio--checked:not(.radio--disabled) .radio__control:hover{color:var(--six-input-border-color-focus);border-color:var(--six-input-border-color-focus)}.radio--disabled{cursor:not-allowed;color:var(--six-input-color-disabled)}.radio--disabled .radio__control{border-color:var(--six-input-border-color-disabled)}.radio--disabled.radio--checked .radio__control{color:var(--six-selection-control-color-disabled)}.radio__label{line-height:var(--six-selection-control-toggle-size);margin-left:0.5em;user-select:none}\";\n\nlet id = 0;\r\nlet SixRadio = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixBlur = createEvent(this, \"six-radio-blur\", 7);\r\n    this.sixChange = createEvent(this, \"six-radio-change\", 7);\r\n    this.sixFocus = createEvent(this, \"six-radio-focus\", 7);\r\n    this.inputId = `radio-${++id}`;\r\n    this.labelId = `radio-label-${id}`;\r\n    this.hasFocus = false;\r\n    /** Set to true to disable the radio. */\r\n    this.disabled = false;\r\n    /** Set to true to draw the radio in a checked state. */\r\n    this.checked = false;\r\n    /**\r\n     * This will be true when the control is in an invalid state. Validity in range inputs is determined by the message\r\n     * provided by the `setCustomValidity` method.\r\n     */\r\n    this.invalid = false;\r\n    /** default state whether the radio button should be checked or not when resetting */\r\n    this.defaultState = false;\r\n  }\r\n  handleCheckedChange() {\r\n    if (this.checked) {\r\n      this.getSiblingRadios().map((radio) => (radio.checked = false));\r\n    }\r\n    if (this.input) {\r\n      this.input.checked = this.checked;\r\n      this.sixChange.emit();\r\n    }\r\n  }\r\n  connectedCallback() {\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n  }\r\n  componentWillLoad() {\r\n    this.defaultState = this.checked;\r\n  }\r\n  /** Sets focus on the radio. */\r\n  async setFocus(options) {\r\n    this.input.focus(options);\r\n  }\r\n  /** Removes focus from the radio. */\r\n  async removeFocus() {\r\n    this.input.blur();\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.input.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.input.validity.valid;\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    this.input.setCustomValidity(message);\r\n    this.invalid = !this.input.checkValidity();\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.checked = this.defaultState;\r\n    this.input.setCustomValidity('');\r\n    this.invalid = false;\r\n  }\r\n  getAllRadios() {\r\n    const form = this.host.closest('six-form, form') || document.body;\r\n    if (!this.name)\r\n      return [];\r\n    return [...form.querySelectorAll('six-radio')].filter((radio) => radio.name === this.name);\r\n  }\r\n  getSiblingRadios() {\r\n    return this.getAllRadios().filter((radio) => radio !== this.host);\r\n  }\r\n  handleClick() {\r\n    this.checked = this.input.checked;\r\n  }\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n    this.sixBlur.emit();\r\n  }\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n    this.sixFocus.emit();\r\n  }\r\n  handleKeyDown(event) {\r\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n      const radios = this.getAllRadios().filter((radio) => !radio.disabled);\r\n      const incr = ['ArrowUp', 'ArrowLeft'].includes(event.key) ? -1 : 1;\r\n      let index = radios.indexOf(this.host) + incr;\r\n      if (index < 0)\r\n        index = radios.length - 1;\r\n      if (index > radios.length - 1)\r\n        index = 0;\r\n      this.getAllRadios().map((radio) => (radio.checked = false));\r\n      radios[index].setFocus();\r\n      radios[index].checked = true;\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  handleMouseDown(event) {\r\n    // Prevent clicks on the label from briefly blurring the input\r\n    event.preventDefault();\r\n    this.input.focus();\r\n  }\r\n  render() {\r\n    return (h(\"label\", { part: \"base\", class: {\r\n        radio: true,\r\n        'radio--checked': this.checked,\r\n        'radio--disabled': this.disabled,\r\n        'radio--focused': this.hasFocus,\r\n      }, htmlFor: this.inputId, onKeyDown: this.handleKeyDown, onMouseDown: this.handleMouseDown }, h(\"span\", { part: \"control\", class: \"radio__control\" }, h(\"span\", { part: \"checked-icon\", class: \"radio__icon\" }, h(\"svg\", { viewBox: \"0 0 16 16\" }, h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\" }, h(\"g\", { fill: \"currentColor\" }, h(\"circle\", { cx: \"8\", cy: \"8\", r: \"5\" }))))), h(\"input\", { ref: (el) => (this.input = el), id: this.inputId, type: \"radio\", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, role: \"radio\", \"aria-checked\": this.checked ? 'true' : 'false', \"aria-labelledby\": this.labelId, onClick: this.handleClick, onBlur: this.handleBlur, onFocus: this.handleFocus })), h(\"span\", { part: \"label\", id: this.labelId, class: \"radio__label\" }, h(\"slot\", null))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"checked\": [\"handleCheckedChange\"]\r\n  }; }\r\n};\r\nSixRadio.style = sixRadioCss;\n\nexport { SixRadio as six_radio };\n"],"sourceRoot":""}