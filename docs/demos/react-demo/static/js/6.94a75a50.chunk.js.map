{"version":3,"sources":["../node_modules/@six/ui-library/dist/esm/slot-5253e199.js","../node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js","../node_modules/@six/ui-library/dist/esm/execution-control-235f5126.js","../node_modules/@six/ui-library/dist/esm/six-timepicker.types-cd6bac03.js","../node_modules/@six/ui-library/dist/esm/types-a37c1695.js","../node_modules/@six/ui-library/dist/esm/six-timepicker.entry.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","el","name","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","Object","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","EventListeners","this","eventListeners","add","listener","identifier","push","addEventListener","remove","a","sameItem","b","keys","every","key","getFilteredEventListeners","removeByIdentifier","undefined","find","removeAll","length","pop","removeEventListener","filter","item","DEFAULT_DEBOUNCE_INSANELY_FAST","DEFAULT_DEBOUNCE_FAST","debounce","callback","timer","timeout","args","clearTimeout","setTimeout","apply","debounceEvent","event","original","_original","emit","bind","SixTimePeriod","SixTimePropertyName","TIME_FORMAT_CHAR","isString","value","isNil","isDate","Date","isNumber","TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP","HOUR_24","HOUR_12","MINUTE","SECOND","MILLISECOND","PERIOD","ItemPickerType","ItemPickerPaddingDirection","SixTimeFormat","getCurrentTimeIn24Hours","now","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","has24Hours","getHoursIn12HourFormat","getCurrentTimeIn12Hours","period","PM","AM","TIME_FORMAT_SEPARATOR","isValidTimeString","timeStr","format","timeStringParts","split","timeFormatParts","parseTimeString","console","error","sixTime","forEach","timeStringPart","i","formatStringPart","sixTimePropertyName","toUpperCase","Number","createTimeString","time","timeFormatPart","paddingLength","String","padStart","join","DEBOUNCE_TIMEPICKER_LISTENER","SixTimepicker","hostRef","registerInstance","sixChange","createEvent","sixChangeDebounced","sixClear","HHmmss","separator","open","inline","readonly","disabled","size","errorOnBlur","errorText","label","clearable","iconPosition","hoist","interval","isPopupContentUp","isDropDownContentUp","defaultValue","handleInputChange","stopPropagation","inputValue","inputElement","internalValue","valueAsString","handleSixTimepickerChangeDebounced","detail","handleChange","property","timeString","changedProperty","handleDocumentMouseDown","composedPath","includes","closePopup","handleClearClick","calcIsPopupContentUp","moveOpenHoistedPopup","newValue","setupInternalTime","reportValidity","checkValidity","message","setCustomValidity","reset","document","wrapper","inputBoundingRect","getBoundingClientRect","wrapperBoundingRect","minPopupHeight","Math","max","height","moreSpaceInTop","y","window","innerHeight","bottom","popupHeight","popup","inputBoundingClientRect","inputTop","top","inputHeight","style","params","h","class","padded","min","propertyName","items","type","NUMBER","is12HourClock","defaultTime","getCurrentTime","is24HourClock","getSixTimeUnitPicker","HOURS","CUSTOM","MINUTES","SECONDS","MILLISECONDS","visibleElements","getHour24Picker","getHour12Picker","getMinutePicker","getSecondsPicker","getMillisecondsPicker","idx","getSeparator","timepicker_clear","onClick","tabindex","icon","part","prefix","popupBoundingClientRect","position","popupTop","calcIsDropDownContentUp","adjustPopupForHoisting","ref","openPopup","placeholder","required","renderCustomIcon","renderClearable","timepicker__popup","placement","getContent","getAmPmPicker","getElement","_defineProperty","obj","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/6.94a75a50.chunk.js","sourcesContent":["//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n","const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;\r\nconst DEFAULT_DEBOUNCE_FAST = 300;\r\n/**\r\n * Debounce function to implement a timeframe to wait for no new changes before executing a callback\r\n\r\n *  example usages:\r\n *    debounce(() => saveInput());\r\n *    debounce(() => saveInput(), 750);\r\n *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));\r\n *\r\n *  regarding default timeout check https://lawsofux.com/doherty-threshold/\r\n *\r\n * @param callback\r\n * @param timeout\r\n */\r\nconst debounce = (callback, timeout = DEFAULT_DEBOUNCE_FAST) => {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback.apply(undefined, args), timeout);\r\n  };\r\n};\r\n/**\r\n * Debounce an event\r\n *\r\n * @param event\r\n * @param timeout\r\n */\r\nconst debounceEvent = (event, timeout) => {\r\n  const original = event._original || event;\r\n  const emit = debounce(original.emit.bind(original), timeout);\r\n  return {\r\n    _original: event,\r\n    emit: emit,\r\n  };\r\n};\n\nexport { DEFAULT_DEBOUNCE_FAST as D, debounce as a, DEFAULT_DEBOUNCE_INSANELY_FAST as b, debounceEvent as d };\n","const isString = (value) => typeof value === 'string';\r\n// only use '==' instead of '===' to also catch undefined and void\r\nconst isNil = (value) => value == null;\r\nconst isDate = (value) => value instanceof Date;\r\nconst isNumber = (value) => value === 'number';\n\n/*\r\n * Defines the different time periods for the 12-hour-clock\r\n */\r\nvar SixTimePeriod;\r\n(function (SixTimePeriod) {\r\n  SixTimePeriod[\"AM\"] = \"AM\";\r\n  SixTimePeriod[\"PM\"] = \"PM\";\r\n})(SixTimePeriod || (SixTimePeriod = {}));\r\nvar SixTimePropertyName;\r\n(function (SixTimePropertyName) {\r\n  SixTimePropertyName[\"HOURS\"] = \"hours\";\r\n  SixTimePropertyName[\"MINUTES\"] = \"minutes\";\r\n  SixTimePropertyName[\"SECONDS\"] = \"seconds\";\r\n  SixTimePropertyName[\"MILLISECONDS\"] = \"milliseconds\";\r\n  SixTimePropertyName[\"HAS_24_HOURS\"] = \"has24Hours\";\r\n  SixTimePropertyName[\"PERIOD\"] = \"period\";\r\n})(SixTimePropertyName || (SixTimePropertyName = {}));\r\n/*\r\n * Defines the different time units allowed to use in a timestring\r\n */\r\nvar TIME_FORMAT_CHAR;\r\n(function (TIME_FORMAT_CHAR) {\r\n  TIME_FORMAT_CHAR[\"HOUR_24\"] = \"HH\";\r\n  TIME_FORMAT_CHAR[\"HOUR_12\"] = \"hh\";\r\n  TIME_FORMAT_CHAR[\"MINUTE\"] = \"mm\";\r\n  TIME_FORMAT_CHAR[\"SECOND\"] = \"ss\";\r\n  TIME_FORMAT_CHAR[\"MILLISECOND\"] = \"ms\";\r\n  TIME_FORMAT_CHAR[\"PERIOD\"] = \"aa\";\r\n})(TIME_FORMAT_CHAR || (TIME_FORMAT_CHAR = {}));\r\n/*\r\n * Defines a mapping from the time format unit characters to the sixTime property name\r\n */\r\nconst TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP = {\r\n  [TIME_FORMAT_CHAR.HOUR_24]: 'hours',\r\n  [TIME_FORMAT_CHAR.HOUR_12]: 'hours',\r\n  [TIME_FORMAT_CHAR.MINUTE]: 'minutes',\r\n  [TIME_FORMAT_CHAR.SECOND]: 'seconds',\r\n  [TIME_FORMAT_CHAR.MILLISECOND]: 'milliseconds',\r\n  [TIME_FORMAT_CHAR.PERIOD]: 'period',\r\n};\n\nexport { SixTimePropertyName as S, TIME_FORMAT_CHAR as T, isNumber as a, isDate as b, isString as c, SixTimePeriod as d, TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP as e, isNil as i };\n","var ItemPickerType;\r\n(function (ItemPickerType) {\r\n  ItemPickerType[\"NUMBER\"] = \"number\";\r\n  ItemPickerType[\"LETTER\"] = \"letter\";\r\n  ItemPickerType[\"CAPITAL_LETTER\"] = \"capital-letter\";\r\n  ItemPickerType[\"LOWER_LETTER\"] = \"lower-letter\";\r\n  ItemPickerType[\"CUSTOM\"] = \"custom\";\r\n})(ItemPickerType || (ItemPickerType = {}));\r\nvar ItemPickerPaddingDirection;\r\n(function (ItemPickerPaddingDirection) {\r\n  ItemPickerPaddingDirection[\"BEFORE\"] = \"before\";\r\n  ItemPickerPaddingDirection[\"AFTER\"] = \"after\";\r\n})(ItemPickerPaddingDirection || (ItemPickerPaddingDirection = {}));\n\nexport { ItemPickerType as I, ItemPickerPaddingDirection as a };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { I as ItemPickerType } from './types-a37c1695.js';\nimport { d as SixTimePeriod, T as TIME_FORMAT_CHAR, e as TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP, i as isNil, S as SixTimePropertyName } from './six-timepicker.types-cd6bac03.js';\nimport { D as DEFAULT_DEBOUNCE_FAST, b as DEFAULT_DEBOUNCE_INSANELY_FAST, a as debounce } from './execution-control-235f5126.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\nimport { h as hasSlot } from './slot-5253e199.js';\n\nvar SixTimeFormat;\r\n(function (SixTimeFormat) {\r\n  SixTimeFormat[\"HHmmss\"] = \"HH:mm:ss\";\r\n  SixTimeFormat[\"hhmmssaa\"] = \"hh:mm:ss:aa\";\r\n  SixTimeFormat[\"HHmmssms\"] = \"HH:mm:ss:ms\";\r\n  SixTimeFormat[\"hhmmssmsaa\"] = \"hh:mm:ss:ms:aa\";\r\n  SixTimeFormat[\"HHmm\"] = \"HH:mm\";\r\n  SixTimeFormat[\"hhmmaa\"] = \"hh:mm:aa\";\r\n  SixTimeFormat[\"HH\"] = \"HH\";\r\n  SixTimeFormat[\"hhaa\"] = \"hh:aa\";\r\n  SixTimeFormat[\"mm\"] = \"mm\";\r\n  SixTimeFormat[\"ss\"] = \"ss\";\r\n  SixTimeFormat[\"ms\"] = \"ms\";\r\n})(SixTimeFormat || (SixTimeFormat = {}));\n\n/*\r\n * Returns the current time in the format of your choice\r\n */\r\nconst getCurrentTimeIn24Hours = () => {\r\n  const now = new Date();\r\n  return {\r\n    hours: now.getHours(),\r\n    minutes: now.getMinutes(),\r\n    seconds: now.getSeconds(),\r\n    milliseconds: now.getMilliseconds(),\r\n    has24Hours: true,\r\n  };\r\n};\r\nconst HOURS_IN_12_HOUR_CLOCK_FORMAT = 12;\r\nconst getHoursIn12HourFormat = (hours) => hours > HOURS_IN_12_HOUR_CLOCK_FORMAT ? hours - HOURS_IN_12_HOUR_CLOCK_FORMAT : hours;\r\nconst getCurrentTimeIn12Hours = () => {\r\n  const now = new Date();\r\n  const hours = now.getHours();\r\n  return {\r\n    hours: getHoursIn12HourFormat(hours),\r\n    minutes: now.getMinutes(),\r\n    seconds: now.getSeconds(),\r\n    milliseconds: now.getMilliseconds(),\r\n    has24Hours: false,\r\n    period: hours >= HOURS_IN_12_HOUR_CLOCK_FORMAT ? SixTimePeriod.PM : SixTimePeriod.AM,\r\n  };\r\n};\r\nconst getCurrentTime = (has24Hours = true) => {\r\n  return has24Hours ? getCurrentTimeIn24Hours() : getCurrentTimeIn12Hours();\r\n};\r\nconst TIME_FORMAT_SEPARATOR = ':';\r\nconst isValidTimeString = (timeStr, format) => {\r\n  const timeStringParts = timeStr.split(TIME_FORMAT_SEPARATOR);\r\n  const timeFormatParts = format.split(TIME_FORMAT_SEPARATOR);\r\n  return timeStringParts.length === timeFormatParts.length;\r\n};\r\nconst parseTimeString = (timeStr, format) => {\r\n  const timeStringParts = timeStr.split(TIME_FORMAT_SEPARATOR);\r\n  const timeFormatParts = format.split(TIME_FORMAT_SEPARATOR);\r\n  if (!isValidTimeString(timeStr, format)) {\r\n    console.error(`Timestring did not match expected format.\\nExpected format: ${format}\\nReceived timestring: ${timeStr}`);\r\n  }\r\n  const sixTime = {};\r\n  timeStringParts.forEach((timeStringPart, i) => {\r\n    const formatStringPart = timeFormatParts[i];\r\n    const sixTimePropertyName = TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP[formatStringPart];\r\n    if (sixTimePropertyName !== undefined) {\r\n      if (formatStringPart === TIME_FORMAT_CHAR.PERIOD) {\r\n        sixTime.period = timeStringPart.toUpperCase() === SixTimePeriod.PM ? SixTimePeriod.PM : SixTimePeriod.AM;\r\n      }\r\n      else {\r\n        sixTime[sixTimePropertyName] = Number(timeStringPart);\r\n      }\r\n    }\r\n    if (formatStringPart === TIME_FORMAT_CHAR.HOUR_24) {\r\n      sixTime.has24Hours = true;\r\n    }\r\n    else if (formatStringPart === TIME_FORMAT_CHAR.HOUR_12) {\r\n      sixTime.has24Hours = false;\r\n    }\r\n  });\r\n  return sixTime;\r\n};\r\nconst createTimeString = (time, format) => {\r\n  return format\r\n    .split(TIME_FORMAT_SEPARATOR)\r\n    .map((timeFormatPart) => {\r\n    const sixTimePropertyName = TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP[timeFormatPart];\r\n    const paddingLength = timeFormatPart === TIME_FORMAT_CHAR.MILLISECOND ? 3 : 2;\r\n    return String(time[sixTimePropertyName]).padStart(paddingLength, '0');\r\n  })\r\n    .join(TIME_FORMAT_SEPARATOR);\r\n};\n\nconst sixTimepickerCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:block;font-family:var(--six-font-family)}.timepicker_clear{display:inline-flex;align-items:center;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;padding:0;transition:var(--six-transition-fast) color;cursor:pointer}.timepicker_clear:hover{color:var(--six-input-icon-color-hover)}.timepicker_clear:focus{outline:none}.timepicker_clear--right{right:0;position:absolute}.timepicker_clear--left{right:35px;position:absolute}.timepicker__container{position:relative}.timepicker__popup{display:flex;justify-content:center;min-width:min-content;min-height:145px;background-color:white;padding:0.5em 0.5em 1.5em;box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);user-select:none;position:absolute;z-index:var(--six-z-index-dropdown);right:0;left:0}.timepicker__popup--is-up{bottom:100%}.timepicker__popup--is-inline{position:initial;box-shadow:none;border:1px solid var(--six-color-web-rock-400)}.timepicker__separator{display:flex;align-items:center}.timepicker__item--wide{padding-left:0.5rem;padding-right:0.5rem}.input--empty .timepicker_clear{visibility:hidden}.input--hide{display:none}.prefix{cursor:pointer}.prefix--right{right:0;display:inline-flex;position:absolute;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;margin-right:var(--six-input-spacing-medium);transition:var(--six-transition-fast) color}\";\n\nconst TAG = `[SIX-TIMEPICKER]`;\r\nconst DEBOUNCE_TIMEPICKER_LISTENER = 'debounced-timepicker';\r\nconst MIN_POPUP_HEIGHT = 145;\r\nlet SixTimepicker = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixChange = createEvent(this, \"six-timepicker-change\", 7);\r\n    this.sixChangeDebounced = createEvent(this, \"six-timepicker-change-debounced\", 7);\r\n    this.sixClear = createEvent(this, \"six-timepicker-clear\", 7);\r\n    this.eventListeners = new EventListeners();\r\n    /**\r\n     * Define the time format. Valid formats are:\r\n     *\r\n     * HH:mm:ss\r\n     * hh:mm:ss:aa\r\n     * HH:mm:ss:ms\r\n     * hh:mm:ss:ms:aa\r\n     * HH:mm\r\n     * hh:mm:aa\r\n     * HH\r\n     * hh:aa\r\n     * mm\r\n     * ss\r\n     * ms\r\n     *\r\n     * where HH is the 24 hour format\r\n     * and hh is the 12 hour format\r\n     *\r\n     * Please notice that when using the 12-hour-clock (hh)\r\n     * you always need a period indicator (aa). So the time can be parsed as either am or pm\r\n     * */\r\n    this.format = SixTimeFormat.HHmmss;\r\n    /**\r\n     * Define the separator to be shown between the time unit pickers.\r\n     * Please be aware that this property will modify the displayed separator only.\r\n     * The separator for a timestring is always expected to be a colon (eg. '13:52:20')\r\n     * */\r\n    this.separator = TIME_FORMAT_SEPARATOR;\r\n    /** Indicates whether or not the timepicker dropdown is open on startup. You can use this in lieu of the show/hide methods. */\r\n    this.open = false;\r\n    /** Indicates whether or not the timepicker should be shown as an inline (always open) component */\r\n    this.inline = false;\r\n    /**\r\n     * If `true` the user can only select a time via the timepicker but not directly edit the input field.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true` the component is disabled.\r\n     */\r\n    this.disabled = false;\r\n    /** Timepicker size. */\r\n    this.size = 'medium';\r\n    /** Set to display the error text on blur and not when typing */\r\n    this.errorOnBlur = false;\r\n    /** The input's error text. Alternatively, you can use the error-text slot. */\r\n    this.errorText = '';\r\n    /** The input's label. Alternatively, you can use the label slot. */\r\n    this.label = '';\r\n    /** The input's name attribute. */\r\n    this.name = '';\r\n    /** Set to true to add a clear button when the input is populated. */\r\n    this.clearable = false;\r\n    /** Set the position of the icon */\r\n    this.iconPosition = 'left';\r\n    /**\r\n     * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\r\n     * `overflow: auto|scroll`.\r\n     */\r\n    this.hoist = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger faster switching between timeunits (e.g. hours).\r\n     */\r\n    this.timeout = DEFAULT_DEBOUNCE_FAST;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait between switching to next timeunit (e.g. next hour) when mouse button is held pressed.\r\n     */\r\n    this.interval = DEFAULT_DEBOUNCE_INSANELY_FAST;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `six-timepicker-change-debounced` event.\r\n     * If you want your change debounce event to not trigger when keeping the nav button pressed before, make sure debounce\r\n     * is a bit bigger than timeout, otherwise keeping the button pressed will trigger the event twice: once you click\r\n     * (and keep pressed) and once you release\r\n     */\r\n    this.debounce = DEFAULT_DEBOUNCE_FAST;\r\n    this.isPopupContentUp = false;\r\n    this.isDropDownContentUp = false;\r\n    this.defaultValue = null;\r\n    this.handleInputChange = (event) => {\r\n      event.stopPropagation();\r\n      const inputValue = this.inputElement.value;\r\n      if (!isValidTimeString(inputValue, this.format)) {\r\n        this.sixChange.emit({\r\n          value: {},\r\n          valueAsString: '',\r\n        });\r\n        return;\r\n      }\r\n      this.internalValue = parseTimeString(inputValue, this.format);\r\n      this.sixChange.emit({\r\n        value: this.internalValue,\r\n        valueAsString: createTimeString(this.internalValue, this.format),\r\n      });\r\n    };\r\n    this.handleSixTimepickerChangeDebounced = ({ detail }) => {\r\n      this.sixChangeDebounced.emit(detail);\r\n    };\r\n    this.handleChange = (event, property) => {\r\n      // stop propagation, since the timepicker should not expose the events of the underlying item-picker\r\n      event.stopPropagation();\r\n      // update the internal state\r\n      this.internalValue[property] = event.detail;\r\n      const timeString = createTimeString(this.internalValue, this.format);\r\n      // fire timepicker's own event\r\n      this.sixChange.emit({\r\n        changedProperty: property,\r\n        value: this.internalValue,\r\n        valueAsString: timeString,\r\n      });\r\n      // update the input value\r\n      this.value = timeString;\r\n    };\r\n    this.handleDocumentMouseDown = (event) => {\r\n      // Close when clicking outside of the containing element\r\n      const path = event.composedPath();\r\n      if (!path.includes(this.host)) {\r\n        this.closePopup();\r\n        return;\r\n      }\r\n    };\r\n    this.handleClearClick = (event) => {\r\n      event.stopPropagation();\r\n      this.value = undefined;\r\n      this.sixClear.emit();\r\n    };\r\n  }\r\n  async resizeHandler() {\r\n    this.calcIsPopupContentUp();\r\n    this.moveOpenHoistedPopup();\r\n  }\r\n  async scrollHandler() {\r\n    this.calcIsPopupContentUp();\r\n    this.moveOpenHoistedPopup();\r\n  }\r\n  debounceChanged() {\r\n    this.eventListeners.removeByIdentifier(DEBOUNCE_TIMEPICKER_LISTENER);\r\n    this.eventListeners.add(this.host, 'six-timepicker-change', debounce(this.handleSixTimepickerChangeDebounced, this.debounce), DEBOUNCE_TIMEPICKER_LISTENER);\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged(newValue) {\r\n    if (this.value !== newValue) {\r\n      this.value = newValue;\r\n    }\r\n    this.setupInternalTime();\r\n    this.sixChange.emit({\r\n      value: this.internalValue,\r\n      valueAsString: createTimeString(this.internalValue, this.format),\r\n    });\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.inputElement.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.inputElement.checkValidity();\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    await this.inputElement.setCustomValidity(message);\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.internalValue = this.defaultValue;\r\n    this.inputElement.value = createTimeString(this.internalValue, this.format);\r\n    await this.inputElement.reset();\r\n  }\r\n  componentWillLoad() {\r\n    this.setupInternalTime();\r\n    if (this.inline) {\r\n      this.open = true;\r\n    }\r\n    if (this.open) {\r\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.eventListeners.add(this.host, 'six-timepicker-change', debounce(this.handleSixTimepickerChangeDebounced, this.debounce), DEBOUNCE_TIMEPICKER_LISTENER);\r\n    this.eventListeners.add(this.inputElement, 'six-input-input', debounce(this.handleInputChange, this.debounce));\r\n  }\r\n  disconnectedCallback() {\r\n    this.eventListeners.removeAll();\r\n  }\r\n  calcIsPopupContentUp() {\r\n    if (!this.inputElement || !this.wrapper) {\r\n      return;\r\n    }\r\n    const inputBoundingRect = this.inputElement.getBoundingClientRect();\r\n    const wrapperBoundingRect = this.wrapper.getBoundingClientRect();\r\n    const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);\r\n    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\r\n    this.isPopupContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;\r\n  }\r\n  /*\r\n   * The position of the hoisted timepicker needs to be correctly calculated since the position changes to fixed.\r\n   * Thus if the user scrolls or adjusts the screen size we need to recalculate the timepicker position.\r\n   */\r\n  moveOpenHoistedPopup() {\r\n    if (!this.hoist || !this.open) {\r\n      return;\r\n    }\r\n    const popupBoundingClientRect = this.popup.getBoundingClientRect();\r\n    const popupHeight = popupBoundingClientRect.height;\r\n    const inputBoundingClientRect = this.inputElement.getBoundingClientRect();\r\n    const inputTop = inputBoundingClientRect.top;\r\n    const inputHeight = inputBoundingClientRect.height;\r\n    this.calcIsPopupContentUp();\r\n    if (this.isPopupContentUp) {\r\n      this.popup.style.top = `${inputTop - popupHeight}px`;\r\n    }\r\n    else {\r\n      this.popup.style.top = `${inputTop + inputHeight}px`;\r\n    }\r\n  }\r\n  getSixTimeUnitPicker(params) {\r\n    return (h(\"six-item-picker\", { class: params.class, timeout: this.timeout, interval: this.interval, padded: true, min: params.min, max: params.max, value: this.internalValue[params.propertyName], items: params.items, type: params.type || ItemPickerType.NUMBER, \"padding-length\": params.paddingLength, \"onSix-item-picker-change\": (event) => this.handleChange(event, params.propertyName) }));\r\n  }\r\n  setupInternalTime() {\r\n    if (this.is12HourClock() && !this.format.includes(TIME_FORMAT_CHAR.PERIOD)) {\r\n      console.error(`${TAG} You provided a 12-hour-clock format but are missing the period (am or pm) in the time-format-string!`);\r\n    }\r\n    if (this.value === null || this.value === undefined) {\r\n      this.internalValue = isNil(this.defaultTime)\r\n        ? getCurrentTime(this.is24HourClock())\r\n        : parseTimeString(this.defaultTime, this.format);\r\n    }\r\n    else {\r\n      this.internalValue = parseTimeString(this.value, this.format);\r\n    }\r\n    this.defaultValue = this.internalValue;\r\n  }\r\n  getHour24Picker() {\r\n    if (!this.is24HourClock()) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 23, propertyName: SixTimePropertyName.HOURS });\r\n  }\r\n  is24HourClock() {\r\n    return this.format.includes(TIME_FORMAT_CHAR.HOUR_24);\r\n  }\r\n  getHour12Picker() {\r\n    if (!this.is12HourClock()) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 11, propertyName: SixTimePropertyName.HOURS });\r\n  }\r\n  is12HourClock() {\r\n    return this.format.includes(TIME_FORMAT_CHAR.HOUR_12);\r\n  }\r\n  getAmPmPicker() {\r\n    if (!this.is12HourClock()) {\r\n      return;\r\n    }\r\n    const items = ['AM', 'PM'];\r\n    return this.getSixTimeUnitPicker({\r\n      items,\r\n      type: ItemPickerType.CUSTOM,\r\n      propertyName: SixTimePropertyName.PERIOD,\r\n    });\r\n  }\r\n  getMinutePicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.MINUTE)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: SixTimePropertyName.MINUTES });\r\n  }\r\n  getSecondsPicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.SECOND)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: SixTimePropertyName.SECONDS });\r\n  }\r\n  getMillisecondsPicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.MILLISECOND)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({\r\n      min: 0,\r\n      max: 999,\r\n      class: 'timepicker__item--wide',\r\n      paddingLength: 3,\r\n      propertyName: SixTimePropertyName.MILLISECONDS,\r\n    });\r\n  }\r\n  getSeparator() {\r\n    return (h(\"div\", { class: \"timepicker__separator\" }, h(\"span\", null, this.separator)));\r\n  }\r\n  getContent() {\r\n    const elementsInOrder = [\r\n      this.getHour24Picker(),\r\n      this.getHour12Picker(),\r\n      this.getMinutePicker(),\r\n      this.getSecondsPicker(),\r\n      this.getMillisecondsPicker(),\r\n    ];\r\n    const visibleElements = elementsInOrder.filter((el) => el !== undefined);\r\n    return visibleElements.map((el, idx) => {\r\n      if (idx === visibleElements.length - 1) {\r\n        return [el];\r\n      }\r\n      return [el, this.getSeparator()];\r\n    });\r\n  }\r\n  openPopup() {\r\n    if (!this.open && !this.disabled) {\r\n      this.open = true;\r\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\r\n    }\r\n  }\r\n  closePopup() {\r\n    if (this.inline) {\r\n      return;\r\n    }\r\n    this.open = false;\r\n    this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);\r\n  }\r\n  renderClearable() {\r\n    return (this.clearable && (h(\"button\", { slot: \"suffix\", class: {\r\n        timepicker_clear: true,\r\n        'timepicker_clear--right': this.iconPosition === 'left',\r\n        'timepicker_clear--left': this.iconPosition === 'right',\r\n      }, type: \"button\", onClick: this.handleClearClick, tabindex: \"-1\" }, h(\"six-icon\", { size: \"small\" }, \"clear\"))));\r\n  }\r\n  renderCustomIcon() {\r\n    const icon = hasSlot(this.host, 'custom-icon') ? (h(\"slot\", { name: \"custom-icon\" })) : (h(\"six-icon\", { size: this.size === 'large' ? 'medium' : this.size }, \"watch_later\"));\r\n    return (h(\"span\", { slot: \"prefix\", part: \"icon\", class: {\r\n        prefix: true,\r\n        'prefix--right': this.iconPosition === 'right',\r\n      } }, icon));\r\n  }\r\n  calcIsDropDownContentUp() {\r\n    if (!this.inputElement || !this.wrapper) {\r\n      return;\r\n    }\r\n    const inputBoundingRect = this.inputElement.getBoundingClientRect();\r\n    const wrapperBoundingRect = this.wrapper.getBoundingClientRect();\r\n    const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);\r\n    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\r\n    this.isDropDownContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;\r\n  }\r\n  /*\r\n   * If the popup is hoisted we popup is hoisted its position will change to fix to not be clipped of by a containing container.\r\n   * To render the popup correctly we render it normally, and then assign this screenposition to the fixed popup\r\n   */\r\n  adjustPopupForHoisting() {\r\n    if (!this.hoist) {\r\n      return;\r\n    }\r\n    // execute after dropdown has been rendered to make sure the popup reference is correctly set\r\n    setTimeout(() => {\r\n      if (!this.popup) {\r\n        return;\r\n      }\r\n      // take a snapshot of normally rendered popup\r\n      const popupBoundingClientRect = this.popup.getBoundingClientRect();\r\n      // apply screen position to fixed popup\r\n      this.popup.style.position = 'fixed';\r\n      ['top', 'left', 'width', 'height'].forEach((property) => {\r\n        this.popup.style[property] = `${popupBoundingClientRect[property]}px`;\r\n      });\r\n      const inputBoundingClientRect = this.inputElement.getBoundingClientRect();\r\n      const inputTop = inputBoundingClientRect.top;\r\n      const popupTop = popupBoundingClientRect.top;\r\n      this.calcIsDropDownContentUp();\r\n      // check screen position to check whether the popup should be moved above or below the trigger element\r\n      if (this.isDropDownContentUp && inputTop < popupTop) {\r\n        //  move popup above input field if timepicker is at bottom of screen\r\n        this.popup.style.top = `${popupTop - popupBoundingClientRect.height - inputBoundingClientRect.height}px`;\r\n      }\r\n    }, 0);\r\n  }\r\n  render() {\r\n    this.adjustPopupForHoisting();\r\n    return (h(\"div\", { part: \"container\", ref: (el) => (this.wrapper = el), class: \"timepicker__container\" }, h(\"six-input\", { ref: (el) => (this.inputElement = el), part: \"input\", onClick: () => this.openPopup(), value: this.value, placeholder: this.placeholder, readonly: this.readonly, disabled: this.disabled, size: this.size, name: this.name, label: this.label, required: this.required, \"error-text\": this.errorText, \"error-on-blur\": this.errorOnBlur, class: {\r\n        'input--empty': !this.value,\r\n        'input--hide': this.inline,\r\n      } }, this.renderCustomIcon(), this.renderClearable(), hasSlot(this.host, 'error-text') ? (h(\"span\", { slot: \"error-text\" }, h(\"slot\", { name: \"error-text\" }))) : null, hasSlot(this.host, 'label') ? (h(\"span\", { slot: \"label\" }, h(\"slot\", { name: \"label\" }))) : null), this.open && (h(\"div\", { ref: (el) => (this.popup = el), part: \"popup\", class: {\r\n        timepicker__popup: true,\r\n        'timepicker__popup--is-up': this.placement ? this.placement === 'top' : this.isPopupContentUp,\r\n        'timepicker__popup--is-inline': this.inline,\r\n      } }, ...this.getContent(), this.getAmPmPicker()))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nSixTimepicker.style = sixTimepickerCss;\n\nexport { SixTimepicker as six_timepicker };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}