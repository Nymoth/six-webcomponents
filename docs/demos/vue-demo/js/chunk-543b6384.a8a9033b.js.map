{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/six-form.entry.js","webpack:///./node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js"],"names":["sixFormCss","SixForm","hostRef","this","sixSubmit","sixChange","sixReset","eventListeners","novalidate","formControls","tag","serialize","el","formData","name","disabled","append","value","click","event","target","submit","reset","checked","changeEventName","keyDown","key","defaultPrevented","_a","toISOString","multiple","selectedOptions","length","map","handleClick","bind","handleKeyDown","removeAll","getFormControls","then","controls","forEach","control","appendChangeListener","tagName","toLowerCase","formControl","add","handleChange","FormData","serializeElement","slot","form","querySelector","tags","assignedElements","flatten","reduce","all","concat","querySelectorAll","filter","includes","getFormData","formControlsThatReport","reportValidity","isValid","emit","validationTasks","checkValidity","invalidControls","Promise","results","valid","ref","part","class","role","onClick","onKeyDown","style","equals","a","b","Object","keys","every","EventListeners","listener","identifier","push","addEventListener","remove","sameItem","getFilteredEventListeners","removeByIdentifier","foundListener","undefined","find","pop","removeEventListener","item"],"mappings":"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","file":"js/chunk-543b6384.a8a9033b.js","sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-a2605a62.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\n\nconst sixFormCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:block}\";\n\nlet SixForm = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixSubmit = createEvent(this, \"six-form-submit\", 7);\r\n    this.sixChange = createEvent(this, \"six-form-change\", 7);\r\n    this.sixReset = createEvent(this, \"six-form-reset\", 7);\r\n    this.eventListeners = new EventListeners();\r\n    /** Prevent the form from validating inputs before submitting. */\r\n    this.novalidate = false;\r\n  }\r\n  connectedCallback() {\r\n    this.formControls = [\r\n      {\r\n        tag: 'six-button',\r\n        serialize: (el, formData) => el.name && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        click: (event) => {\r\n          const target = event.target;\r\n          if (target.submit) {\r\n            this.submit();\r\n          }\r\n          if (target.reset) {\r\n            this.reset();\r\n          }\r\n        },\r\n      },\r\n      {\r\n        tag: 'six-checkbox',\r\n        serialize: (el, formData) => el.name && el.checked && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        changeEventName: 'six-checkbox-change',\r\n      },\r\n      {\r\n        tag: 'six-color-picker',\r\n        serialize: (el, formData) => el.name && !el.disabled ? formData.append(el.name, el.value) : null,\r\n      },\r\n      {\r\n        tag: 'six-input',\r\n        serialize: (el, formData) => el.name && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        keyDown: (event) => {\r\n          if (event.key === 'Enter' && !event.defaultPrevented) {\r\n            this.submit();\r\n          }\r\n        },\r\n        changeEventName: 'six-input-change',\r\n      },\r\n      {\r\n        tag: 'six-datepicker',\r\n        serialize: (el, formData) => { var _a; return el.name && !el.disabled ? formData.append(el.name, (_a = el.value) === null || _a === void 0 ? void 0 : _a.toISOString()) : null; },\r\n        keyDown: (event) => {\r\n          if (event.key === 'Enter' && !event.defaultPrevented) {\r\n            this.submit();\r\n          }\r\n        },\r\n        changeEventName: 'six-datepicker-select',\r\n      },\r\n      {\r\n        tag: 'six-radio',\r\n        serialize: (el, formData) => el.name && el.checked && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        changeEventName: 'six-radio-change',\r\n      },\r\n      {\r\n        tag: 'six-range',\r\n        serialize: (el, formData) => {\r\n          if (el.name && !el.disabled) {\r\n            formData.append(el.name, el.value + '');\r\n          }\r\n        },\r\n        changeEventName: 'six-range-change',\r\n      },\r\n      {\r\n        tag: 'six-select',\r\n        serialize: (el, formData) => {\r\n          if (el.name && !el.disabled) {\r\n            if (el.multiple) {\r\n              const selectedOptions = [...el.value];\r\n              if (selectedOptions.length) {\r\n                selectedOptions.map((value) => formData.append(el.name, value));\r\n              }\r\n              else {\r\n                formData.append(el.name, '');\r\n              }\r\n            }\r\n            else {\r\n              formData.append(el.name, el.value + '');\r\n            }\r\n          }\r\n        },\r\n        changeEventName: 'six-select-change',\r\n      },\r\n      {\r\n        tag: 'six-switch',\r\n        serialize: (el, formData) => el.name && el.checked && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        changeEventName: 'six-switch-change',\r\n      },\r\n      {\r\n        tag: 'six-textarea',\r\n        serialize: (el, formData) => el.name && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        changeEventName: 'six-textarea-change',\r\n      },\r\n      {\r\n        tag: 'six-timepicker',\r\n        serialize: (el, formData) => el.name && !el.disabled ? formData.append(el.name, el.value) : null,\r\n        keyDown: (event) => {\r\n          if (event.key === 'Enter' && !event.defaultPrevented) {\r\n            this.submit();\r\n          }\r\n        },\r\n        changeEventName: 'six-timepicker-change',\r\n      },\r\n    ];\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n  disconnectedCallback() {\r\n    this.eventListeners.removeAll();\r\n  }\r\n  componentDidLoad() {\r\n    this.getFormControls().then((controls) => controls.forEach((control) => this.appendChangeListener(control)));\r\n  }\r\n  appendChangeListener(el) {\r\n    const tag = el.tagName.toLowerCase();\r\n    for (const formControl of this.formControls) {\r\n      if (formControl.tag === tag && formControl.changeEventName) {\r\n        this.eventListeners.add(el, formControl.changeEventName, () => this.handleChange(el));\r\n      }\r\n    }\r\n  }\r\n  /** Serializes all form controls elements and returns a `FormData` object. */\r\n  async getFormData() {\r\n    const formData = new FormData();\r\n    const formControls = await this.getFormControls();\r\n    formControls.map((el) => this.serializeElement(el, formData));\r\n    return formData;\r\n  }\r\n  /** Gets all form control elements (native and custom). */\r\n  async getFormControls() {\r\n    const slot = this.form.querySelector('slot');\r\n    const tags = this.formControls.map((control) => control.tag);\r\n    return slot\r\n      .assignedElements({ flatten: true })\r\n      .reduce((all, el) => all.concat(el, [...el.querySelectorAll('*')]), [])\r\n      .filter((el) => tags.includes(el.tagName.toLowerCase()));\r\n  }\r\n  /**\r\n   * Submits the form. If all controls are valid, the `six-form-submit` event will be emitted and the promise will resolve\r\n   * with `true`. If any form control is invalid, the promise will resolve with `false` and no event will be emitted.\r\n   */\r\n  async submit() {\r\n    const formData = await this.getFormData();\r\n    const formControls = await this.getFormControls();\r\n    const formControlsThatReport = formControls.filter((el) => typeof el.reportValidity === 'function');\r\n    if (!this.novalidate) {\r\n      let isValid = true;\r\n      for (const el of formControlsThatReport) {\r\n        if (!(await el.reportValidity())) {\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (!isValid) {\r\n        return false;\r\n      }\r\n    }\r\n    this.sixSubmit.emit({ formData, formControls });\r\n    return true;\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    const formControls = await this.getFormControls();\r\n    const validationTasks = formControls\r\n      .filter((el) => typeof el.checkValidity === 'function')\r\n      .map((el) => el.checkValidity());\r\n    const invalidControls = await Promise.all(validationTasks).then((results) => results.filter((valid) => valid === false));\r\n    return invalidControls.length == 0;\r\n  }\r\n  /** Resets the form and resets the value of all descendants*/\r\n  async reset() {\r\n    const formControls = await this.getFormControls();\r\n    formControls\r\n      .filter((control) => (control === null || control === void 0 ? void 0 : control.reset) && typeof (control === null || control === void 0 ? void 0 : control.reset) === 'function')\r\n      .forEach((formControl) => formControl.reset());\r\n    this.sixReset.emit();\r\n  }\r\n  handleClick(event) {\r\n    const target = event.target;\r\n    const tag = target.tagName.toLowerCase();\r\n    for (const formControl of this.formControls) {\r\n      if (formControl.tag === tag && formControl.click) {\r\n        formControl.click(event);\r\n      }\r\n    }\r\n  }\r\n  handleKeyDown(event) {\r\n    const target = event.target;\r\n    const tag = target.tagName.toLowerCase();\r\n    for (const formControl of this.formControls) {\r\n      if (formControl.tag === tag && formControl.keyDown) {\r\n        formControl.keyDown(event);\r\n      }\r\n    }\r\n  }\r\n  handleChange(el) {\r\n    this.checkValidity().then((isValid) => this.sixChange.emit({\r\n      valid: isValid,\r\n      formControl: el,\r\n    }));\r\n  }\r\n  serializeElement(el, formData) {\r\n    const tag = el.tagName.toLowerCase();\r\n    for (const formControl of this.formControls) {\r\n      if (formControl.tag === tag) {\r\n        return formControl.serialize(el, formData);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    return (h(\"div\", { ref: (el) => (this.form = el), part: \"base\", class: \"form\", role: \"form\", onClick: this.handleClick, onKeyDown: this.handleKeyDown }, h(\"slot\", null)));\r\n  }\r\n};\r\nSixForm.style = sixFormCss;\n\nexport { SixForm as six_form };\n","const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n"],"sourceRoot":""}