{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/slot-5253e199.js","webpack:///./node_modules/@six/ui-library/dist/esm/six-tile.entry.js"],"names":["getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","el","name","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","Object","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","sixTileCss","SixTile","hostRef","this","sixTileClose","sixTileSelected","label","closeable","elevated","disableTooltip","disabled","size","visible","hasIconSlot","hasLabelSlot","handleCloseClickEvent","emit","handleClickEvent","handleSlotChange","bind","addEventListener","content","part","class","tile","closeIconSize","onClick","iconName","iconSize","small","medium","large","style"],"mappings":"kHAKA,SAASA,EAAeC,GACtB,MAAMC,EAAQD,EAAOA,EAAKE,cAAc,CAAEC,SAAS,IAAU,GAC7D,IAAIC,EAAO,GAMX,MALA,IAAIH,GAAOI,IAAKC,IACVA,EAAKC,WAAaC,KAAKC,YACzBL,GAAQE,EAAKI,eAGVN,EAMT,SAASO,EAAQC,EAAIC,GAEnB,OAAIA,EAC8C,OAAzCD,EAAGE,cAAc,UAAUD,OAG7BE,MAAMC,KAAKJ,EAAGK,YAAYC,KAAMZ,IACrC,GAAIA,EAAKC,WAAaD,EAAKG,WAAyC,KAA5BH,EAAKI,YAAYS,OACvD,OAAO,EAET,GAAIb,EAAKC,WAAaD,EAAKc,aAAc,CACvC,MAAMR,EAAKN,EACX,IAAKM,EAAGS,aAAa,QACnB,OAAO,EAGX,OAAO,IAnCX,wIAsCA,MAAMC,EAAY,CAACC,GAAMC,EAAGC,KAAQC,OAAOC,OAAOD,OAAOC,OAAO,GAAIJ,GAAM,CAAE,CAACC,GAAIC,IAC3EG,EAAqBC,GAAWC,GAASJ,OAAOK,OAAOF,GAC1DxB,IAAKQ,GAAS,CAACA,EAAMF,EAAQmB,EAAMjB,KACnCmB,OAAOV,EAAW,IACfW,EAAmBrB,IAAS,IAAIsB,EAAI,OAA2C,QAAnCA,EAAKtB,EAAGE,cAAc,eAA4B,IAAPoB,OAAgB,EAASA,EAAGC,iBAAiB,CAAEhC,SAAS,M,kCC1CrJ,4EAGA,MAAMiC,EAAa,moEAEnB,IAAIC,EAAU,MACZ,YAAYC,GACV,eAAiBC,KAAMD,GACvBC,KAAKC,aAAe,eAAYD,KAAM,kBAAmB,GACzDA,KAAKE,gBAAkB,eAAYF,KAAM,oBAAqB,GAE9DA,KAAKG,MAAQ,GAEbH,KAAKI,WAAY,EAEjBJ,KAAKK,UAAW,EAEhBL,KAAKM,gBAAiB,EAEtBN,KAAKO,UAAW,EAEhBP,KAAKQ,KAAO,SACZR,KAAKS,SAAU,EACfT,KAAKU,aAAc,EACnBV,KAAKW,cAAe,EACpBX,KAAKY,sBAAwB,KAC3BZ,KAAKS,SAAU,EACfT,KAAKC,aAAaY,QAEpBb,KAAKc,iBAAmB,KACtBd,KAAKE,gBAAgBW,QAIzB,aACEb,KAAKS,SAAU,EAGjB,aACET,KAAKS,SAAU,EAEjB,oBACET,KAAKe,iBAAmBf,KAAKe,iBAAiBC,KAAKhB,MAErD,oBACEA,KAAKe,mBAEP,mBAGE,GAFAf,KAAKU,YAAc,eAAQV,KAAKT,KAAM,QACtCS,KAAKW,aAAe,eAAQX,KAAKT,KAAM,SACnCS,KAAKU,YAAa,CACpB,IAAIjD,EAAOuC,KAAKT,KAAKhB,cAAc,iBACnCd,EAAKwD,iBAAiB,QAASjB,KAAKc,kBAEtC,GAAId,KAAKW,aAAc,CACrB,IAAIlD,EAAOuC,KAAKT,KAAKhB,cAAc,kBACnCd,EAAKwD,iBAAiB,QAASjB,KAAKc,mBAGxC,SACE,OAAQ,cAAD,CAAG,cAAe,CAAEP,SAAUP,KAAKM,gBAAiC,KAAfN,KAAKG,MAAce,QAASlB,KAAKG,OAAS,eAAE,MAAO,CAAEgB,KAAM,OAAQC,MAAO,CAClIC,MAAM,EACN,gBAAiBrB,KAAKS,QACtB,cAA6B,UAAdT,KAAKQ,KACpB,eAA8B,WAAdR,KAAKQ,KACrB,cAA6B,UAAdR,KAAKQ,KACpB,iBAAkBR,KAAKK,WACpB,eAAE,MAAO,CAAEc,KAAM,SAAUC,MAAO,gBAAkB,eAAE,kBAAmB,CAAEA,MAAO,CACrF,wBAAyBpB,KAAKI,WAC7B9B,KAAM,QAASkC,KAAMc,EAActB,KAAKQ,MAAOe,QAASvB,KAAKY,yBAA2B,eAAE,MAAO,CAAEO,KAAM,OAAQC,MAAO,cAAgBpB,KAAKwB,UAAa,cAAD,CAAG,WAAY,CAAED,QAASvB,KAAKc,iBAAkBN,KAAMiB,EAASzB,KAAKQ,OAASR,KAAKwB,UAAYxB,KAAKU,aAAe,eAAE,OAAQ,CAAEpC,KAAM,UAAY,eAAE,MAAO,CAAE6C,KAAM,SAAUC,MAAO,CAC7U,sBAAqC,UAAdpB,KAAKQ,KAC5B,uBAAsC,WAAdR,KAAKQ,KAC7B,sBAAqC,UAAdR,KAAKQ,OACzBR,KAAKG,OAAU,cAAD,CAAG,MAAO,CAAEiB,MAAO,CACpC,kBAAkB,GACjBG,QAASvB,KAAKc,kBAAoBd,KAAKG,OAASH,KAAKW,cAAgB,eAAE,OAAQ,CAAErC,KAAM,aAE9F,WAAa,OAAO,eAAW0B,QAEjC,MAAMsB,EAAiBd,IACd,CACLkB,MAAO,UACPC,OAAQ,SACRC,MAAO,UACPpB,IAEEiB,EAAYjB,IACT,CACLkB,MAAO,SACPC,OAAQ,UACRC,MAAO,YACPpB,IAEJV,EAAQ+B,MAAQhC","file":"js/chunk-4964221a.d1cee6c6.js","sourcesContent":["//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { h as hasSlot } from './slot-5253e199.js';\n\nconst sixTileCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:inline-block}.tile{min-height:var(--tile-size);width:var(--tile-size);background-color:var(--six-color-clay-50);display:inline-grid;grid-template-columns:100%;grid-template-areas:\\\"header\\\" \\\"middle\\\" \\\"footer\\\"}.tile--small{--tile-size:80px;--tile-padding-size:var(--six-spacing-medium)}.tile--medium{--tile-size:120px;--tile-padding-size:var(--six-spacing-large)}.tile--large{--tile-size:160px;--tile-padding-size:var(--six-spacing-x-large)}.tile:not(.tile--visible){visibility:hidden}.tile--elevated{border:0;box-shadow:var(--six-elevation-8dp)}.tile__header{grid-area:header;height:5%;justify-self:right;display:flex;justify-content:right;opacity:0;transition:var(--six-transition-fast) opacity}.tile:hover>.tile__header{opacity:1}.tile__header--hidden{visibility:hidden}.tile__header six-icon-button{margin-top:-6px;margin-right:-6px;margin-bottom:-16px}.tile__body,.tile__body--large,.tile__body--medium,.tile__body--small{grid-area:middle;display:grid;place-items:center;cursor:pointer;padding-left:var(--tile-padding-size);padding-right:var(--tile-padding-size)}.tile__body six-icon::part(base),.tile__body--large six-icon::part(base),.tile__body--medium six-icon::part(base),.tile__body--small six-icon::part(base){padding:0}.tile__body--small{--tile-padding-size:var(--six-spacing-medium)}.tile__body--medium{--tile-padding-size:var(--six-spacing-large)}.tile__body--large{--tile-padding-size:var(--six-spacing-x-large)}.tile__footer,.tile__footer--large,.tile__footer--medium,.tile__footer--small{grid-area:footer;display:flex;justify-content:center;cursor:pointer;font-weight:var(--six-font-weight-normal);color:var(--six-color-web-rock-900)}.tile__footer--small{font-size:var(--six-font-size-xxx-small)}.tile__footer--medium{font-size:var(--six-font-size-xx-small)}.tile__footer--large{font-size:var(--six-font-size-small)}.tile__footer .label__footer,.tile__footer--small .label__footer,.tile__footer--medium .label__footer,.tile__footer--large .label__footer{overflow:hidden;text-overflow:ellipsis;width:calc(var(--tile-size) - 2em);text-align:center}\";\n\nlet SixTile = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixTileClose = createEvent(this, \"six-tile-closed\", 7);\r\n    this.sixTileSelected = createEvent(this, \"six-tile-selected\", 7);\r\n    /** The tile's label. */\r\n    this.label = '';\r\n    /** Flag, whether the tile is closeable. */\r\n    this.closeable = true;\r\n    /** Flag, whether the tile should cast a shadow. */\r\n    this.elevated = false;\r\n    /** Enables tile tooltip for tiles */\r\n    this.disableTooltip = true;\r\n    /** Set to true to disable the tile. */\r\n    this.disabled = false;\r\n    /** The tile's size. */\r\n    this.size = 'medium';\r\n    this.visible = true;\r\n    this.hasIconSlot = false;\r\n    this.hasLabelSlot = false;\r\n    this.handleCloseClickEvent = () => {\r\n      this.visible = false;\r\n      this.sixTileClose.emit();\r\n    };\r\n    this.handleClickEvent = () => {\r\n      this.sixTileSelected.emit();\r\n    };\r\n  }\r\n  /** Hides the tile */\r\n  async hide() {\r\n    this.visible = false;\r\n  }\r\n  /** Shows the tile */\r\n  async show() {\r\n    this.visible = true;\r\n  }\r\n  connectedCallback() {\r\n    this.handleSlotChange = this.handleSlotChange.bind(this);\r\n  }\r\n  componentWillLoad() {\r\n    this.handleSlotChange();\r\n  }\r\n  handleSlotChange() {\r\n    this.hasIconSlot = hasSlot(this.host, 'icon');\r\n    this.hasLabelSlot = hasSlot(this.host, 'label');\r\n    if (this.hasIconSlot) {\r\n      let slot = this.host.querySelector(`[slot=\"icon\"]`);\r\n      slot.addEventListener('click', this.handleClickEvent);\r\n    }\r\n    if (this.hasLabelSlot) {\r\n      let slot = this.host.querySelector(`[slot=\"label\"]`);\r\n      slot.addEventListener('click', this.handleClickEvent);\r\n    }\r\n  }\r\n  render() {\r\n    return (h(\"six-tooltip\", { disabled: this.disableTooltip || this.label === '', content: this.label }, h(\"div\", { part: \"base\", class: {\r\n        tile: true,\r\n        'tile--visible': this.visible,\r\n        'tile--small': this.size === 'small',\r\n        'tile--medium': this.size === 'medium',\r\n        'tile--large': this.size === 'large',\r\n        'tile--elevated': this.elevated,\r\n      } }, h(\"div\", { part: \"header\", class: \"tile__header\" }, h(\"six-icon-button\", { class: {\r\n        'tile__header--hidden': !this.closeable,\r\n      }, name: \"close\", size: closeIconSize(this.size), onClick: this.handleCloseClickEvent })), h(\"div\", { part: \"body\", class: \"tile__body\" }, this.iconName && (h(\"six-icon\", { onClick: this.handleClickEvent, size: iconSize(this.size) }, this.iconName)), this.hasIconSlot && h(\"slot\", { name: \"icon\" })), h(\"div\", { part: \"footer\", class: {\r\n        'tile__footer--small': this.size === 'small',\r\n        'tile__footer--medium': this.size === 'medium',\r\n        'tile__footer--large': this.size === 'large',\r\n      } }, this.label && (h(\"div\", { class: {\r\n        '.label__footer': true,\r\n      }, onClick: this.handleClickEvent }, this.label)), this.hasLabelSlot && h(\"slot\", { name: \"label\" })))));\r\n  }\r\n  get host() { return getElement(this); }\r\n};\r\nconst closeIconSize = (size) => {\r\n  return {\r\n    small: 'xxSmall',\r\n    medium: 'medium',\r\n    large: 'medium',\r\n  }[size];\r\n};\r\nconst iconSize = (size) => {\r\n  return {\r\n    small: 'xLarge',\r\n    medium: 'xxLarge',\r\n    large: 'xxxLarge',\r\n  }[size];\r\n};\r\nSixTile.style = sixTileCss;\n\nexport { SixTile as six_tile };\n"],"sourceRoot":""}