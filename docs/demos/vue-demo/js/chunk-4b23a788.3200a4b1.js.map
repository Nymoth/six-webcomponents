{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/six-icon-button.entry.js","webpack:///./node_modules/@six/ui-library/dist/esm/focus-visible-1ce30bdf.js"],"names":["sixIconButtonCss","SixIconButton","hostRef","this","size","disabled","handleClickEvent","event","preventDefault","stopPropagation","button","observe","unobserve","html","innerHTML","onClick","class","ref","el","part","type","label","name","style","listeners","WeakMap","keys","is","includes","key","classList","add","isNot","remove","set","addEventListener","get","removeEventListener","focusVisible"],"mappings":"kHAAA,mFAGA,MAAMA,EAAmB,i0CAEzB,IAAIC,EAAgB,MAClB,YAAYC,GACV,eAAiBC,KAAMD,GAEvBC,KAAKC,KAAO,SAEZD,KAAKE,UAAW,EAChBF,KAAKG,iBAAoBC,IACnBJ,KAAKE,WACPE,EAAMC,iBACND,EAAME,oBAIZ,mBACMN,KAAKO,QACP,OAAaC,QAAQR,KAAKO,QAG9B,uBACMP,KAAKO,QACP,OAAaE,UAAUT,KAAKO,QAGhC,SACE,MAAMG,EAAOV,KAAKU,MAAQ,eAAE,OAAQ,CAAEC,UAAWX,KAAKU,OACtD,OAAQ,cAAD,CAAG,MAAO,CAAEE,QAASZ,KAAKG,iBAAkBU,MAAO,CAAE,gCAAiCb,KAAKE,WAAc,eAAE,SAAU,CAAEY,IAAMC,GAAQf,KAAKO,OAASQ,EAAKC,KAAM,OAAQd,SAAUF,KAAKE,SAAUW,MAAO,CACzM,eAAe,EACf,wBAAyBb,KAAKE,UAC7Be,KAAM,SAAU,aAAcjB,KAAKkB,OAAS,eAAE,WAAY,CAAE,cAAe,OAAQjB,KAAMD,KAAKC,MAAQD,KAAKmB,MAAO,eAAE,OAAQ,MAAOT,MAG5IZ,EAAcsB,MAAQvB,G,oCCrCtB,kCAMA,MAAMwB,EAAY,IAAIC,QACtB,SAASd,EAAQO,GACf,IAAKA,EACH,OACF,MAAMQ,EAAO,CAAC,MAAO,UAAW,YAAa,YAAa,aAAc,OAAQ,MAAO,WAAY,UAC7FC,EAAMpB,IACNmB,EAAKE,SAASrB,EAAMsB,MACtBX,EAAGY,UAAUC,IAAI,kBAGfC,EAAQ,IAAMd,EAAGY,UAAUG,OAAO,iBACxCT,EAAUU,IAAIhB,EAAI,CAAES,KAAIK,UACxBd,EAAGiB,iBAAiB,UAAWR,GAC/BT,EAAGiB,iBAAiB,QAASR,GAC7BT,EAAGiB,iBAAiB,YAAaH,GACjCd,EAAGiB,iBAAiB,YAAaH,GAEnC,SAASpB,EAAUM,GACjB,IAAKA,EACH,OACF,MAAM,GAAES,EAAE,MAAEK,GAAUR,EAAUY,IAAIlB,GACpCA,EAAGY,UAAUG,OAAO,iBACpBf,EAAGmB,oBAAoB,UAAWV,GAClCT,EAAGmB,oBAAoB,QAASV,GAChCT,EAAGmB,oBAAoB,YAAaL,GACpCd,EAAGmB,oBAAoB,YAAaL,GAEtC,MAAMM,EAAe,CACnB3B,UACAC","file":"js/chunk-4b23a788.3200a4b1.js","sourcesContent":["import { r as registerInstance, h } from './index-a2605a62.js';\nimport { f as focusVisible } from './focus-visible-1ce30bdf.js';\n\nconst sixIconButtonCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:inline-block}.icon-button{flex:0 0 auto;display:flex;align-items:center;background:none;border:none;border-radius:var(--six-border-radius-medium);font-size:inherit;color:var(--six-input-icon-color);padding:var(--six-spacing-x-small);cursor:pointer;transition:var(--six-transition-medium) color;-webkit-appearance:none}.icon-button:hover:not(.icon-button--disabled),.icon-button:focus:not(.icon-button--disabled){color:var(--six-input-icon-color-hover)}.icon-button:active:not(.icon-button--disabled){color:var(--six-input-icon-color)}.icon-button:focus{outline:none}.icon-button--disabled{opacity:0.5;pointer-events:none}.icon-button-wrapper--disabled{cursor:not-allowed}.focus-visible.icon-button:focus{box-shadow:var(--six-button-focus-shadow)}.icon-button ::slotted(six-badge){position:absolute;top:0;right:0;pointer-events:none}.icon-button six-icon[size=xLarge]+::slotted(six-badge){transform:translateY(40%) translateX(-35%)}.icon-button six-icon[size=large]+::slotted(six-badge){transform:translateY(20%) translateX(-20%)}.icon-button six-icon[size=medium]+::slotted(six-badge){transform:translateY(10%) translateX(50%)}.icon-button six-icon[size=xSmall]+::slotted(six-badge){transform:translateY(-25%) translateX(25%)}\";\n\nlet SixIconButton = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /** The icon's size. */\r\n    this.size = 'medium';\r\n    /** Set to true to disable the button. */\r\n    this.disabled = false;\r\n    this.handleClickEvent = (event) => {\r\n      if (this.disabled) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n    };\r\n  }\r\n  componentDidLoad() {\r\n    if (this.button) {\r\n      focusVisible.observe(this.button);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.button) {\r\n      focusVisible.unobserve(this.button);\r\n    }\r\n  }\r\n  render() {\r\n    const html = this.html && h(\"span\", { innerHTML: this.html });\r\n    return (h(\"div\", { onClick: this.handleClickEvent, class: { 'icon-button-wrapper--disabled': this.disabled } }, h(\"button\", { ref: (el) => (this.button = el), part: \"base\", disabled: this.disabled, class: {\r\n        'icon-button': true,\r\n        'icon-button--disabled': this.disabled,\r\n      }, type: \"button\", \"aria-label\": this.label }, h(\"six-icon\", { \"aria-hidden\": \"true\", size: this.size }, this.name), h(\"slot\", null), html)));\r\n  }\r\n};\r\nSixIconButton.style = sixIconButtonCss;\n\nexport { SixIconButton as six_icon_button };\n","//\r\n// Simulates :focus-visible behavior on an element by watching for certain keyboard and mouse heuristics and toggling a\r\n// `focus-visible` class. Works at the component level so no global polyfill is necessary.\r\n//\r\n// This will eventually be removed pending better :focus-visible support: https://caniuse.com/#search=focus-visible\r\n//\r\nconst listeners = new WeakMap();\r\nfunction observe(el) {\r\n  if (!el)\r\n    return;\r\n  const keys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End', 'PageDown', 'PageUp'];\r\n  const is = (event) => {\r\n    if (keys.includes(event.key)) {\r\n      el.classList.add('focus-visible');\r\n    }\r\n  };\r\n  const isNot = () => el.classList.remove('focus-visible');\r\n  listeners.set(el, { is, isNot });\r\n  el.addEventListener('keydown', is);\r\n  el.addEventListener('keyup', is);\r\n  el.addEventListener('mousedown', isNot);\r\n  el.addEventListener('mousedown', isNot);\r\n}\r\nfunction unobserve(el) {\r\n  if (!el)\r\n    return;\r\n  const { is, isNot } = listeners.get(el);\r\n  el.classList.remove('focus-visible');\r\n  el.removeEventListener('keydown', is);\r\n  el.removeEventListener('keyup', is);\r\n  el.removeEventListener('mousedown', isNot);\r\n  el.removeEventListener('mousedown', isNot);\r\n}\r\nconst focusVisible = {\r\n  observe,\r\n  unobserve,\r\n};\n\nexport { focusVisible as f };\n"],"sourceRoot":""}