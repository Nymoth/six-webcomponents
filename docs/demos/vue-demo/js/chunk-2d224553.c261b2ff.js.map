{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/six-avatar.entry.js"],"names":["sixAvatarCss","SixAvatar","hostRef","this","hasError","image","alt","initials","shape","handleImageError","bind","part","class","avatar","role","tabIndex","name","src","onError","style"],"mappings":"gHAAA,kEAEA,MAAMA,EAAe,w/BAErB,IAAIC,EAAY,MACd,YAAYC,GACV,eAAiBC,KAAMD,GACvBC,KAAKC,UAAW,EAEhBD,KAAKE,MAAQ,GAEbF,KAAKG,IAAM,GAEXH,KAAKI,SAAW,GAEhBJ,KAAKK,MAAQ,SAEf,oBACEL,KAAKM,iBAAmBN,KAAKM,iBAAiBC,KAAKP,MAErD,mBACEA,KAAKC,UAAW,EAElB,SACE,OAAQ,cAAD,CAAG,MAAO,CAAEO,KAAM,OAAQC,MAAO,CACpCC,QAAQ,EACR,iBAAiC,WAAfV,KAAKK,MACvB,kBAAkC,YAAfL,KAAKK,MACxB,iBAAiC,WAAfL,KAAKK,OACtBM,KAAM,QAAS,aAAcX,KAAKG,IAAKS,SAAU,IAAMZ,KAAKI,UAAa,cAAD,CAAG,MAAO,CAAEI,KAAM,OAAQC,MAAO,gBAAkB,eAAE,OAAQ,CAAEI,KAAM,QAAU,eAAE,WAAY,KAAM,YAAcb,KAAKI,UAAa,cAAD,CAAG,MAAO,CAAEI,KAAM,WAAYC,MAAO,oBAAsBT,KAAKI,UAAYJ,KAAKE,QAAUF,KAAKC,UAAa,cAAD,CAAG,MAAO,CAAEO,KAAM,QAASC,MAAO,gBAAiBK,IAAKd,KAAKE,MAAOa,QAASf,KAAKM,sBAGjZR,EAAUkB,MAAQnB","file":"js/chunk-2d224553.c261b2ff.js","sourcesContent":["import { r as registerInstance, h } from './index-a2605a62.js';\n\nconst sixAvatarCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:inline-block;--size:2rem}.avatar{display:inline-flex;align-items:center;justify-content:center;position:relative;width:var(--size);height:var(--size);background-color:var(--six-avatar-background-color);font-family:var(--six-font-sans);font-size:calc(var(--size) * 0.5);font-weight:var(--six-font-weight-normal);color:var(--six-avatar-color);overflow:hidden;user-select:none;vertical-align:middle;cursor:pointer;outline:none}.avatar:hover{box-shadow:var(--six-elevation-4dp)}.avatar--circle{border-radius:var(--six-border-radius-circle)}.avatar--rounded{border-radius:var(--six-border-radius-medium)}.avatar--square{border-radius:0}.avatar__icon{display:flex;align-items:center;justify-content:center;position:absolute;top:0;left:0;width:100%;height:100%}.avatar__initials{line-height:1;text-transform:uppercase}.avatar__image{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover}\";\n\nlet SixAvatar = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.hasError = false;\r\n    /** The image source to use for the avatar. */\r\n    this.image = '';\r\n    /** Alternative text for the image. */\r\n    this.alt = '';\r\n    /** Initials to use as a fallback when no image is available (1-2 characters max recommended). */\r\n    this.initials = '';\r\n    /** The shape of the avatar. */\r\n    this.shape = 'circle';\r\n  }\r\n  connectedCallback() {\r\n    this.handleImageError = this.handleImageError.bind(this);\r\n  }\r\n  handleImageError() {\r\n    this.hasError = true;\r\n  }\r\n  render() {\r\n    return (h(\"div\", { part: \"base\", class: {\r\n        avatar: true,\r\n        'avatar--circle': this.shape === 'circle',\r\n        'avatar--rounded': this.shape === 'rounded',\r\n        'avatar--square': this.shape === 'square',\r\n      }, role: \"image\", \"aria-label\": this.alt, tabIndex: 0 }, !this.initials && (h(\"div\", { part: \"icon\", class: \"avatar__icon\" }, h(\"slot\", { name: \"icon\" }, h(\"six-icon\", null, \"person\")))), this.initials && (h(\"div\", { part: \"initials\", class: \"avatar__initials\" }, this.initials)), this.image && !this.hasError && (h(\"img\", { part: \"image\", class: \"avatar__image\", src: this.image, onError: this.handleImageError }))));\r\n  }\r\n};\r\nSixAvatar.style = sixAvatarCss;\n\nexport { SixAvatar as six_avatar };\n"],"sourceRoot":""}