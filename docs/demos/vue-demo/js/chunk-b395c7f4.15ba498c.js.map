{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js","webpack:///./node_modules/@six/ui-library/dist/esm/slot-5253e199.js","webpack:///./node_modules/@six/ui-library/dist/esm/type-check-83470bc1.js","webpack:///./node_modules/@six/ui-library/dist/esm/execution-control-235f5126.js","webpack:///./node_modules/@six/ui-library/dist/esm/types-a37c1695.js","webpack:///./node_modules/@six/ui-library/dist/esm/six-timepicker.entry.js"],"names":["equals","a","b","Object","keys","every","key","EventListeners","this","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","sameItem","getFilteredEventListeners","removeByIdentifier","foundListener","undefined","find","removeAll","length","pop","removeEventListener","filter","item","getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","isString","value","isNil","isDate","Date","isNumber","DEFAULT_DEBOUNCE_INSANELY_FAST","DEFAULT_DEBOUNCE_FAST","debounce","callback","timeout","timer","args","clearTimeout","setTimeout","apply","debounceEvent","event","original","_original","emit","bind","ItemPickerType","ItemPickerPaddingDirection","SixTimeFormat","SixTimePeriod","SixTimePropertyName","TIME_FORMAT_CHAR","TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP","HOUR_24","HOUR_12","MINUTE","SECOND","MILLISECOND","PERIOD","getCurrentTimeIn24Hours","now","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","has24Hours","HOURS_IN_12_HOUR_CLOCK_FORMAT","getHoursIn12HourFormat","getCurrentTimeIn12Hours","period","PM","AM","getCurrentTime","TIME_FORMAT_SEPARATOR","isValidTimeString","timeStr","format","timeStringParts","split","timeFormatParts","parseTimeString","console","error","sixTime","forEach","timeStringPart","i","formatStringPart","sixTimePropertyName","toUpperCase","Number","createTimeString","time","timeFormatPart","paddingLength","String","padStart","join","sixTimepickerCss","TAG","DEBOUNCE_TIMEPICKER_LISTENER","MIN_POPUP_HEIGHT","SixTimepicker","hostRef","sixChange","sixChangeDebounced","sixClear","HHmmss","separator","open","inline","readonly","disabled","size","errorOnBlur","errorText","label","clearable","iconPosition","hoist","interval","isPopupContentUp","isDropDownContentUp","defaultValue","handleInputChange","stopPropagation","inputValue","inputElement","internalValue","valueAsString","handleSixTimepickerChangeDebounced","detail","handleChange","property","timeString","changedProperty","handleDocumentMouseDown","path","composedPath","includes","closePopup","handleClearClick","calcIsPopupContentUp","moveOpenHoistedPopup","newValue","setupInternalTime","reportValidity","checkValidity","message","setCustomValidity","reset","document","wrapper","inputBoundingRect","getBoundingClientRect","wrapperBoundingRect","minPopupHeight","Math","max","height","moreSpaceInTop","y","window","innerHeight","bottom","popupBoundingClientRect","popup","popupHeight","inputBoundingClientRect","inputTop","top","inputHeight","style","params","class","padded","min","propertyName","items","type","NUMBER","is12HourClock","defaultTime","is24HourClock","getSixTimeUnitPicker","HOURS","CUSTOM","MINUTES","SECONDS","MILLISECONDS","elementsInOrder","getHour24Picker","getHour12Picker","getMinutePicker","getSecondsPicker","getMillisecondsPicker","visibleElements","idx","getSeparator","timepicker_clear","onClick","tabindex","icon","part","prefix","position","popupTop","calcIsDropDownContentUp","adjustPopupForHoisting","ref","openPopup","placeholder","required","renderCustomIcon","renderClearable","timepicker__popup","placement","getContent","getAmPmPicker"],"mappings":"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","file":"js/chunk-b395c7f4.15ba498c.js","sourcesContent":["const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n","//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","const isString = (value) => typeof value === 'string';\r\n// only use '==' instead of '===' to also catch undefined and void\r\nconst isNil = (value) => value == null;\r\nconst isDate = (value) => value instanceof Date;\r\nconst isNumber = (value) => value === 'number';\n\nexport { isNumber as a, isDate as b, isString as c, isNil as i };\n","const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;\r\nconst DEFAULT_DEBOUNCE_FAST = 300;\r\n/**\r\n * Debounce function to implement a timeframe to wait for no new changes before executing a callback\r\n\r\n *  example usages:\r\n *    debounce(() => saveInput());\r\n *    debounce(() => saveInput(), 750);\r\n *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));\r\n *\r\n *  regarding default timeout check https://lawsofux.com/doherty-threshold/\r\n *\r\n * @param callback\r\n * @param timeout\r\n */\r\nconst debounce = (callback, timeout = DEFAULT_DEBOUNCE_FAST) => {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback.apply(undefined, args), timeout);\r\n  };\r\n};\r\n/**\r\n * Debounce an event\r\n *\r\n * @param event\r\n * @param timeout\r\n */\r\nconst debounceEvent = (event, timeout) => {\r\n  const original = event._original || event;\r\n  const emit = debounce(original.emit.bind(original), timeout);\r\n  return {\r\n    _original: event,\r\n    emit: emit,\r\n  };\r\n};\n\nexport { DEFAULT_DEBOUNCE_FAST as D, debounce as a, DEFAULT_DEBOUNCE_INSANELY_FAST as b, debounceEvent as d };\n","var ItemPickerType;\r\n(function (ItemPickerType) {\r\n  ItemPickerType[\"NUMBER\"] = \"number\";\r\n  ItemPickerType[\"LETTER\"] = \"letter\";\r\n  ItemPickerType[\"CAPITAL_LETTER\"] = \"capital-letter\";\r\n  ItemPickerType[\"LOWER_LETTER\"] = \"lower-letter\";\r\n  ItemPickerType[\"CUSTOM\"] = \"custom\";\r\n})(ItemPickerType || (ItemPickerType = {}));\r\nvar ItemPickerPaddingDirection;\r\n(function (ItemPickerPaddingDirection) {\r\n  ItemPickerPaddingDirection[\"BEFORE\"] = \"before\";\r\n  ItemPickerPaddingDirection[\"AFTER\"] = \"after\";\r\n})(ItemPickerPaddingDirection || (ItemPickerPaddingDirection = {}));\n\nexport { ItemPickerType as I, ItemPickerPaddingDirection as a };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { I as ItemPickerType } from './types-a37c1695.js';\nimport { D as DEFAULT_DEBOUNCE_FAST, b as DEFAULT_DEBOUNCE_INSANELY_FAST, a as debounce } from './execution-control-235f5126.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\nimport { h as hasSlot } from './slot-5253e199.js';\nimport { i as isNil } from './type-check-83470bc1.js';\n\nvar SixTimeFormat;\r\n(function (SixTimeFormat) {\r\n  SixTimeFormat[\"HHmmss\"] = \"HH:mm:ss\";\r\n  SixTimeFormat[\"hhmmssaa\"] = \"hh:mm:ss:aa\";\r\n  SixTimeFormat[\"HHmmssms\"] = \"HH:mm:ss:ms\";\r\n  SixTimeFormat[\"hhmmssmsaa\"] = \"hh:mm:ss:ms:aa\";\r\n  SixTimeFormat[\"HHmm\"] = \"HH:mm\";\r\n  SixTimeFormat[\"hhmmaa\"] = \"hh:mm:aa\";\r\n  SixTimeFormat[\"HH\"] = \"HH\";\r\n  SixTimeFormat[\"hhaa\"] = \"hh:aa\";\r\n  SixTimeFormat[\"mm\"] = \"mm\";\r\n  SixTimeFormat[\"ss\"] = \"ss\";\r\n  SixTimeFormat[\"ms\"] = \"ms\";\r\n})(SixTimeFormat || (SixTimeFormat = {}));\n\n/*\r\n * Defines the different time periods for the 12-hour-clock\r\n */\r\nvar SixTimePeriod;\r\n(function (SixTimePeriod) {\r\n  SixTimePeriod[\"AM\"] = \"AM\";\r\n  SixTimePeriod[\"PM\"] = \"PM\";\r\n})(SixTimePeriod || (SixTimePeriod = {}));\r\nvar SixTimePropertyName;\r\n(function (SixTimePropertyName) {\r\n  SixTimePropertyName[\"HOURS\"] = \"hours\";\r\n  SixTimePropertyName[\"MINUTES\"] = \"minutes\";\r\n  SixTimePropertyName[\"SECONDS\"] = \"seconds\";\r\n  SixTimePropertyName[\"MILLISECONDS\"] = \"milliseconds\";\r\n  SixTimePropertyName[\"HAS_24_HOURS\"] = \"has24Hours\";\r\n  SixTimePropertyName[\"PERIOD\"] = \"period\";\r\n})(SixTimePropertyName || (SixTimePropertyName = {}));\r\n/*\r\n * Defines the different time units allowed to use in a timestring\r\n */\r\nvar TIME_FORMAT_CHAR;\r\n(function (TIME_FORMAT_CHAR) {\r\n  TIME_FORMAT_CHAR[\"HOUR_24\"] = \"HH\";\r\n  TIME_FORMAT_CHAR[\"HOUR_12\"] = \"hh\";\r\n  TIME_FORMAT_CHAR[\"MINUTE\"] = \"mm\";\r\n  TIME_FORMAT_CHAR[\"SECOND\"] = \"ss\";\r\n  TIME_FORMAT_CHAR[\"MILLISECOND\"] = \"ms\";\r\n  TIME_FORMAT_CHAR[\"PERIOD\"] = \"aa\";\r\n})(TIME_FORMAT_CHAR || (TIME_FORMAT_CHAR = {}));\r\n/*\r\n * Defines a mapping from the time format unit characters to the sixTime property name\r\n */\r\nconst TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP = {\r\n  [TIME_FORMAT_CHAR.HOUR_24]: 'hours',\r\n  [TIME_FORMAT_CHAR.HOUR_12]: 'hours',\r\n  [TIME_FORMAT_CHAR.MINUTE]: 'minutes',\r\n  [TIME_FORMAT_CHAR.SECOND]: 'seconds',\r\n  [TIME_FORMAT_CHAR.MILLISECOND]: 'milliseconds',\r\n  [TIME_FORMAT_CHAR.PERIOD]: 'period',\r\n};\n\n/*\r\n * Returns the current time in the format of your choice\r\n */\r\nconst getCurrentTimeIn24Hours = () => {\r\n  const now = new Date();\r\n  return {\r\n    hours: now.getHours(),\r\n    minutes: now.getMinutes(),\r\n    seconds: now.getSeconds(),\r\n    milliseconds: now.getMilliseconds(),\r\n    has24Hours: true,\r\n  };\r\n};\r\nconst HOURS_IN_12_HOUR_CLOCK_FORMAT = 12;\r\nconst getHoursIn12HourFormat = (hours) => hours > HOURS_IN_12_HOUR_CLOCK_FORMAT ? hours - HOURS_IN_12_HOUR_CLOCK_FORMAT : hours;\r\nconst getCurrentTimeIn12Hours = () => {\r\n  const now = new Date();\r\n  const hours = now.getHours();\r\n  return {\r\n    hours: getHoursIn12HourFormat(hours),\r\n    minutes: now.getMinutes(),\r\n    seconds: now.getSeconds(),\r\n    milliseconds: now.getMilliseconds(),\r\n    has24Hours: false,\r\n    period: hours >= HOURS_IN_12_HOUR_CLOCK_FORMAT ? SixTimePeriod.PM : SixTimePeriod.AM,\r\n  };\r\n};\r\nconst getCurrentTime = (has24Hours = true) => {\r\n  return has24Hours ? getCurrentTimeIn24Hours() : getCurrentTimeIn12Hours();\r\n};\r\nconst TIME_FORMAT_SEPARATOR = ':';\r\nconst isValidTimeString = (timeStr, format) => {\r\n  const timeStringParts = timeStr.split(TIME_FORMAT_SEPARATOR);\r\n  const timeFormatParts = format.split(TIME_FORMAT_SEPARATOR);\r\n  return timeStringParts.length === timeFormatParts.length;\r\n};\r\nconst parseTimeString = (timeStr, format) => {\r\n  const timeStringParts = timeStr.split(TIME_FORMAT_SEPARATOR);\r\n  const timeFormatParts = format.split(TIME_FORMAT_SEPARATOR);\r\n  if (!isValidTimeString(timeStr, format)) {\r\n    console.error(`Timestring did not match expected format.\\nExpected format: ${format}\\nReceived timestring: ${timeStr}`);\r\n  }\r\n  const sixTime = {};\r\n  timeStringParts.forEach((timeStringPart, i) => {\r\n    const formatStringPart = timeFormatParts[i];\r\n    const sixTimePropertyName = TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP[formatStringPart];\r\n    if (sixTimePropertyName !== undefined) {\r\n      if (formatStringPart === TIME_FORMAT_CHAR.PERIOD) {\r\n        sixTime.period = timeStringPart.toUpperCase() === SixTimePeriod.PM ? SixTimePeriod.PM : SixTimePeriod.AM;\r\n      }\r\n      else {\r\n        sixTime[sixTimePropertyName] = Number(timeStringPart);\r\n      }\r\n    }\r\n    if (formatStringPart === TIME_FORMAT_CHAR.HOUR_24) {\r\n      sixTime.has24Hours = true;\r\n    }\r\n    else if (formatStringPart === TIME_FORMAT_CHAR.HOUR_12) {\r\n      sixTime.has24Hours = false;\r\n    }\r\n  });\r\n  return sixTime;\r\n};\r\nconst createTimeString = (time, format) => {\r\n  return format\r\n    .split(TIME_FORMAT_SEPARATOR)\r\n    .map((timeFormatPart) => {\r\n    const sixTimePropertyName = TIME_FORMAT_CHAR_TO_SIX_TIME_PROPERTY_MAP[timeFormatPart];\r\n    const paddingLength = timeFormatPart === TIME_FORMAT_CHAR.MILLISECOND ? 3 : 2;\r\n    return String(time[sixTimePropertyName]).padStart(paddingLength, '0');\r\n  })\r\n    .join(TIME_FORMAT_SEPARATOR);\r\n};\n\nconst sixTimepickerCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}:host{display:block;font-family:var(--six-font-family)}.timepicker_clear{display:inline-flex;align-items:center;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;padding:0;transition:var(--six-transition-fast) color;cursor:pointer}.timepicker_clear:hover{color:var(--six-input-icon-color-hover)}.timepicker_clear:focus{outline:none}.timepicker_clear--right{right:0;position:absolute}.timepicker_clear--left{right:35px;position:absolute}.timepicker__container{position:relative}.timepicker__popup{display:flex;justify-content:center;min-width:min-content;min-height:145px;background-color:white;padding:0.5em 0.5em 1.5em;box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);user-select:none;position:absolute;z-index:var(--six-z-index-dropdown);right:0;left:0}.timepicker__popup--is-up{bottom:100%}.timepicker__popup--is-inline{position:initial;box-shadow:none;border:1px solid var(--six-color-web-rock-400)}.timepicker__separator{display:flex;align-items:center}.timepicker__item--wide{padding-left:0.5rem;padding-right:0.5rem}.input--empty .timepicker_clear{visibility:hidden}.prefix{cursor:pointer}.prefix--right{right:0;display:inline-flex;position:absolute;font-size:inherit;color:var(--six-input-icon-color);border:none;background:none;margin-right:var(--six-input-spacing-medium);transition:var(--six-transition-fast) color}\";\n\nconst TAG = `[SIX-TIMEPICKER]`;\r\nconst DEBOUNCE_TIMEPICKER_LISTENER = 'debounced-timepicker';\r\nconst MIN_POPUP_HEIGHT = 145;\r\nlet SixTimepicker = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixChange = createEvent(this, \"six-timepicker-change\", 7);\r\n    this.sixChangeDebounced = createEvent(this, \"six-timepicker-change-debounced\", 7);\r\n    this.sixClear = createEvent(this, \"six-timepicker-clear\", 7);\r\n    this.eventListeners = new EventListeners();\r\n    /**\r\n     * Define the time format. Valid formats are:\r\n     *\r\n     * HH:mm:ss\r\n     * hh:mm:ss:aa\r\n     * HH:mm:ss:ms\r\n     * hh:mm:ss:ms:aa\r\n     * HH:mm\r\n     * hh:mm:aa\r\n     * HH\r\n     * hh:aa\r\n     * mm\r\n     * ss\r\n     * ms\r\n     *\r\n     * where HH is the 24 hour format\r\n     * and hh is the 12 hour format\r\n     *\r\n     * Please notice that when using the 12-hour-clock (hh)\r\n     * you always need a period indicator (aa). So the time can be parsed as either am or pm\r\n     * */\r\n    this.format = SixTimeFormat.HHmmss;\r\n    /**\r\n     * Define the separator to be shown between the time unit pickers.\r\n     * Please be aware that this property will modify the displayed separator only.\r\n     * The separator for a timestring is always expected to be a colon (eg. '13:52:20')\r\n     * */\r\n    this.separator = TIME_FORMAT_SEPARATOR;\r\n    /** Indicates whether or not the timepicker dropdown is open on startup. You can use this in lieu of the show/hide methods. */\r\n    this.open = false;\r\n    /** Indicates whether or not the timepicker should be shown as an inline (always open) component */\r\n    this.inline = false;\r\n    /**\r\n     * If `true` the user can only select a time via the timepicker but not directly edit the input field.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true` the component is disabled.\r\n     */\r\n    this.disabled = false;\r\n    /** Timepicker size. */\r\n    this.size = 'medium';\r\n    /** Set to display the error text on blur and not when typing */\r\n    this.errorOnBlur = false;\r\n    /** The input's error text. Alternatively, you can use the error-text slot. */\r\n    this.errorText = '';\r\n    /** The input's label. Alternatively, you can use the label slot. */\r\n    this.label = '';\r\n    /** The input's name attribute. */\r\n    this.name = '';\r\n    /** Set to true to add a clear button when the input is populated. */\r\n    this.clearable = false;\r\n    /** Set the position of the icon */\r\n    this.iconPosition = 'left';\r\n    /**\r\n     * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\r\n     * `overflow: auto|scroll`.\r\n     */\r\n    this.hoist = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger faster switching between timeunits (e.g. hours).\r\n     */\r\n    this.timeout = DEFAULT_DEBOUNCE_FAST;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait between switching to next timeunit (e.g. next hour) when mouse button is held pressed.\r\n     */\r\n    this.interval = DEFAULT_DEBOUNCE_INSANELY_FAST;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `six-timepicker-change-debounced` event.\r\n     * If you want your change debounce event to not trigger when keeping the nav button pressed before, make sure debounce\r\n     * is a bit bigger than timeout, otherwise keeping the button pressed will trigger the event twice: once you click\r\n     * (and keep pressed) and once you release\r\n     */\r\n    this.debounce = DEFAULT_DEBOUNCE_FAST;\r\n    this.isPopupContentUp = false;\r\n    this.isDropDownContentUp = false;\r\n    this.defaultValue = null;\r\n    this.handleInputChange = (event) => {\r\n      event.stopPropagation();\r\n      const inputValue = this.inputElement.value;\r\n      if (!isValidTimeString(inputValue, this.format)) {\r\n        this.sixChange.emit({\r\n          value: {},\r\n          valueAsString: '',\r\n        });\r\n        return;\r\n      }\r\n      this.internalValue = parseTimeString(inputValue, this.format);\r\n      this.sixChange.emit({\r\n        value: this.internalValue,\r\n        valueAsString: createTimeString(this.internalValue, this.format),\r\n      });\r\n    };\r\n    this.handleSixTimepickerChangeDebounced = ({ detail }) => {\r\n      this.sixChangeDebounced.emit(detail);\r\n    };\r\n    this.handleChange = (event, property) => {\r\n      // stop propagation, since the timepicker should not expose the events of the underlying item-picker\r\n      event.stopPropagation();\r\n      // update the internal state\r\n      this.internalValue[property] = event.detail;\r\n      const timeString = createTimeString(this.internalValue, this.format);\r\n      // fire timepicker's own event\r\n      this.sixChange.emit({\r\n        changedProperty: property,\r\n        value: this.internalValue,\r\n        valueAsString: timeString,\r\n      });\r\n      // update the input value\r\n      this.value = timeString;\r\n    };\r\n    this.handleDocumentMouseDown = (event) => {\r\n      // Close when clicking outside of the containing element\r\n      const path = event.composedPath();\r\n      if (!path.includes(this.host)) {\r\n        this.closePopup();\r\n        return;\r\n      }\r\n    };\r\n    this.handleClearClick = (event) => {\r\n      event.stopPropagation();\r\n      this.value = undefined;\r\n      this.sixClear.emit();\r\n    };\r\n  }\r\n  async resizeHandler() {\r\n    this.calcIsPopupContentUp();\r\n    this.moveOpenHoistedPopup();\r\n  }\r\n  async scrollHandler() {\r\n    this.calcIsPopupContentUp();\r\n    this.moveOpenHoistedPopup();\r\n  }\r\n  debounceChanged() {\r\n    this.eventListeners.removeByIdentifier(DEBOUNCE_TIMEPICKER_LISTENER);\r\n    this.eventListeners.add(this.host, 'six-timepicker-change', debounce(this.handleSixTimepickerChangeDebounced, this.debounce), DEBOUNCE_TIMEPICKER_LISTENER);\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged(newValue) {\r\n    if (this.value !== newValue) {\r\n      this.value = newValue;\r\n    }\r\n    this.setupInternalTime();\r\n    this.sixChange.emit({\r\n      value: this.internalValue,\r\n      valueAsString: createTimeString(this.internalValue, this.format),\r\n    });\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.inputElement.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.inputElement.checkValidity();\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    await this.inputElement.setCustomValidity(message);\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.internalValue = this.defaultValue;\r\n    this.inputElement.value = createTimeString(this.internalValue, this.format);\r\n    await this.inputElement.reset();\r\n  }\r\n  componentWillLoad() {\r\n    this.setupInternalTime();\r\n    if (this.inline) {\r\n      this.open = true;\r\n    }\r\n    if (this.open) {\r\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.eventListeners.add(this.host, 'six-timepicker-change', debounce(this.handleSixTimepickerChangeDebounced, this.debounce), DEBOUNCE_TIMEPICKER_LISTENER);\r\n    this.eventListeners.add(this.inputElement, 'six-input-input', debounce(this.handleInputChange, this.debounce));\r\n  }\r\n  disconnectedCallback() {\r\n    this.eventListeners.removeAll();\r\n  }\r\n  calcIsPopupContentUp() {\r\n    if (!this.inputElement || !this.wrapper) {\r\n      return;\r\n    }\r\n    const inputBoundingRect = this.inputElement.getBoundingClientRect();\r\n    const wrapperBoundingRect = this.wrapper.getBoundingClientRect();\r\n    const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);\r\n    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\r\n    this.isPopupContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;\r\n  }\r\n  /*\r\n   * The position of the hoisted timepicker needs to be correctly calculated since the position changes to fixed.\r\n   * Thus if the user scrolls or adjusts the screen size we need to recalculate the timepicker position.\r\n   */\r\n  moveOpenHoistedPopup() {\r\n    if (!this.hoist || !this.open) {\r\n      return;\r\n    }\r\n    const popupBoundingClientRect = this.popup.getBoundingClientRect();\r\n    const popupHeight = popupBoundingClientRect.height;\r\n    const inputBoundingClientRect = this.inputElement.getBoundingClientRect();\r\n    const inputTop = inputBoundingClientRect.top;\r\n    const inputHeight = inputBoundingClientRect.height;\r\n    this.calcIsPopupContentUp();\r\n    if (this.isPopupContentUp) {\r\n      this.popup.style.top = `${inputTop - popupHeight}px`;\r\n    }\r\n    else {\r\n      this.popup.style.top = `${inputTop + inputHeight}px`;\r\n    }\r\n  }\r\n  getSixTimeUnitPicker(params) {\r\n    return (h(\"six-item-picker\", { class: params.class, timeout: this.timeout, interval: this.interval, padded: true, min: params.min, max: params.max, value: this.internalValue[params.propertyName], items: params.items, type: params.type || ItemPickerType.NUMBER, \"padding-length\": params.paddingLength, \"onSix-item-picker-change\": (event) => this.handleChange(event, params.propertyName) }));\r\n  }\r\n  setupInternalTime() {\r\n    if (this.is12HourClock() && !this.format.includes(TIME_FORMAT_CHAR.PERIOD)) {\r\n      console.error(`${TAG} You provided a 12-hour-clock format but are missing the period (am or pm) in the time-format-string!`);\r\n    }\r\n    if (this.value === null || this.value === undefined) {\r\n      this.internalValue = isNil(this.defaultTime)\r\n        ? getCurrentTime(this.is24HourClock())\r\n        : parseTimeString(this.defaultTime, this.format);\r\n    }\r\n    else {\r\n      this.internalValue = parseTimeString(this.value, this.format);\r\n    }\r\n    this.defaultValue = this.internalValue;\r\n  }\r\n  getHour24Picker() {\r\n    if (!this.is24HourClock()) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 23, propertyName: SixTimePropertyName.HOURS });\r\n  }\r\n  is24HourClock() {\r\n    return this.format.includes(TIME_FORMAT_CHAR.HOUR_24);\r\n  }\r\n  getHour12Picker() {\r\n    if (!this.is12HourClock()) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 11, propertyName: SixTimePropertyName.HOURS });\r\n  }\r\n  is12HourClock() {\r\n    return this.format.includes(TIME_FORMAT_CHAR.HOUR_12);\r\n  }\r\n  getAmPmPicker() {\r\n    if (!this.is12HourClock()) {\r\n      return;\r\n    }\r\n    const items = ['AM', 'PM'];\r\n    return this.getSixTimeUnitPicker({\r\n      items,\r\n      type: ItemPickerType.CUSTOM,\r\n      propertyName: SixTimePropertyName.PERIOD,\r\n    });\r\n  }\r\n  getMinutePicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.MINUTE)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: SixTimePropertyName.MINUTES });\r\n  }\r\n  getSecondsPicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.SECOND)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: SixTimePropertyName.SECONDS });\r\n  }\r\n  getMillisecondsPicker() {\r\n    if (!this.format.includes(TIME_FORMAT_CHAR.MILLISECOND)) {\r\n      return;\r\n    }\r\n    return this.getSixTimeUnitPicker({\r\n      min: 0,\r\n      max: 999,\r\n      class: 'timepicker__item--wide',\r\n      paddingLength: 3,\r\n      propertyName: SixTimePropertyName.MILLISECONDS,\r\n    });\r\n  }\r\n  getSeparator() {\r\n    return (h(\"div\", { class: \"timepicker__separator\" }, h(\"span\", null, this.separator)));\r\n  }\r\n  getContent() {\r\n    const elementsInOrder = [\r\n      this.getHour24Picker(),\r\n      this.getHour12Picker(),\r\n      this.getMinutePicker(),\r\n      this.getSecondsPicker(),\r\n      this.getMillisecondsPicker(),\r\n    ];\r\n    const visibleElements = elementsInOrder.filter((el) => el !== undefined);\r\n    return visibleElements.map((el, idx) => {\r\n      if (idx === visibleElements.length - 1) {\r\n        return [el];\r\n      }\r\n      return [el, this.getSeparator()];\r\n    });\r\n  }\r\n  openPopup() {\r\n    if (!this.open && !this.disabled) {\r\n      this.open = true;\r\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\r\n    }\r\n  }\r\n  closePopup() {\r\n    if (this.inline) {\r\n      return;\r\n    }\r\n    this.open = false;\r\n    this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);\r\n  }\r\n  renderClearable() {\r\n    return (this.clearable && (h(\"button\", { slot: \"suffix\", class: {\r\n        timepicker_clear: true,\r\n        'timepicker_clear--right': this.iconPosition === 'left',\r\n        'timepicker_clear--left': this.iconPosition === 'right',\r\n      }, type: \"button\", onClick: this.handleClearClick, tabindex: \"-1\" }, h(\"six-icon\", { size: \"small\" }, \"clear\"))));\r\n  }\r\n  renderCustomIcon() {\r\n    const icon = hasSlot(this.host, 'custom-icon') ? (h(\"slot\", { name: \"custom-icon\" })) : (h(\"six-icon\", { size: this.size === 'large' ? 'medium' : this.size }, \"watch_later\"));\r\n    return (h(\"span\", { slot: \"prefix\", part: \"icon\", class: {\r\n        prefix: true,\r\n        'prefix--right': this.iconPosition === 'right',\r\n      } }, icon));\r\n  }\r\n  calcIsDropDownContentUp() {\r\n    if (!this.inputElement || !this.wrapper) {\r\n      return;\r\n    }\r\n    const inputBoundingRect = this.inputElement.getBoundingClientRect();\r\n    const wrapperBoundingRect = this.wrapper.getBoundingClientRect();\r\n    const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);\r\n    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\r\n    this.isDropDownContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;\r\n  }\r\n  /*\r\n   * If the popup is hoisted we popup is hoisted its position will change to fix to not be clipped of by a containing container.\r\n   * To render the popup correctly we render it normally, and then assign this screenposition to the fixed popup\r\n   */\r\n  adjustPopupForHoisting() {\r\n    if (!this.hoist) {\r\n      return;\r\n    }\r\n    // execute after dropdown has been rendered to make sure the popup reference is correctly set\r\n    setTimeout(() => {\r\n      if (!this.popup) {\r\n        return;\r\n      }\r\n      // take a snapshot of normally rendered popup\r\n      const popupBoundingClientRect = this.popup.getBoundingClientRect();\r\n      // apply screen position to fixed popup\r\n      this.popup.style.position = 'fixed';\r\n      ['top', 'left', 'width', 'height'].forEach((property) => {\r\n        this.popup.style[property] = `${popupBoundingClientRect[property]}px`;\r\n      });\r\n      const inputBoundingClientRect = this.inputElement.getBoundingClientRect();\r\n      const inputTop = inputBoundingClientRect.top;\r\n      const popupTop = popupBoundingClientRect.top;\r\n      this.calcIsDropDownContentUp();\r\n      // check screen position to check whether the popup should be moved above or below the trigger element\r\n      if (this.isDropDownContentUp && inputTop < popupTop) {\r\n        //  move popup above input field if timepicker is at bottom of screen\r\n        this.popup.style.top = `${popupTop - popupBoundingClientRect.height - inputBoundingClientRect.height}px`;\r\n      }\r\n    }, 0);\r\n  }\r\n  render() {\r\n    this.adjustPopupForHoisting();\r\n    return (h(\"div\", { part: \"container\", ref: (el) => (this.wrapper = el), class: \"timepicker__container\" }, h(\"six-input\", { ref: (el) => (this.inputElement = el), part: \"input\", onClick: () => this.openPopup(), value: this.value, placeholder: this.placeholder, readonly: this.readonly, disabled: this.disabled, size: this.size, name: this.name, label: this.label, required: this.required, \"error-text\": this.errorText, \"error-on-blur\": this.errorOnBlur, class: { 'input--empty': !this.value } }, this.renderCustomIcon(), this.renderClearable(), hasSlot(this.host, 'error-text') ? (h(\"span\", { slot: \"error-text\" }, h(\"slot\", { name: \"error-text\" }))) : null, hasSlot(this.host, 'label') ? (h(\"span\", { slot: \"label\" }, h(\"slot\", { name: \"label\" }))) : null), this.open && (h(\"div\", { ref: (el) => (this.popup = el), part: \"popup\", class: {\r\n        timepicker__popup: true,\r\n        'timepicker__popup--is-up': this.placement ? this.placement === 'top' : this.isPopupContentUp,\r\n        'timepicker__popup--is-inline': this.inline,\r\n      } }, ...this.getContent(), this.getAmPmPicker()))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nSixTimepicker.style = sixTimepickerCss;\n\nexport { SixTimepicker as six_timepicker };\n"],"sourceRoot":""}