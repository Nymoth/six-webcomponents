{"version":3,"sources":["webpack:///./node_modules/@six/ui-library/dist/esm/event-listeners-1bef934e.js","webpack:///./node_modules/@six/ui-library/dist/esm/slot-5253e199.js","webpack:///./node_modules/@six/ui-library/dist/esm/form-control-17478ad2.js","webpack:///./node_modules/@six/ui-library/dist/esm/six-checkbox.entry.js"],"names":["equals","a","b","Object","keys","every","key","EventListeners","this","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","sameItem","getFilteredEventListeners","removeByIdentifier","foundListener","undefined","find","removeAll","length","pop","removeEventListener","filter","item","getTextContent","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","fromPairs","acc","k","v","assign","getAvailableSlots","slots","host","values","reduce","getSlotChildren","_a","assignedElements","FormControl","props","children","hasLabel","label","hasLabelSlot","hasHelpText","helpText","hasHelpTextSlot","useErrorTextAttribute","errorText","hasErrorTextSlot","part","class","size","displayError","disabled","id","labelId","required","htmlFor","inputId","onClick","onLabelClick","errorTextId","helpTextId","sixCheckboxCss","SixCheckbox","hostRef","sixBlur","sixChange","sixFocus","customErrorText","customValidation","hasFocus","checked","indeterminate","invalid","errorOnBlur","defaultState","input","checkValidity","emit","handleSlotChange","handleClick","bind","handleBlur","handleFocus","handleMouseDown","handleInvalid","shadowRoot","event","validationMessage","preventDefault","options","focus","blur","reportValidity","validity","valid","message","setCustomValidity","checkbox","onMouseDown","viewBox","stroke","fill","transform","d","ref","type","value","role","onBlur","onFocus","onInvalid","style"],"mappings":"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","file":"js/chunk-2e9b761f.a7604e1e.js","sourcesContent":["const equals = (a) => (b) => Object.keys(a).every((key) => a[key] === b[key]);\r\nclass EventListeners {\r\n  constructor() {\r\n    this.eventListeners = [];\r\n    this.add = (el, name, listener, identifier = null) => {\r\n      this.eventListeners.push({ el, name, listener, identifier });\r\n      el.addEventListener(name, listener);\r\n    };\r\n    this.remove = (el, name, listener) => {\r\n      const sameItem = equals({ el, name, listener });\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeByIdentifier = (identifier) => {\r\n      const sameItem = (el) => el.identifier === identifier;\r\n      const foundListener = this.eventListeners.find(sameItem) !== undefined;\r\n      if (!foundListener) {\r\n        return;\r\n      }\r\n      this.eventListeners = this.getFilteredEventListeners(sameItem);\r\n    };\r\n    this.removeAll = () => {\r\n      while (this.eventListeners.length) {\r\n        const { el, name, listener } = this.eventListeners.pop();\r\n        el.removeEventListener(name, listener);\r\n      }\r\n    };\r\n  }\r\n  getFilteredEventListeners(sameItem) {\r\n    return this.eventListeners.filter((item) => {\r\n      if (sameItem(item)) {\r\n        item.el.removeEventListener(item.name, item.listener);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\n\nexport { EventListeners as E };\n","//\r\n//\r\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\r\n// string. This is useful because we can't use slot.textContent as an alternative.\r\n//\r\nfunction getTextContent(slot) {\r\n  const nodes = slot ? slot.assignedNodes({ flatten: true }) : [];\r\n  let text = '';\r\n  [...nodes].map((node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n//\r\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\r\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\r\n//\r\nfunction hasSlot(el, name) {\r\n  // Look for a named slot\r\n  if (name) {\r\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\r\n  }\r\n  // Look for a default slot\r\n  return Array.from(el.childNodes).some((node) => {\r\n    if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\r\n      return true;\r\n    }\r\n    if (node.nodeType === node.ELEMENT_NODE) {\r\n      const el = node;\r\n      if (!el.hasAttribute('slot')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n}\r\nconst fromPairs = (acc, [k, v]) => (Object.assign(Object.assign({}, acc), { [k]: v }));\r\nconst getAvailableSlots = (slots) => (host) => Object.values(slots)\r\n  .map((name) => [name, hasSlot(host, name)])\r\n  .reduce(fromPairs, {});\r\nconst getSlotChildren = (el) => { var _a; return (_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements({ flatten: true }); };\n\nexport { getTextContent as a, getSlotChildren as b, getAvailableSlots as g, hasSlot as h };\n","import { h } from './index-a2605a62.js';\n\nconst FormControl = (props, children) => {\r\n  const hasLabel = props.label ? true : props.hasLabelSlot;\r\n  const hasHelpText = props.helpText ? true : props.hasHelpTextSlot;\r\n  /** ErrorTextAttribute has precedence if non empty value is provided or if slot is not set */\r\n  const useErrorTextAttribute = (props.errorText && props.errorText !== '') || !props.hasErrorTextSlot;\r\n  return (h(\"div\", { part: \"form-control\", class: {\r\n      'form-control': true,\r\n      'form-control--small': props.size === 'small',\r\n      'form-control--medium': props.size === 'medium',\r\n      'form-control--large': props.size === 'large',\r\n      'form-control--has-label': hasLabel,\r\n      'form-control--has-help-text': hasHelpText,\r\n      'form-control--has-error-text': props.displayError,\r\n      'form-control--disabled': props.disabled,\r\n      'form-control--invalid': props.displayError && !props.disabled,\r\n    } },\r\n    h(\"label\", { part: \"label\", id: props.labelId, class: {\r\n        'form-control__label': true,\r\n        'form-control__label__required': props.required,\r\n      }, htmlFor: props.inputId, \"aria-hidden\": hasLabel ? 'false' : 'true', onClick: props.onLabelClick },\r\n      h(\"slot\", { name: \"label\" }, props.label)),\r\n    h(\"div\", { class: \"form-control__input\" }, children),\r\n    h(\"div\", { part: \"error-text\", id: props.errorTextId, class: \"form-control__error-text\", \"aria-hidden\": props.displayError ? 'false' : 'true' }, useErrorTextAttribute ? props.errorText : h(\"slot\", { name: \"error-text\" })),\r\n    h(\"div\", { part: \"help-text\", id: props.helpTextId, class: \"form-control__help-text\", \"aria-hidden\": hasHelpText ? 'false' : 'true' },\r\n      h(\"slot\", { name: \"help-text\" }, props.helpText))));\r\n};\n\nexport { FormControl as F };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-a2605a62.js';\nimport { F as FormControl } from './form-control-17478ad2.js';\nimport { h as hasSlot } from './slot-5253e199.js';\nimport { E as EventListeners } from './event-listeners-1bef934e.js';\n\nconst sixCheckboxCss = \":host{position:relative;box-sizing:border-box}:host *,:host *:before,:host *:after{box-sizing:inherit}.form-control .form-control__label{display:none}.form-control .form-control__help-text{display:none}.form-control .form-control__error-text{display:none}.form-control--has-label .form-control__label{display:inline-block;color:var(--six-input-label-color);font-weight:var(--six-font-weight-bold);margin-bottom:var(--six-spacing-x-small)}.form-control--has-label .form-control__label__required::after{color:var(--six-color-danger-800);content:\\\"*\\\"}.form-control--has-label.form-control--small .form-control__label{font-size:var(--six-input-label-font-size-small)}.form-control--has-label.form-control--medium .form-control__label{font-size:var(--six-input-label-font-size-medium)}.form-control--has-label.form-control--large .form-control_label{font-size:var(--six-input-label-font-size-large)}.form-control--has-help-text .form-control__help-text{display:block;color:var(--six-input-help-text-color);margin-top:var(--six-spacing-x-small)}.form-control--has-help-text .form-control__help-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-help-text.form-control--small .form-control__help-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-help-text.form-control--medium .form-control__help-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-help-text.form-control--large .form-control__help-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--has-error-text .form-control__error-text{display:block;color:var(--six-color-danger-800);margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text .form-control__error-text ::slotted(*){margin-top:var(--six-spacing-xxx-small)}.form-control--has-error-text.form-control--small .form-control__error-text{font-size:var(--six-input-help-text-font-size-small)}.form-control--has-error-text.form-control--medium .form-control__error-text{font-size:var(--six-input-help-text-font-size-medium)}.form-control--has-error-text.form-control--large .form-control__error-text{font-size:var(--six-input-help-text-font-size-large)}.form-control--disabled .form-control__help-text{color:var(--six-input-help-text-color-disabled)}.form-control--disabled .form-control__label{color:var(--six-input-label-color-disabled)}.form-control--invalid:not(.form-control--disabled) .form-control__label{color:var(--six-input-label-color)}:host{display:inline-block}.checkbox{display:inline-flex;align-items:center;font-family:var(--six-font-family);font-size:var(--six-input-font-size-medium);font-weight:var(--six-input-font-weight);color:var(--six-input-color);vertical-align:middle;cursor:pointer}.checkbox__control{position:relative;display:inline-flex;align-items:center;justify-content:center;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size);border:solid var(--six-border-width) var(--six-input-border-color);border-radius:0;background-color:var(--six-input-background-color);color:var(--six-checkbox-color);transition:var(--six-transition-fast) border-color, var(--six-transition-fast) background-color, var(--six-transition-fast) color, var(--six-transition-fast) box-shadow}.checkbox__control input[type=checkbox]{position:absolute;opacity:0;padding:0;margin:0;pointer-events:none}.checkbox__control .checkbox__icon{display:inline-flex;width:var(--six-selection-control-toggle-size);height:var(--six-selection-control-toggle-size)}.checkbox__control .checkbox__icon svg{width:100%;height:100%}.checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-hover)}.checkbox--checked .checkbox__control,.checkbox--indeterminate .checkbox__control{border-color:var(--six-selection-control-color);background-color:var(--six-selection-control-color)}.checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__control:hover,.checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__control:hover{border-color:var(--six-input-border-color-focus);background-color:var(--six-input-border-color-focus)}.checkbox--disabled{cursor:not-allowed;color:var(--six-input-color-disabled)}.checkbox--disabled .checkbox__control{border-color:var(--six-input-border-color-disabled)}.checkbox--disabled.checkbox--checked .checkbox__control,.checkbox--disabled.checkbox--indeterminate .checkbox__control{background-color:var(--six-selection-control-color-disabled)}.checkbox--invalid:not(.checkbox--disabled) .checkbox__control{border-color:var(--six-input-border-color-danger)}.checkbox__label{line-height:var(--six-selection-control-toggle-size);margin-left:0.5em;user-select:none}\";\n\nlet id = 0;\r\nlet SixCheckbox = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.sixBlur = createEvent(this, \"six-checkbox-blur\", 7);\r\n    this.sixChange = createEvent(this, \"six-checkbox-change\", 7);\r\n    this.sixFocus = createEvent(this, \"six-checkbox-focus\", 7);\r\n    this.inputId = `checkbox-${++id}`;\r\n    this.labelId = `checkbox-label-${id}`;\r\n    this.errorTextId = `input-error-text-${id}`;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.eventListeners = new EventListeners();\r\n    this.hasFocus = false;\r\n    this.hasErrorTextSlot = false;\r\n    /** Set to true to disable the checkbox. */\r\n    this.disabled = false;\r\n    /** Set to true to make the checkbox a required field. */\r\n    this.required = false;\r\n    /** The checkbox's error text. Alternatively, you can use the error-text slot. */\r\n    this.errorText = '';\r\n    /** Set to true to draw the checkbox in a checked state. */\r\n    this.checked = false;\r\n    /** Set to true to draw the checkbox in an indeterminate state. */\r\n    this.indeterminate = false;\r\n    /** This will be true when the control is in an invalid state. Validity is determined by the `required` prop. */\r\n    this.invalid = false;\r\n    /** Set to display the error text on blur and not when typing */\r\n    this.errorOnBlur = false;\r\n    /** default state whether the radio button should be checked or not when resetting */\r\n    this.defaultState = false;\r\n  }\r\n  handleCheckedChange() {\r\n    if (!this.input) {\r\n      return;\r\n    }\r\n    this.input.checked = this.checked;\r\n    this.input.indeterminate = this.indeterminate;\r\n    this.invalid = !this.input.checkValidity();\r\n    this.sixChange.emit();\r\n  }\r\n  handleLabelChange() {\r\n    this.handleSlotChange();\r\n  }\r\n  connectedCallback() {\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleInvalid = this.handleInvalid.bind(this);\r\n    this.host.shadowRoot.addEventListener('slotchange', this.handleSlotChange);\r\n  }\r\n  disconnectedCallback() {\r\n    this.host.shadowRoot.removeEventListener('slotchange', this.handleSlotChange);\r\n    this.eventListeners.removeAll();\r\n  }\r\n  componentWillLoad() {\r\n    this.defaultState = this.checked;\r\n  }\r\n  componentDidLoad() {\r\n    this.input.indeterminate = this.indeterminate;\r\n    this.eventListeners.add(this.input, 'invalid', (event) => {\r\n      if (this.customValidation || (!this.hasErrorTextSlot && !this.errorText && !this.customErrorText)) {\r\n        this.customErrorText = this.input.validationMessage;\r\n      }\r\n      event.preventDefault();\r\n    });\r\n  }\r\n  /** Sets focus on the checkbox. */\r\n  async setFocus(options) {\r\n    this.input.focus(options);\r\n  }\r\n  /** Removes focus from the checkbox. */\r\n  async removeFocus() {\r\n    this.input.blur();\r\n  }\r\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\r\n  async reportValidity() {\r\n    return this.input.reportValidity();\r\n  }\r\n  /** Checks for validity. */\r\n  async checkValidity() {\r\n    return this.input.validity.valid;\r\n  }\r\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\r\n  async setCustomValidity(message) {\r\n    this.customErrorText = '';\r\n    this.customValidation = message !== '';\r\n    this.input.setCustomValidity(message);\r\n    this.invalid = !this.input.checkValidity();\r\n  }\r\n  /** Resets the formcontrol */\r\n  async reset() {\r\n    this.checked = this.defaultState;\r\n    this.customErrorText = '';\r\n    this.customValidation = false;\r\n    this.input.setCustomValidity('');\r\n    this.invalid = false;\r\n  }\r\n  handleClick() {\r\n    this.checked = this.input.checked;\r\n    this.indeterminate = false;\r\n  }\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n    this.sixBlur.emit();\r\n  }\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n    this.sixFocus.emit();\r\n  }\r\n  handleMouseDown(event) {\r\n    // Prevent clicks on the label from briefly blurring the input\r\n    event.preventDefault();\r\n    this.input.focus();\r\n  }\r\n  handleInvalid() {\r\n    this.invalid = true;\r\n  }\r\n  handleSlotChange() {\r\n    this.hasErrorTextSlot = hasSlot(this.host, 'error-text');\r\n  }\r\n  displayError() {\r\n    return this.invalid && (!this.errorOnBlur || !this.hasFocus);\r\n  }\r\n  render() {\r\n    return (h(FormControl, { inputId: this.inputId, errorTextId: this.errorTextId, errorText: this.customErrorText ? this.customErrorText : this.errorText, hasErrorTextSlot: this.hasErrorTextSlot, size: \"medium\", disabled: this.disabled, required: this.required, displayError: this.displayError() }, h(\"label\", { part: \"base\", class: {\r\n        checkbox: true,\r\n        'checkbox--checked': this.checked,\r\n        'checkbox--disabled': this.disabled,\r\n        'checkbox--focused': this.hasFocus,\r\n        'checkbox--invalid': this.invalid,\r\n        'checkbox--indeterminate': this.indeterminate,\r\n      }, htmlFor: this.inputId, onMouseDown: this.handleMouseDown }, h(\"span\", { part: \"control\", class: \"checkbox__control\" }, this.checked && (h(\"span\", { part: \"checked-icon\", class: \"checkbox__icon\" }, h(\"svg\", { viewBox: \"0 0 16 16\" }, h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\", \"stroke-linecap\": \"round\" }, h(\"g\", { stroke: \"currentColor\", \"stroke-width\": \"2\" }, h(\"g\", { transform: \"translate(3.428571, 3.428571)\" }, h(\"path\", { d: \"M0,5.71428571 L3.42857143,9.14285714\" }), h(\"path\", { d: \"M9.14285714,0 L3.42857143,9.14285714\" }))))))), !this.checked && this.indeterminate && (h(\"span\", { part: \"indeterminate-icon\", class: \"checkbox__icon\" }, h(\"svg\", { viewBox: \"0 0 16 16\" }, h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", fill: \"none\", \"fill-rule\": \"evenodd\", \"stroke-linecap\": \"round\" }, h(\"g\", { stroke: \"currentColor\", \"stroke-width\": \"2\" }, h(\"g\", { transform: \"translate(2.285714, 6.857143)\" }, h(\"path\", { d: \"M10.2857143,1.14285714 L1.14285714,1.14285714\" }))))))), h(\"input\", { ref: (el) => (this.input = el), id: this.inputId, type: \"checkbox\", name: this.name, value: this.value, checked: this.checked, disabled: this.disabled, required: this.required, role: \"checkbox\", \"aria-checked\": this.checked ? 'true' : 'false', \"aria-labelledby\": this.labelId, onClick: this.handleClick, onBlur: this.handleBlur, onFocus: this.handleFocus, onInvalid: this.handleInvalid })), h(\"span\", { part: \"label\", id: this.labelId, class: \"checkbox__label\" }, h(\"slot\", null)))));\r\n  }\r\n  get host() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"checked\": [\"handleCheckedChange\"],\r\n    \"indeterminate\": [\"handleCheckedChange\"],\r\n    \"errorText\": [\"handleLabelChange\"]\r\n  }; }\r\n};\r\nSixCheckbox.style = sixCheckboxCss;\n\nexport { SixCheckbox as six_checkbox };\n"],"sourceRoot":""}