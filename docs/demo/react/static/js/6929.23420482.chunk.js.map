{"version":3,"file":"static/js/6929.23420482.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/event-listeners.ts","../../../libraries/ui-library/dist/esm/src/utils/execution-control.ts","../../../libraries/ui-library/dist/esm/src/utils/popup.ts","../../../libraries/ui-library/dist/esm/src/utils/time.util.ts","../../../libraries/ui-library/dist/esm/src/components/six-timepicker/six-timepicker.tsx","../../../libraries/ui-library/dist/esm/src/components/six-timepicker/six-timepicker.scss?tag=six-timepicker&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/utils/slot.ts","../../../libraries/ui-library/dist/esm/src/components/six-item-picker/types.ts"],"sourcesContent":["interface EventListener {\n  el: GlobalEventHandlers;\n  name: string;\n  listener: EventListenerOrEventListenerObject;\n  identifier?: string | null;\n}\n\nexport class EventListeners {\n  eventListeners: EventListener[] = [];\n\n  add = <T extends GlobalEventHandlers>(\n    el: T,\n    name: string,\n    listener: EventListenerOrEventListenerObject,\n    identifier: string | null | undefined = null\n  ) => {\n    this.eventListeners.push({ el, name, listener, identifier });\n    el.addEventListener(name, listener);\n  };\n\n  remove = <T extends GlobalEventHandlers>(el: T, name: string, listener: EventListenerOrEventListenerObject) => {\n    this.eventListeners = this.getFilteredEventListeners(\n      (eventListener: EventListener) =>\n        eventListener.listener == listener && eventListener.el === el && eventListener.name === name\n    );\n  };\n\n  removeByIdentifier = (identifier: string) => {\n    const sameItem = (el: EventListener) => el.identifier === identifier;\n    const foundListener = this.eventListeners.find(sameItem) !== undefined;\n    if (!foundListener) {\n      return;\n    }\n    this.eventListeners = this.getFilteredEventListeners(sameItem);\n  };\n\n  private getFilteredEventListeners(sameItem: (el: EventListener) => boolean) {\n    return this.eventListeners.filter((item) => {\n      if (sameItem(item)) {\n        item.el.removeEventListener(item.name, item.listener);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  removeAll = () => {\n    while (this.eventListeners.length > 0) {\n      const eventListener: EventListener | undefined = this.eventListeners.pop();\n      if (eventListener != null) {\n        eventListener.el.removeEventListener(eventListener.name, eventListener.listener);\n      }\n    }\n  };\n\n  forward(from: string, to: 'input' | 'change' | 'blur' | 'focus', host: HTMLElement) {\n    switch (to) {\n      case 'input':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'change':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'blur':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'focus':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n    }\n  }\n}\n","import { EventEmitter } from '@stencil/core';\n\nexport const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;\nexport const DEFAULT_DEBOUNCE_FAST = 300;\n\n/**\n * Debounce function to implement a timeframe to wait for no new changes before executing a callback\n\n *  example usages:\n *    debounce(() => saveInput());\n *    debounce(() => saveInput(), 750);\n *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));\n *\n *  regarding default timeout check https://lawsofux.com/doherty-threshold/\n *\n * @param callback\n * @param timeout\n */\nexport const debounce = <T>(callback: (x: T) => void, timeout = DEFAULT_DEBOUNCE_FAST) => {\n  let timer: number;\n  return (args: T) => {\n    clearTimeout(timer);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    timer = setTimeout(() => callback(args), timeout);\n  };\n};\n\n/**\n * Debounce an event\n *\n * @param event\n * @param timeout\n */\nexport const debounceEvent = (event: EventEmitter, timeout: number): EventEmitter => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const original = (event as any)._original || event;\n  const emit = debounce(original.emit.bind(original), timeout) as (_: unknown) => CustomEvent;\n  return {\n    _original: event,\n    emit: emit,\n  } as EventEmitter;\n};\n","/**\n * If the popup is hoisted we popup is hoisted its position will change to fix to not be clipped of by a containing container.\n * To render the popup correctly we render it normally, and then assign this screenposition to the fixed popup\n */\nexport function adjustPopupForHoisting(\n  hoist: boolean,\n  popup: HTMLElement | undefined,\n  inputElement: HTMLElement | undefined,\n  wrapper: HTMLElement | undefined,\n  minPopupHeight: number,\n  dropdownDirectionChanged: (isUp: boolean) => void\n) {\n  if (!hoist || popup == null || inputElement == null || wrapper == null) {\n    return;\n  }\n  // take a snapshot of normally rendered popup\n  const popupDimensions = setPopupAsFixPosition(popup);\n  const inputDimensions = inputElement.getBoundingClientRect();\n  const inputTop = inputDimensions.top;\n  const popupTop = popupDimensions.top;\n\n  const isUp = calcIsDropDownContentUp(inputElement, wrapper, minPopupHeight);\n  // check screen position to check whether the popup should be moved above or below the trigger element\n  if (isUp && inputTop < popupTop) {\n    //  move popup above input field if datepicker is at bottom of screen\n    popup.style.top = `${popupTop - popupDimensions.height - inputDimensions.height}px`;\n  }\n  dropdownDirectionChanged(isUp);\n}\n\n/*\n * For small screens the datepicker popup could be cut-off even though there might still be space within the viewport.\n * This is because the popup is always aligned with the trigger input field. However in the scenario of small screens\n * we should reposition the popup to use the space available.\n */\nexport function adjustPopupForSmallScreens(popup?: HTMLElement) {\n  // execute after dropdown has been rendered to make sure the popup reference is correctly set\n  setTimeout(() => {\n    if (popup == null) {\n      return;\n    }\n    const popupDimensions = popup.getBoundingClientRect();\n    if (\n      popupDimensions.y < 0 &&\n      window.innerHeight - popupDimensions.height > 0 &&\n      Math.abs(popupDimensions.y) <= popupDimensions.height\n    ) {\n      // handle case where popup is cut-off on top but there is still space available\n      setPopupAsFixPosition(popup);\n      popup.style.top = '0px';\n    } else if (\n      window.innerHeight < popupDimensions.y + popupDimensions.height &&\n      window.innerHeight > popupDimensions.height &&\n      Math.abs(popupDimensions.y - window.innerHeight) <= popupDimensions.height\n    ) {\n      // handle case where popup is cut-off at the bottom but there is still space available above\n      // apply screen position to fixed popup\n      setPopupAsFixPosition(popup);\n      popup.style.top = `${window.innerHeight - popupDimensions.height}px`;\n    }\n\n    if (\n      window.innerWidth < popupDimensions.x + popupDimensions.width &&\n      window.innerWidth > popupDimensions.width &&\n      Math.abs(popupDimensions.x - window.innerWidth) <= popupDimensions.width\n    ) {\n      // handle case where popup is cut-off to the right\n      setPopupAsFixPosition(popup);\n      popup.style.left = `${window.innerWidth - popupDimensions.width}px`;\n    }\n  }, 0);\n}\n\nexport function calcIsDropDownContentUp(\n  inputElement: HTMLElement,\n  wrapper: HTMLElement,\n  minPopupHeight: number\n): boolean {\n  const inputBoundingRect = inputElement.getBoundingClientRect();\n  const wrapperBoundingRect = wrapper.getBoundingClientRect();\n  const popupHeight = Math.max(wrapperBoundingRect.height, minPopupHeight);\n  const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\n  return moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + popupHeight;\n}\n\nexport function setPopupAsFixPosition(popup: HTMLElement): DOMRect {\n  const popupDimensions = popup.getBoundingClientRect();\n  popup.style.position = 'fixed';\n  popup.style.top = popupDimensions['top'] + 'px';\n  popup.style.left = popupDimensions['left'] + 'px';\n  popup.style.width = popupDimensions['width'] + 'px';\n  popup.style.height = popupDimensions['height'] + 'px';\n  return popupDimensions;\n}\n\n/*\n * The position of the hoisted datepicker needs to be correctly calculated since the position changes to fixed.\n * Thus if the user scrolls or adjusts the screen size we need to recalculate the datepicker position.\n */\nexport function movePopup(\n  hoist: boolean,\n  open: boolean,\n  popup: HTMLElement | undefined,\n  inputElement: HTMLElement | undefined,\n  wrapper: HTMLElement | undefined,\n  minPopupHeight: number\n) {\n  if (!hoist || !open || popup == null || inputElement == null || wrapper == null) {\n    return;\n  }\n  const popupBoundingClientRect = popup.getBoundingClientRect();\n  const popupHeight = popupBoundingClientRect.height;\n  const inputBoundingClientRect = inputElement.getBoundingClientRect();\n  const inputTop = inputBoundingClientRect.top;\n  const inputHeight = inputBoundingClientRect.height;\n\n  const isUp = calcIsDropDownContentUp(inputElement, wrapper, minPopupHeight);\n\n  if (isUp) {\n    popup.style.top = `${inputTop - popupHeight}px`;\n  } else {\n    popup.style.top = `${inputTop + inputHeight}px`;\n  }\n}\n","export type TimePeriod = 'AM' | 'PM';\n\nexport interface Time {\n  hours?: number;\n  minutes?: number;\n  seconds?: number;\n  milliseconds?: number;\n  has24Hours?: boolean; // true => 24h, false => 12h\n  period?: TimePeriod; // only needed for 12-hour clock\n}\n\nexport type TimeProperties = keyof Time;\n\nexport type TimeFormatChar =\n  | 'HH' // 24h\n  | 'hh' // 12h\n  | 'mm' // minutes\n  | 'ss' // seconds\n  | 'ms' // milliseconds\n  | 'aa'; // period (AM/PM)\n\n/*\n * Supported time formats\n */\nexport type TimeFormat =\n  | 'HH:mm:ss'\n  | 'hh:mm:ss:aa'\n  | 'HH:mm:ss:ms'\n  | 'hh:mm:ss:ms:aa'\n  | 'HH:mm'\n  | 'hh:mm:aa'\n  | 'HH'\n  | 'hh:aa'\n  | 'mm'\n  | 'ss'\n  | 'ms';\n\nexport const getCurrentTimeIn24Hours = (): Time => {\n  const now = new Date();\n  return {\n    hours: now.getHours(),\n    minutes: now.getMinutes(),\n    seconds: now.getSeconds(),\n    milliseconds: now.getMilliseconds(),\n    has24Hours: true,\n  };\n};\n\nconst HOURS_IN_12_HOUR_CLOCK_FORMAT = 12;\n\nexport const getHoursIn12HourFormat = (hours: number) =>\n  hours > HOURS_IN_12_HOUR_CLOCK_FORMAT ? hours - HOURS_IN_12_HOUR_CLOCK_FORMAT : hours;\n\nexport const getCurrentTimeIn12Hours = (): Time => {\n  const now = new Date();\n  const hours = now.getHours();\n  return {\n    hours: getHoursIn12HourFormat(hours),\n    minutes: now.getMinutes(),\n    seconds: now.getSeconds(),\n    milliseconds: now.getMilliseconds(),\n    has24Hours: false,\n    period: hours >= HOURS_IN_12_HOUR_CLOCK_FORMAT ? 'PM' : 'AM',\n  };\n};\n\nexport const getCurrentTime = (has24Hours = true): Time => {\n  return has24Hours ? getCurrentTimeIn24Hours() : getCurrentTimeIn12Hours();\n};\n\nexport const isValidTimeString = (timeStr: string, format: TimeFormat) => {\n  const timeStringParts = timeStr.split(':');\n  const timeFormatParts = format.split(':');\n  return timeStringParts.length === timeFormatParts.length;\n};\n\nexport const parseTimeString = (timeStr: string, format: TimeFormat): Time => {\n  const timeParts = timeStr.split(':');\n  const formatParts = format.split(':') as TimeFormatChar[];\n\n  if (!isValidTimeString(timeStr, format)) {\n    console.error(\n      `Timestring did not match expected format.\\nExpected format: ${format}\\nReceived timestring: ${timeStr}`\n    );\n  }\n\n  const time: Time = {};\n\n  timeParts.forEach((timeStringPart, i) => {\n    const formatStringPart: TimeFormatChar = formatParts[i];\n    switch (formatStringPart) {\n      case 'HH':\n        time.hours = Number(timeStringPart);\n        time.has24Hours = true;\n        break;\n      case 'hh':\n        time.hours = Number(timeStringPart);\n        time.has24Hours = false;\n        break;\n      case 'mm':\n        time.minutes = Number(timeStringPart);\n        break;\n      case 'ss':\n        time.seconds = Number(timeStringPart);\n        break;\n      case 'ms':\n        time.milliseconds = Number(timeStringPart);\n        break;\n      case 'aa':\n        time.period = timeStringPart.toUpperCase() === 'PM' ? 'PM' : 'AM';\n    }\n  });\n  return time;\n};\n\nexport const createTimeString = (time: Time | undefined, format: TimeFormat): string => {\n  if (time == null) {\n    return '';\n  }\n\n  const formatParts = format.split(':') as TimeFormatChar[];\n\n  return formatParts\n    .map((timeFormatPart) => {\n      switch (timeFormatPart) {\n        case 'HH':\n        case 'hh':\n          return String(time.hours).padStart(2, '0');\n        case 'mm':\n          return String(time.minutes).padStart(2, '0');\n        case 'ss':\n          return String(time.seconds).padStart(2, '0');\n        case 'ms':\n          return String(time.milliseconds).padStart(3, '0');\n        case 'aa':\n          return String(time.period);\n      }\n    })\n    .join(':');\n};\n","import { Component, Element, Event, EventEmitter, h, Listen, Method, Prop, State, Watch } from '@stencil/core';\nimport { ItemPickerType } from '../six-item-picker/types';\nimport {\n  createTimeString,\n  getCurrentTime,\n  isValidTimeString,\n  parseTimeString,\n  Time,\n  TimeFormat,\n  TimeProperties,\n} from '../../utils/time.util';\nimport { debounce, DEFAULT_DEBOUNCE_FAST, DEFAULT_DEBOUNCE_INSANELY_FAST } from '../../utils/execution-control';\nimport { SixItemPickerChangePayload } from '../six-item-picker/six-item-picker';\nimport { EventListeners } from '../../utils/event-listeners';\nimport { hasSlot } from '../../utils/slot';\nimport { EmptyPayload } from '../../utils/types';\nimport { adjustPopupForHoisting, movePopup } from '../../utils/popup';\n\nexport interface SixTimepickerChange {\n  value?: Time;\n  valueAsString: string;\n  changedProperty?: string;\n}\n\ninterface SixTimeUnitPickerParams {\n  min?: number;\n  max?: number;\n  items?: string[];\n  type?: ItemPickerType;\n  class?: string;\n  paddingLength?: number;\n  propertyName: TimeProperties;\n}\n\nconst MIN_POPUP_HEIGHT = 145;\n\n/**\n * @since 2.0.0\n * @status experimental\n *\n * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.\n *\n * @part input - The input field\n * @part container - The container of whole component\n * @part popup - The popup of the timepicker component\n *\n */\n@Component({\n  tag: 'six-timepicker',\n  styleUrl: 'six-timepicker.scss',\n  shadow: true,\n})\nexport class SixTimepicker {\n  private eventListeners = new EventListeners();\n  private popup?: HTMLElement;\n  private wrapper?: HTMLElement;\n  private inputElement?: HTMLSixInputElement;\n\n  @Element() host!: HTMLSixTimepickerElement;\n\n  /**\n   * Define the time format. Valid formats are:\n   *\n   * HH:mm:ss\n   * hh:mm:ss:aa\n   * HH:mm:ss:ms\n   * hh:mm:ss:ms:aa\n   * HH:mm\n   * hh:mm:aa\n   * HH\n   * hh:aa\n   * mm\n   * ss\n   * ms\n   *\n   * where HH is the 24 hour format\n   * and hh is the 12 hour format\n   *\n   * Please notice that when using the 12-hour-clock (hh)\n   * you always need a period indicator (aa). So the time can be parsed as either am or pm\n   * */\n  @Prop() format: TimeFormat = 'HH:mm:ss';\n\n  /**\n   * Define the separator to be shown between the time unit pickers.\n   * Please be aware that this property will modify the displayed separator only.\n   * The separator for a timestring is always expected to be a colon (eg. '13:52:20')\n   * */\n  @Prop() separator = ':';\n\n  /**\n   * The value of the timepicker provided as a string. The string mast match the provided format (or default format)\n   */\n  @Prop({ mutable: true }) value = '';\n\n  /** Indicates whether the timepicker dropdown is open on startup. You can use this in lieu of the show/hide methods. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /** Indicates whether the timepicker should be shown as an inline (always open) component */\n  @Prop({ reflect: true }) inline = false;\n\n  /**\n   * If `true` the user can only select a time via the timepicker but not directly edit the input field.\n   */\n  @Prop() readonly = false;\n\n  /**\n   * If `true` the component is disabled.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The enforced placement of the dropdown panel.\n   */\n  @Prop() placement?: 'top' | 'bottom';\n\n  /** Timepicker size. */\n  @Prop() size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Set to true to show an asterisk beneath the label. */\n  @Prop() required = false;\n\n  /**\n   * The placeholder defines what text to be shown on the input element\n   */\n  @Prop() placeholder?: string;\n\n  /** The input's error text. Alternatively, you can use the error-text slot. */\n  @Prop() errorText: string | string[] = '';\n\n  /** The number of error texts to be shown (if the error-text slot isn't used). Defaults to 1 */\n  @Prop() errorTextCount?: number;\n\n  /** The input's label. Alternatively, you can use the label slot. */\n  @Prop() label = '';\n\n  /** If this property is set to true and an error message is provided by `errorText`, the error message is displayed.  */\n  @Prop({ reflect: true }) invalid = false;\n\n  /** The input's name attribute. */\n  @Prop({ reflect: true }) name = '';\n\n  /** Set to true to add a clear button when the input is populated. */\n  @Prop() clearable = false;\n\n  /** Set the position of the icon */\n  @Prop() iconPosition: 'left' | 'right' = 'left';\n\n  /**\n   * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n   * `overflow: auto|scroll`.\n   */\n  @Prop() hoist = false;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger faster switching between timeunits (e.g. hours).\n   */\n  @Prop() timeout = DEFAULT_DEBOUNCE_FAST;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait between switching to next timeunit (e.g. next hour) when mouse button is held pressed.\n   */\n  @Prop() interval = DEFAULT_DEBOUNCE_INSANELY_FAST;\n\n  /**\n   * The defaultTime defines the default setting for the timepicker when you open the popup. Default time must match the provided format.\n   */\n  @Prop() defaultTime?: string;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `six-timepicker-change-debounced` event.\n   * If you want your change debounce event to not trigger when keeping the nav button pressed before, make sure debounce\n   * is a bit bigger than timeout, otherwise keeping the button pressed will trigger the event twice: once you click\n   * (and keep pressed) and once you release\n   */\n  @Prop() debounce = DEFAULT_DEBOUNCE_FAST;\n\n  /**\n   * Emitted when the timepicker's value changes\n   */\n  @Event({ eventName: 'six-timepicker-change' }) sixChange!: EventEmitter<SixTimepickerChange>;\n\n  /**\n   * Emitted when the timepicker's value changes, but debounced\n   */\n  @Event({ eventName: 'six-timepicker-change-debounced' }) sixChangeDebounced!: EventEmitter<SixTimepickerChange>;\n\n  /**\n   * Emitted when the clear button is activated.\n   */\n  @Event({ eventName: 'six-timepicker-clear' }) sixClear!: EventEmitter<EmptyPayload>;\n\n  @State() isPopupContentUp = false;\n\n  @State() isDropDownContentUp = false;\n\n  @Listen('resize', { target: 'window' })\n  async resizeHandler() {\n    this.calcIsPopupContentUp();\n    this.moveOpenHoistedPopup();\n  }\n\n  @Listen('scroll', { target: 'window' })\n  async scrollHandler() {\n    this.calcIsPopupContentUp();\n    this.moveOpenHoistedPopup();\n  }\n\n  /**\n   * Update the native input element when the value changes\n   */\n  @Watch('value')\n  protected valueChanged() {\n    this.updateValue();\n  }\n\n  /** Sets focus on the datepickers input. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.inputElement?.setFocus(options);\n  }\n\n  /*\n   * Internally the six-timepicker uses a standardized representation of time, so we don't have a mess,\n   * when switching between formats\n   */\n  @State() private popupValue: Time = {};\n\n  connectedCallback() {\n    this.eventListeners.forward('six-timepicker-change', 'change', this.host);\n  }\n\n  componentWillLoad() {\n    this.updateValue();\n\n    if (this.inline) {\n      this.open = true;\n    }\n\n    if (this.open) {\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\n    }\n  }\n\n  componentDidLoad() {\n    if (this.inputElement == null) return;\n    const inputElement = this.inputElement;\n\n    // emit debounced change event\n    this.eventListeners.add(\n      this.host,\n      'six-timepicker-change',\n      debounce((event: Event) => this.sixChangeDebounced.emit((event as CustomEvent).detail), this.debounce)\n    );\n\n    // update value and popup value based on input-element value\n    this.eventListeners.add(\n      inputElement,\n      'six-input-input',\n      debounce((event: Event) => {\n        event.stopPropagation();\n\n        // emit empty event if time string is invalid\n        if (!isValidTimeString(inputElement.value, this.format)) {\n          this.value = inputElement.value;\n          this.sixChange.emit({\n            value: {},\n            valueAsString: '',\n          });\n          return;\n        }\n\n        // update value and popup value, and emit the new value\n        this.value = inputElement.value;\n        this.popupValue = parseTimeString(inputElement.value, this.format);\n        this.sixChange.emit({\n          value: this.popupValue,\n          valueAsString: createTimeString(this.popupValue, this.format),\n        });\n      }, this.debounce)\n    );\n  }\n\n  componentDidRender() {\n    adjustPopupForHoisting(\n      this.hoist,\n      this.popup,\n      this.inputElement,\n      this.wrapper,\n      MIN_POPUP_HEIGHT,\n      (isUp) => (this.isDropDownContentUp = isUp)\n    );\n  }\n\n  disconnectedCallback() {\n    this.eventListeners.removeAll();\n  }\n  private updateValue() {\n    // normalize value\n    if (typeof this.value !== 'string' || !isValidTimeString(this.value, this.format)) {\n      this.value = '';\n    }\n\n    // update popup value\n    if (this.value === '') {\n      if (this.defaultTime == null) {\n        this.popupValue = getCurrentTime(this.is24HourClock());\n      } else {\n        this.popupValue = parseTimeString(this.defaultTime, this.format);\n      }\n    } else {\n      this.popupValue = parseTimeString(this.value, this.format);\n    }\n  }\n\n  private calcIsPopupContentUp() {\n    if (this.inputElement == null || this.wrapper == null) {\n      return;\n    }\n\n    const inputBoundingRect = this.inputElement.getBoundingClientRect();\n    const wrapperBoundingRect = this.wrapper.getBoundingClientRect();\n    const minPopupHeight = Math.max(wrapperBoundingRect.height, MIN_POPUP_HEIGHT);\n\n    const moreSpaceInTop = inputBoundingRect.y > window.innerHeight / 2;\n    this.isPopupContentUp = moreSpaceInTop && window.innerHeight < inputBoundingRect.bottom + minPopupHeight;\n  }\n\n  private moveOpenHoistedPopup() {\n    movePopup(this.hoist, this.open, this.popup, this.inputElement, this.wrapper, MIN_POPUP_HEIGHT);\n  }\n\n  private handlePickerChange = (event: CustomEvent<SixItemPickerChangePayload>, property: TimeProperties) => {\n    // stop propagation, since the timepicker should not expose the events of the underlying item-picker\n    event.stopPropagation();\n    if (this.popupValue == null) {\n      return;\n    }\n\n    // update the internal state\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.popupValue[property] = event.detail;\n\n    const timeString = createTimeString(this.popupValue, this.format);\n\n    // update the input value\n    this.value = timeString;\n\n    // emit change event\n    this.sixChange.emit({\n      changedProperty: property,\n      value: this.popupValue,\n      valueAsString: timeString,\n    });\n  };\n\n  private getSixTimeUnitPicker(params: SixTimeUnitPickerParams) {\n    return (\n      <six-item-picker\n        class={params.class}\n        timeout={this.timeout}\n        interval={this.interval}\n        padded\n        min={params.min}\n        max={params.max}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        value={this.popupValue[params.propertyName]}\n        items={params.items}\n        type={params.type || ItemPickerType.NUMBER}\n        padding-length={params.paddingLength}\n        onSix-item-picker-change={(event) => this.handlePickerChange(event, params.propertyName)}\n      ></six-item-picker>\n    );\n  }\n\n  private getHour24Picker() {\n    if (!this.is24HourClock()) {\n      return;\n    }\n    return this.getSixTimeUnitPicker({ min: 0, max: 23, propertyName: 'hours' });\n  }\n\n  private is24HourClock() {\n    return this.format.includes('HH');\n  }\n\n  private getHour12Picker() {\n    if (!this.is12HourClock()) {\n      return;\n    }\n    return this.getSixTimeUnitPicker({ min: 0, max: 11, propertyName: 'hours' });\n  }\n\n  private is12HourClock() {\n    return this.format.includes('hh');\n  }\n\n  private getAmPmPicker() {\n    if (!this.is12HourClock()) {\n      return;\n    }\n    const items = ['AM', 'PM'];\n    return this.getSixTimeUnitPicker({\n      items,\n      type: ItemPickerType.CUSTOM,\n      propertyName: 'period',\n    });\n  }\n\n  private getMinutePicker() {\n    if (!this.format.includes('mm')) {\n      return;\n    }\n\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: 'minutes' });\n  }\n\n  private getSecondsPicker() {\n    if (!this.format.includes('ss')) {\n      return;\n    }\n\n    return this.getSixTimeUnitPicker({ min: 0, max: 59, propertyName: 'seconds' });\n  }\n\n  private getMillisecondsPicker() {\n    if (!this.format.includes('ms')) {\n      return;\n    }\n\n    return this.getSixTimeUnitPicker({\n      min: 0,\n      max: 999,\n      class: 'timepicker__item--wide',\n      paddingLength: 3,\n      propertyName: 'milliseconds',\n    });\n  }\n\n  private getSeparator() {\n    return (\n      <div class=\"timepicker__separator\">\n        <span>{this.separator}</span>\n      </div>\n    );\n  }\n\n  private getContent() {\n    const elementsInOrder = [\n      this.getHour24Picker(),\n      this.getHour12Picker(),\n      this.getMinutePicker(),\n      this.getSecondsPicker(),\n      this.getMillisecondsPicker(),\n    ];\n\n    const visibleElements = elementsInOrder.filter((el) => el !== undefined);\n\n    return visibleElements.map((el, idx) => {\n      if (idx === visibleElements.length - 1) {\n        return [el];\n      }\n\n      return [el, this.getSeparator()];\n    });\n  }\n\n  private openPopup() {\n    if (!this.open && !this.disabled) {\n      this.open = true;\n      this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\n    }\n  }\n\n  private closePopup() {\n    if (this.inline) {\n      return;\n    }\n\n    this.open = false;\n    this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);\n  }\n\n  private handleDocumentMouseDown = (event: Event) => {\n    // Close when clicking outside the containing element\n    const path = event.composedPath() as EventTarget[];\n    if (!path.includes(this.host)) {\n      this.closePopup();\n      return;\n    }\n  };\n\n  private handleClearClick = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.value = '';\n    this.sixClear.emit();\n    this.sixChange.emit({\n      value: {},\n      valueAsString: '',\n    });\n  };\n\n  private renderClearable() {\n    return (\n      this.clearable && (\n        <button\n          slot=\"suffix\"\n          class={{\n            timepicker_clear: true,\n            'timepicker_clear--right': this.iconPosition === 'left',\n            'timepicker_clear--left': this.iconPosition === 'right',\n          }}\n          type=\"button\"\n          onClick={this.handleClearClick}\n          tabindex=\"-1\"\n        >\n          <six-icon size=\"small\">clear</six-icon>\n        </button>\n      )\n    );\n  }\n\n  private renderCustomIcon() {\n    const icon = hasSlot(this.host, 'custom-icon') ? (\n      <slot name=\"custom-icon\"></slot>\n    ) : (\n      <six-icon size={this.size === 'large' ? 'medium' : this.size}>watch_later</six-icon>\n    );\n\n    return (\n      <span\n        slot=\"prefix\"\n        part=\"icon\"\n        class={{\n          prefix: true,\n          'prefix--right': this.iconPosition === 'right',\n        }}\n      >\n        {icon}\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <div part=\"container\" ref={(el) => (this.wrapper = el)} class=\"timepicker__container\">\n        <six-input\n          ref={(el) => (this.inputElement = el)}\n          part=\"input\"\n          onClick={() => this.openPopup()}\n          value={this.value}\n          placeholder={this.placeholder}\n          readonly={this.readonly}\n          disabled={this.disabled}\n          errorTextCount={this.errorTextCount}\n          errorText={this.errorText}\n          invalid={this.invalid}\n          size={this.size}\n          name={this.name}\n          label={this.label}\n          required={this.required}\n          class={{\n            'input--empty': this.value === '',\n            'input--hide': this.inline,\n          }}\n        >\n          {this.renderCustomIcon()}\n          {this.renderClearable()}\n          {hasSlot(this.host, 'label') ? (\n            <span slot=\"label\">\n              <slot name=\"label\" />\n            </span>\n          ) : null}\n          {hasSlot(this.host, 'error-text') ? (\n            <span slot=\"error-text\">\n              <slot name=\"error-text\" />\n            </span>\n          ) : null}\n        </six-input>\n        {this.open && (\n          <div\n            ref={(el) => (this.popup = el)}\n            part=\"popup\"\n            class={{\n              timepicker__popup: true,\n              'timepicker__popup--is-up': this.placement == null ? this.placement === 'top' : this.isPopupContentUp,\n              'timepicker__popup--is-inline': this.inline,\n            }}\n          >\n            {...this.getContent()}\n            {this.getAmPmPicker()}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","@import 'src/global/component';\n\n:host {\n  display: block;\n  font-family: var(--six-font-family);\n}\n\n.timepicker {\n  &_clear {\n    display: inline-flex;\n    align-items: center;\n    font-size: inherit;\n    color: var(--six-input-icon-color);\n    border: none;\n    background: none;\n    padding: 0;\n    transition: var(--six-transition-fast) color;\n    cursor: pointer;\n\n    &:hover {\n      color: var(--six-input-icon-color-hover);\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    &--right {\n      right: 0;\n      position: absolute;\n    }\n\n    &--left {\n      right: 35px;\n      position: absolute;\n    }\n  }\n\n  &__container {\n    position: relative;\n  }\n\n  &__popup {\n    display: flex;\n    justify-content: center;\n    min-width: min-content;\n    min-height: 145px;\n    background-color: white;\n    padding: 0.5em 0.5em 1.5em;\n    box-shadow: 0 2px 4px -1px rgb(0 0 0 / 20%), 0 4px 5px 0 rgb(0 0 0 / 14%), 0 1px 10px 0 rgb(0 0 0 / 12%);\n    user-select: none;\n    position: absolute;\n    z-index: var(--six-z-index-dropdown);\n    right: 0;\n    left: 0;\n\n    &--is-up {\n      bottom: 100%;\n    }\n\n    &--is-inline {\n      position: initial;\n      box-shadow: none;\n      border: 1px solid var(--six-color-web-rock-400);\n    }\n  }\n\n  &__separator {\n    display: flex;\n    align-items: center;\n  }\n\n  &__item {\n    &--wide {\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n    }\n  }\n}\n\n.input--empty .timepicker_clear {\n  visibility: hidden;\n}\n\n.input--hide {\n  display: none;\n}\n\n// Icon position\n.prefix {\n  cursor: pointer;\n\n  &--right {\n    right: 0;\n    display: inline-flex;\n    position: absolute;\n    font-size: inherit;\n    color: var(--six-input-icon-color);\n    border: none;\n    background: none;\n    margin-right: var(--six-input-spacing-medium);\n    transition: var(--six-transition-fast) color;\n  }\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport const getSlotChildren = <T extends HTMLElement>(el: HTMLElement) =>\n  el.querySelector('slot')?.assignedElements({ flatten: true }) as T[];\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n","export enum ItemPickerType {\n  NUMBER = 'number',\n  LETTER = 'letter',\n  CAPITAL_LETTER = 'capital-letter',\n  LOWER_LETTER = 'lower-letter',\n  CUSTOM = 'custom',\n}\n\nexport enum ItemPickerPaddingDirection {\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n"],"names":["EventListeners","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","getFilteredEventListeners","eventListener","removeByIdentifier","sameItem","undefined","find","removeAll","length","pop","removeEventListener","this","filter","item","from","to","host","dispatchEvent","InputEvent","bubbles","cancelable","FocusEvent","DEFAULT_DEBOUNCE_INSANELY_FAST","DEFAULT_DEBOUNCE_FAST","debounce","callback","timer","timeout","args","clearTimeout","setTimeout","debounceEvent","event","original","_original","emit","bind","adjustPopupForHoisting","hoist","popup","inputElement","wrapper","minPopupHeight","dropdownDirectionChanged","popupDimensions","setPopupAsFixPosition","inputDimensions","getBoundingClientRect","inputTop","top","popupTop","isUp","calcIsDropDownContentUp","style","height","adjustPopupForSmallScreens","y","window","innerHeight","Math","abs","innerWidth","x","width","left","inputBoundingRect","wrapperBoundingRect","popupHeight","max","bottom","position","movePopup","open","inputBoundingClientRect","inputHeight","getHoursIn12HourFormat","hours","getCurrentTime","now","Date","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","has24Hours","getCurrentTimeIn24Hours","period","getCurrentTimeIn12Hours","isValidTimeString","timeStr","format","timeStringParts","split","timeFormatParts","parseTimeString","timeParts","formatParts","console","error","time","forEach","timeStringPart","i","Number","toUpperCase","createTimeString","map","timeFormatPart","String","padStart","join","SixTimepicker","handlePickerChange","property","stopPropagation","popupValue","detail","timeString","value","sixChange","changedProperty","valueAsString","handleDocumentMouseDown","composedPath","includes","closePopup","handleClearClick","sixClear","calcIsPopupContentUp","moveOpenHoistedPopup","updateValue","options","setFocus","forward","inline","document","sixChangeDebounced","isDropDownContentUp","defaultTime","is24HourClock","moreSpaceInTop","isPopupContentUp","params","h","class","interval","padded","min","propertyName","items","type","ItemPickerType","paddingLength","getSixTimeUnitPicker","is12HourClock","separator","visibleElements","getHour24Picker","getHour12Picker","getMinutePicker","getSecondsPicker","getMillisecondsPicker","idx","getSeparator","disabled","clearable","slot","timepicker_clear","iconPosition","onClick","tabindex","size","icon","hasSlot","part","prefix","ref","openPopup","placeholder","readonly","errorTextCount","errorText","invalid","label","required","renderCustomIcon","renderClearable","timepicker__popup","placement","getContent","getAmPmPicker","getTextContent","nodes","assignedNodes","flatten","text","node","nodeType","Node","TEXT_NODE","textContent","querySelector","Array","childNodes","some","trim","ELEMENT_NODE","hasAttribute","getSlotChildren","assignedElements","getSlot","element","slotName","ItemPickerPaddingDirection"],"sourceRoot":""}