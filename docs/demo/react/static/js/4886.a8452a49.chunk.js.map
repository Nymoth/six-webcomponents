{"version":3,"file":"static/js/4886.a8452a49.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/focus-visible.ts","../../../libraries/ui-library/dist/esm/src/components/six-details/six-details.tsx","../../../libraries/ui-library/dist/esm/src/components/six-details/six-details.scss?tag=six-details&encapsulation=shadow"],"sourcesContent":["//\n// Simulates :focus-visible behavior on an element by watching for certain keyboard and mouse heuristics and toggling a\n// `focus-visible` class. Works at the component level so no global polyfill is necessary.\n//\n// This will eventually be removed pending better :focus-visible support: https://caniuse.com/#search=focus-visible\n//\nconst listeners = new WeakMap();\n\nexport function observe(el: HTMLElement) {\n  if (el == null) return;\n\n  const keys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End', 'PageDown', 'PageUp'];\n  const is = (event: KeyboardEvent) => {\n    if (keys.includes(event.key)) {\n      el.classList.add('focus-visible');\n    }\n  };\n  const isNot = () => el.classList.remove('focus-visible');\n  listeners.set(el, { is, isNot });\n\n  el.addEventListener('keydown', is);\n  el.addEventListener('keyup', is);\n  el.addEventListener('mousedown', isNot);\n  el.addEventListener('mousedown', isNot);\n}\n\nexport function unobserve(el: HTMLElement) {\n  if (el == null) return;\n\n  const listener = listeners.get(el);\n\n  if (!listener) {\n    return;\n  }\n\n  const { is, isNot } = listener;\n\n  el.classList.remove('focus-visible');\n  el.removeEventListener('keydown', is);\n  el.removeEventListener('keyup', is);\n  el.removeEventListener('mousedown', isNot);\n  el.removeEventListener('mousedown', isNot);\n}\n\nexport const focusVisible = {\n  observe,\n  unobserve,\n};\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch } from '@stencil/core';\nimport { focusVisible } from '../../utils/focus-visible';\nimport { EmptyPayload } from '../../utils/types';\n\nlet id = 0;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - The details' content.\n * @slot summary - The details' summary. Alternatively, you can use the summary prop.\n *\n * @part base - The component's base wrapper.\n * @part header - The summary header.\n * @part summary - The details summary.\n * @part summary-icon - The expand/collapse summary icon.\n * @part content - The details content.\n */\n\n@Component({\n  tag: 'six-details',\n  styleUrl: 'six-details.scss',\n  shadow: true,\n})\nexport class SixDetails {\n  @Element() readonly host!: HTMLSixDetailsElement;\n\n  @State() animateSummaryIcon = true;\n\n  private body?: HTMLElement;\n  private details?: HTMLElement;\n  private header?: HTMLElement;\n  private componentId = `details-${++id}`;\n  private isVisible = false;\n\n  /** Indicates whether the details is open. You can use this in lieu of the show/hide methods. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /** The summary to show in the details header. If you need to display HTML, use the `summary` slot instead. */\n  @Prop() summary = '';\n\n  /** The summary icon to show in the details header. If you need to display HTML, use the `summary-icon` slot instead. */\n  @Prop() summaryIcon?: string;\n\n  /** The icon's size. */\n  @Prop({ reflect: true }) summaryIconSize:\n    | 'inherit'\n    | 'xSmall'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'xLarge'\n    | 'xxLarge'\n    | 'xxxLarge' = 'inherit';\n\n  /** Set to true to prevent the user from toggling the details. */\n  @Prop() disabled = false;\n\n  /** Set to true when you want to use six-details inline e.g. in a sidebar */\n  @Prop() inline = false;\n\n  /** Set to true when you want details without content to be selectable. This is important if you e.g. have a toggled sidebar where some menus have no children  */\n  @Prop() selectableEmpty = false;\n\n  /** Set to false when you want to hide the summary icon and disable the open/close mechanism. Usually not needed, but used internally by 'six-sidebar-item-group' */\n  @Prop() hasContent = true;\n\n  @Watch('open')\n  handleOpenChange() {\n    if (this.body != null) {\n      this.open ? this.show() : this.hide();\n    }\n  }\n\n  /** Emitted when the details opens. Calling `event.preventDefault()` will prevent it from being opened. */\n  @Event({ eventName: 'six-details-show' }) sixShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the details opens and all transitions are complete. */\n  @Event({ eventName: 'six-details-after-show' }) sixAfterShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the details closes. Calling `event.preventDefault()` will prevent it from being closed. */\n  @Event({ eventName: 'six-details-hide' }) sixHide!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the details closes and all transitions are complete. */\n  @Event({ eventName: 'six-details-after-hide' }) sixAfterHide!: EventEmitter<EmptyPayload>;\n\n  componentDidLoad() {\n    if (this.details == null || this.body == null) return;\n\n    focusVisible.observe(this.details);\n    this.body.hidden = !this.open;\n\n    // Show on init if open\n    if (this.open) {\n      this.show();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.details != null) {\n      focusVisible.unobserve(this.details);\n    }\n  }\n\n  /** Shows the detail body */\n  @Method()\n  async show() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (this.isVisible || this.body == null) return;\n\n    const sixShow = this.sixShow.emit();\n    if (sixShow.defaultPrevented) {\n      this.open = false;\n      return;\n    }\n\n    this.body.hidden = false;\n\n    if (this.body.scrollHeight === 0) {\n      // When the scroll height can't be measured, use auto. This prevents a borked open state when the details is open\n      // initially, but not immediately visible (i.e. in a tab panel).\n      this.body.style.height = 'auto';\n      this.body.style.overflow = 'visible';\n    } else {\n      this.body.style.height = `${this.body.scrollHeight}px`;\n      this.body.style.overflow = 'hidden';\n    }\n    this.isVisible = true;\n    this.open = true;\n  }\n\n  /** Hides the detail body */\n  @Method()\n  async hide() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (!this.isVisible || this.body == null) return;\n    const body = this.body;\n\n    const sixHide = this.sixHide.emit();\n    if (sixHide.defaultPrevented) {\n      this.open = true;\n      return;\n    }\n\n    // We can't transition out of `height: auto`, so let's set it to the current height first\n    body.style.height = `${body.scrollHeight}px`;\n    body.style.overflow = 'hidden';\n\n    requestAnimationFrame(() => {\n      // tslint:disable-next-line: no-unused-expression\n      body.clientWidth; // force a reflow\n      body.style.height = '0';\n    });\n\n    this.isVisible = false;\n    this.open = false;\n  }\n\n  private handleBodyTransitionEnd = (event: TransitionEvent) => {\n    if (this.body == null) return;\n    const target = event.target as HTMLElement;\n\n    // Ensure we only emit one event when the target element is no longer visible\n    if (event.propertyName === 'height' && target.classList.contains('details__body')) {\n      this.body.style.overflow = this.open ? 'visible' : 'hidden';\n      this.body.style.height = this.open ? 'auto' : '0';\n      this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();\n      this.body.hidden = !this.open;\n    }\n  };\n\n  private handleSummaryClick = () => {\n    if (!this.disabled && (this.hasContent || this.selectableEmpty)) {\n      this.open ? this.hide() : this.show();\n      this.header?.focus();\n    }\n  };\n\n  private handleSummaryKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.open ? this.hide() : this.show();\n    }\n\n    if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n      event.preventDefault();\n      this.hide();\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\n      event.preventDefault();\n      this.show();\n    }\n  };\n\n  render() {\n    const summaryIcon = this.hasContent && (this.summaryIcon || 'expand_more');\n\n    return (\n      <div\n        ref={(el) => (this.details = el)}\n        part=\"base\"\n        class={{\n          details: true,\n          'details--open': this.open,\n          'details--disabled': this.disabled,\n          inline: this.inline,\n        }}\n      >\n        <header\n          ref={(el) => (this.header = el)}\n          part=\"header\"\n          id={`${this.componentId}-header`}\n          class=\"details__header\"\n          role=\"button\"\n          aria-expanded={this.open ? 'true' : 'false'}\n          aria-controls={`${this.componentId}-content`}\n          aria-disabled={this.disabled ? 'true' : 'false'}\n          tabIndex={this.disabled ? -1 : 0}\n          onClick={this.handleSummaryClick}\n          onKeyDown={this.handleSummaryKeyDown}\n        >\n          <div part=\"summary\" class=\"details__summary\">\n            <slot name=\"summary\">{this.summary}</slot>\n          </div>\n\n          <span\n            part=\"summary-icon\"\n            class={{\n              'details__summary-icon': true,\n              'details__summary-icon--animate': this.animateSummaryIcon,\n            }}\n          >\n            <slot name=\"summary-icon\" onSlotchange={() => (this.animateSummaryIcon = false)}>\n              {summaryIcon && <six-icon size={this.summaryIconSize}>{summaryIcon}</six-icon>}\n            </slot>\n          </span>\n        </header>\n\n        <div ref={(el) => (this.body = el)} class=\"details__body\" onTransitionEnd={this.handleBodyTransitionEnd}>\n          <div\n            part=\"content\"\n            id={`${this.componentId}-content`}\n            class=\"details__content\"\n            role=\"region\"\n            aria-labelledby={`${this.componentId}-header`}\n          >\n            <slot />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","@import 'src/global/component';\n\n/**\n * @prop --hide-duration: The length of the hide transition.\n * @prop --hide-timing-function: The timing function (easing) to use for the hide transition.\n * @prop --show-duration: The length of the show transition.\n * @prop --show-timing-function: The timing function (easing) to use for the show transition.\n * @prop --horizontal-padding: The horizontal padding\n */\n:host {\n  --hide-duration: var(--six-transition-medium);\n  --hide-timing-function: ease;\n  --show-duration: var(--six-transition-medium);\n  --show-timing-function: ease;\n  --horizontal-padding: var(--six-spacing-medium);\n\n  font-family: var(--six-font-family);\n  display: block;\n}\n\n.details {\n  border: solid var(--six-border-width) var(--six-input-border-color);\n  border-radius: var(--six-border-radius-medium);\n  color: var(--six-details-color);\n  overflow-anchor: none;\n  font-size: var(--six-input-font-size-medium);\n\n  &:hover:not(.details--disabled):not(.details--open) {\n    border-color: var(--six-input-border-color-hover);\n  }\n\n  &.inline {\n    border: none;\n    color: var(--six-sidebar-color);\n\n    &:hover {\n      background-color: var(--six-sidebar-hover-background-color);\n    }\n\n    &.details--open {\n      background-color: var(--six-color-web-rock-50);\n\n      &:hover {\n        border: none;\n        box-shadow: none;\n      }\n\n      & > .details__header {\n        color: var(--six-sidebar-color);\n        font-weight: var(--six-font-weight-bold);\n        background-color: var(--six-sidebar-header-background-color);\n      }\n    }\n  }\n}\n\n.details--disabled {\n  background-color: var(--six-input-background-color-disabled);\n  border-color: var(--six-input-border-color-disabled);\n  color: var(--six-input-color-disabled);\n}\n\n.details__header {\n  display: flex;\n  align-items: center;\n  border-radius: inherit;\n  padding: var(--six-spacing-medium) var(--horizontal-padding);\n  user-select: none;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n.focus-visible .details__header:focus {\n}\n\n.details--disabled .details__header {\n  cursor: not-allowed;\n  border-width: 1px;\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n}\n\n.details__summary {\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n}\n\n.details__summary-icon {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  font-size: 1.2em;\n  transition: var(--six-transition-medium) transform ease;\n}\n\n.details--open .details__summary-icon--animate {\n  transform: rotate(-180deg);\n}\n\n.details--open:hover {\n  color: var(--six-input-color-focus);\n}\n\n.details__body {\n  height: 0;\n  overflow: hidden;\n  transition-property: height;\n  transition-duration: var(--hide-duration);\n  transition-timing-function: var(--hide-timing-function);\n}\n\n.details--open .details__body {\n  transition-duration: var(--show-duration);\n  transition-timing-function: var(--show-timing-function);\n}\n\n.details__content {\n  padding: var(--six-spacing-medium);\n}\n"],"names":["listeners","WeakMap","focusVisible","observe","el","keys","is","event","includes","key","classList","add","isNot","remove","set","addEventListener","unobserve","listener","get","removeEventListener","id","SixDetails","componentId","isVisible","handleBodyTransitionEnd","body","target","propertyName","contains","style","overflow","open","height","sixAfterShow","emit","sixAfterHide","hidden","handleSummaryClick","disabled","hasContent","selectableEmpty","hide","show","header","focus","handleSummaryKeyDown","preventDefault","this","details","sixShow","defaultPrevented","scrollHeight","sixHide","requestAnimationFrame","summaryIcon","h","ref","part","class","inline","role","tabIndex","onClick","onKeyDown","name","summary","animateSummaryIcon","onSlotchange","size","summaryIconSize","onTransitionEnd"],"sourceRoot":""}