{"version":3,"file":"static/js/97.2194be81.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/event-listeners.ts","../../../libraries/ui-library/dist/esm/src/functional-components/form-control/form-control.tsx","../../../libraries/ui-library/dist/esm/src/components/six-range/six-range.tsx","../../../libraries/ui-library/dist/esm/src/components/six-range/six-range.scss?tag=six-range&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/utils/slot.ts"],"sourcesContent":["interface EventListener {\n  el: GlobalEventHandlers;\n  name: string;\n  listener: EventListenerOrEventListenerObject;\n  identifier?: string | null;\n}\n\nexport class EventListeners {\n  eventListeners: EventListener[] = [];\n\n  add = <T extends GlobalEventHandlers>(\n    el: T,\n    name: string,\n    listener: EventListenerOrEventListenerObject,\n    identifier: string | null | undefined = null\n  ) => {\n    this.eventListeners.push({ el, name, listener, identifier });\n    el.addEventListener(name, listener);\n  };\n\n  remove = <T extends GlobalEventHandlers>(el: T, name: string, listener: EventListenerOrEventListenerObject) => {\n    this.eventListeners = this.getFilteredEventListeners(\n      (eventListener: EventListener) =>\n        eventListener.listener == listener && eventListener.el === el && eventListener.name === name\n    );\n  };\n\n  removeByIdentifier = (identifier: string) => {\n    const sameItem = (el: EventListener) => el.identifier === identifier;\n    const foundListener = this.eventListeners.find(sameItem) !== undefined;\n    if (!foundListener) {\n      return;\n    }\n    this.eventListeners = this.getFilteredEventListeners(sameItem);\n  };\n\n  private getFilteredEventListeners(sameItem: (el: EventListener) => boolean) {\n    return this.eventListeners.filter((item) => {\n      if (sameItem(item)) {\n        item.el.removeEventListener(item.name, item.listener);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  removeAll = () => {\n    while (this.eventListeners.length > 0) {\n      const eventListener: EventListener | undefined = this.eventListeners.pop();\n      if (eventListener != null) {\n        eventListener.el.removeEventListener(eventListener.name, eventListener.listener);\n      }\n    }\n  };\n\n  forward(from: string, to: 'input' | 'change' | 'blur' | 'focus', host: HTMLElement) {\n    switch (to) {\n      case 'input':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'change':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'blur':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'focus':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n    }\n  }\n}\n","import { h, VNode } from '@stencil/core';\n\nexport interface FormControlProps {\n  /** The input id, used to map the input to the label */\n  inputId: string;\n\n  /** The size of the form control */\n  size: 'small' | 'medium' | 'large';\n\n  /** The label id, used to map the label to the input */\n  labelId?: string;\n\n  /** The label text (if the label slot isn't used) */\n  label?: string;\n\n  /** Whether a label slot has been provided. */\n  hasLabelSlot?: boolean;\n\n  /** The help text id, used to map the input to the help text */\n  helpTextId?: string;\n\n  /** The help text (if the help-text slot isn't used) */\n  helpText?: string;\n\n  /** Whether a help text slot has been provided. */\n  hasHelpTextSlot?: boolean;\n\n  /** Whether an error text slot has been provided. */\n  hasErrorTextSlot?: boolean;\n\n  /** The error text id, used to map the input to the help text */\n  errorTextId?: string;\n\n  /** The error text (if the error-text slot isn't used) */\n  errorText?: string | string[];\n\n  /** The number of error texts to be shown (if the error-text slot isn't used). Defaults to 1 */\n  errorTextCount?: number;\n\n  /** Set to true to disable the input. */\n  disabled?: boolean;\n\n  /** Set if the value is required. */\n  required?: boolean;\n\n  /** Set if the error text is displayed. */\n  displayError?: boolean;\n\n  /** A function that gets called when the label is clicked. */\n  onLabelClick?: (event: MouseEvent) => void;\n}\n\nconst FormControl = (props: FormControlProps, children: VNode[]) => {\n  const errorMessages = (Array.isArray(props.errorText) ? props.errorText : [props.errorText]).filter(\n    (text) => text != null && text.trim() !== ''\n  );\n\n  const hasLabel = props.label != null && props.label.trim() !== '' ? true : props.hasLabelSlot ?? false;\n  const hasHelpText = props.helpText != null && props.helpText.trim() !== '' ? true : props.hasHelpTextSlot ?? false;\n  const hasErrorText = (errorMessages.length > 0 || (props.hasErrorTextSlot ?? false)) && (props.displayError ?? false);\n\n  return (\n    <div\n      part=\"form-control\"\n      class={{\n        'form-control': true,\n        'form-control--small': props.size === 'small',\n        'form-control--medium': props.size === 'medium',\n        'form-control--large': props.size === 'large',\n        'form-control--has-label': hasLabel,\n        'form-control--has-help-text': hasHelpText,\n        'form-control--has-error-text': hasErrorText,\n        'form-control--disabled': props.disabled ?? false,\n        'form-control--invalid': (props.displayError ?? false) && !props.disabled,\n      }}\n    >\n      <label\n        part=\"label\"\n        id={props.labelId}\n        class={{\n          'form-control__label': true,\n          'form-control__label__required': props.required ?? false,\n        }}\n        htmlFor={props.inputId}\n        aria-hidden={hasLabel ? 'false' : 'true'}\n        onClick={props.onLabelClick}\n      >\n        <slot name=\"label\">{props.label}</slot>\n      </label>\n\n      <div class=\"form-control__input\">{children}</div>\n\n      <div\n        part=\"error-text\"\n        id={props.errorTextId}\n        class=\"form-control__error-text\"\n        aria-hidden={hasErrorText ? 'false' : 'true'}\n      >\n        <slot name=\"error-text\">\n          {errorMessages.slice(0, props.errorTextCount ?? 1).map((text) => (\n            <six-error>{text}</six-error>\n          ))}\n        </slot>\n      </div>\n\n      <div\n        part=\"help-text\"\n        id={props.helpTextId}\n        class=\"form-control__help-text\"\n        aria-hidden={hasHelpText ? 'false' : 'true'}\n      >\n        <slot name=\"help-text\">{props.helpText}</slot>\n      </div>\n    </div>\n  );\n};\n\nexport default FormControl;\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch } from '@stencil/core';\nimport FormControl from '../../functional-components/form-control/form-control';\nimport { hasSlot } from '../../utils/slot';\nimport { EmptyPayload } from '../../utils/types';\nimport { EventListeners } from '../../utils/event-listeners';\n\nlet id = 0;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot label - The input's label. Alternatively, you can use the label prop.\n * @slot help-text - Help text that describes how to use the input. Alternatively, you can use the help-text prop.\n * @slot error-text - Error text that is shown for validation errors. Alternatively, you can use the error-text prop.\n *\n * @part base - The component's base wrapper.\n * @part input - The native range input.\n * @part tooltip - The range tooltip.\n */\n@Component({\n  tag: 'six-range',\n  styleUrl: 'six-range.scss',\n  shadow: true,\n})\nexport class SixRange {\n  private inputId = `input-${++id}`;\n  private labelId = `input-label-${id}`;\n  private helpTextId = `input-help-text-${id}`;\n  private errorTextId = `input-error-text-${id}`;\n  private eventListeners = new EventListeners();\n  private resizeObserver?: ResizeObserver;\n\n  private output?: HTMLElement;\n  private nativeInput?: HTMLInputElement;\n\n  @Element() host!: HTMLSixRangeElement;\n\n  @State() hasFocus = false;\n  @State() hasHelpTextSlot = false;\n  @State() hasErrorTextSlot = false;\n  @State() hasLabelSlot = false;\n  @State() hasTooltip = false;\n\n  /** The input's name attribute. */\n  @Prop() name = '';\n\n  /** The input's value attribute. */\n  @Prop({ mutable: true }) value = 0;\n\n  /** Set to true to show an asterisk beneath the label. */\n  @Prop() required = false;\n\n  /** The range's help text. Alternatively, you can use the help-text slot. */\n  @Prop() helpText = '';\n\n  /** Set to true to disable the input. */\n  @Prop() disabled = false;\n\n  /** The label text. */\n  @Prop() label = '';\n\n  /** The error message shown, if `invalid` is set to true.  */\n  @Prop() errorText: string | string[] = '';\n\n  /** The number of error texts to be shown (if the error-text slot isn't used). Defaults to 1 */\n  @Prop() errorTextCount?: number;\n\n  /** If this property is set to true and an error message is provided by `errorText`, the error message is displayed.  */\n  @Prop({ reflect: true }) invalid = false;\n\n  /** The input's min attribute. */\n  @Prop() min = 0;\n\n  /** The input's max attribute. */\n  @Prop() max = 100;\n\n  /** The input's step attribute. */\n  @Prop() step = 1;\n\n  /** The preferred placedment of the tooltip. */\n  @Prop() tooltip: 'top' | 'bottom' | 'none' = 'top';\n\n  /** A function used to format the tooltip's value. */\n  @Prop() tooltipFormatter = (value: number) => value.toString();\n\n  /** Emitted when the control's value changes. */\n  @Event({ eventName: 'six-range-change' }) sixChange!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the control loses focus. */\n  @Event({ eventName: 'six-range-blur' }) sixBlur!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the control gains focus. */\n  @Event({ eventName: 'six-range-focus' }) sixFocus!: EventEmitter<EmptyPayload>;\n\n  @Watch('label')\n  @Watch('errorText')\n  @Watch('helpText')\n  handleLabelChange() {\n    this.handleSlotChange();\n  }\n\n  @Watch('value')\n  @Watch('min')\n  @Watch('max')\n  handleValueChange() {\n    this.update();\n  }\n\n  connectedCallback() {\n    this.host.shadowRoot?.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  componentWillLoad() {\n    this.update();\n    this.handleSlotChange();\n  }\n\n  componentDidLoad() {\n    const nativeInput = this.nativeInput;\n    if (nativeInput == null) {\n      return;\n    }\n    this.update();\n    this.resizeObserver = new ResizeObserver(() => this.update());\n  }\n\n  disconnectedCallback() {\n    this.host.shadowRoot?.removeEventListener('slotchange', this.handleSlotChange);\n    this.eventListeners.removeAll();\n  }\n\n  /** Sets focus on the input. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.nativeInput?.focus(options);\n  }\n\n  /** Removes focus from the input. */\n  @Method()\n  async removeFocus() {\n    this.nativeInput?.blur();\n  }\n\n  private handleInput = () => {\n    if (this.nativeInput != null) {\n      this.update(parseFloat(this.nativeInput.value));\n    }\n    requestAnimationFrame(() => {\n      this.sixChange.emit();\n    });\n  };\n\n  private handleBlur = () => {\n    this.hasFocus = false;\n    this.hasTooltip = false;\n    this.sixBlur.emit();\n    if (this.nativeInput != null) {\n      this.resizeObserver?.unobserve(this.nativeInput);\n    }\n  };\n\n  private handleFocus = () => {\n    this.hasFocus = true;\n    this.hasTooltip = true;\n    this.sixFocus.emit();\n    if (this.nativeInput != null) {\n      this.resizeObserver?.observe(this.nativeInput);\n    }\n  };\n\n  private handleSlotChange = () => {\n    this.hasHelpTextSlot = hasSlot(this.host, 'help-text');\n    this.hasLabelSlot = hasSlot(this.host, 'label');\n    this.hasErrorTextSlot = hasSlot(this.host, 'error-text');\n  };\n\n  private handleTouchStart = () => {\n    this.setFocus();\n  };\n\n  private syncTooltip(min: number, max: number, value: number) {\n    if (this.tooltip !== 'none' && this.nativeInput != null && this.output != null) {\n      const percent = Math.max(0, (value - min) / (max - min));\n      const inputWidth = this.nativeInput.offsetWidth;\n      const tooltipWidth = this.output.offsetWidth;\n      const thumbSize = getComputedStyle(this.nativeInput).getPropertyValue('--thumb-size');\n      const x = `calc(${inputWidth * percent}px - calc(calc(${percent} * ${thumbSize}) - calc(${thumbSize} / 2)))`;\n      this.output.style.transform = `translateX(${x})`;\n      this.output.style.marginLeft = `-${tooltipWidth / 2}px`;\n    }\n  }\n\n  private isFirefox() {\n    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  }\n\n  private update(updateValue?: number) {\n    if (updateValue != null) {\n      this.value = updateValue;\n    }\n\n    const min = Number(this.min) ?? 0;\n    const max = Number(this.max) ?? 0;\n    let value;\n    const parsedValue = parseFloat(this.value as never);\n    if (isNaN(parsedValue)) {\n      value = this.getDefaultValue(min, max);\n    } else {\n      value = parsedValue;\n    }\n\n    if (this.nativeInput != null) {\n      // The value may have constraints, so we set the native control's\n      // value and sync it back to ensure it adheres to min, max, and step\n      // properly.\n      this.nativeInput.value = value.toString();\n      this.value = parseFloat(this.nativeInput.value);\n    } else {\n      this.value = value;\n    }\n    this.calculateColorRunnableTrack(min, max, this.value);\n    this.syncTooltip(min, max, this.value);\n  }\n\n  /**\n   * from https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range#value\n   */\n  private getDefaultValue(min: number, max: number): number {\n    return max < min ? min : min + (max - min) / 2;\n  }\n\n  /**\n   * For Firefox this functionality is not needed because it is supported by standard CSS.\n   */\n  private calculateColorRunnableTrack(min: number, max: number, value: number) {\n    if (!this.isFirefox() && this.nativeInput != null) {\n      const percent = Math.ceil(((value - min) / (max - min)) * 100);\n      this.nativeInput.style.background =\n        '-webkit-linear-gradient(left, var(--track-color) 0%, var(--track-color) ' +\n        percent +\n        '%, var(--six-color-web-rock-300) ' +\n        percent +\n        '%)';\n    }\n  }\n\n  render() {\n    return (\n      <FormControl\n        inputId={this.inputId}\n        label={this.label}\n        labelId={this.labelId}\n        hasLabelSlot={this.hasLabelSlot}\n        helpTextId={this.helpTextId}\n        helpText={this.helpText}\n        hasHelpTextSlot={this.hasHelpTextSlot}\n        size=\"medium\"\n        errorTextId={this.errorTextId}\n        errorText={this.errorText}\n        hasErrorTextSlot={this.hasErrorTextSlot}\n        errorTextCount={this.errorTextCount}\n        disabled={this.disabled}\n        required={this.required}\n        displayError={this.invalid}\n      >\n        <div\n          part=\"base\"\n          class={{\n            range: true,\n\n            // States\n            'range--disabled': this.disabled,\n            'range--focused': this.hasFocus,\n            'range--tooltip-visible': this.hasTooltip,\n            'range--tooltip-top': this.tooltip === 'top',\n            'range--tooltip-bottom': this.tooltip === 'bottom',\n          }}\n          onTouchStart={this.handleTouchStart}\n        >\n          <input\n            part=\"input\"\n            ref={(el) => (this.nativeInput = el)}\n            type=\"range\"\n            class=\"range__control\"\n            name={this.name}\n            disabled={this.disabled}\n            min={this.min}\n            max={this.max}\n            step={this.step}\n            value={this.value}\n            onInput={this.handleInput}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n          />\n          {this.tooltip !== 'none' && (\n            <output part=\"tooltip\" ref={(el) => (this.output = el)} class=\"range__tooltip\">\n              {this.tooltipFormatter(this.value)}\n            </output>\n          )}\n        </div>\n      </FormControl>\n    );\n  }\n}\n","@import 'src/global/component';\n@import '../../functional-components/form-control/form-control';\n\n:host {\n  --thumb-size: 14px;\n  --tooltip-offset-y: 10px;\n  --track-color: var(--six-color-web-rock-900);\n  --thumb-color: var(--six-color-web-rock-900);\n  --track-height: 3px;\n\n  display: block;\n}\n\n.range {\n  position: relative;\n\n  .range__control {\n    -webkit-appearance: none;\n    width: 100%;\n    height: var(--six-input-height-medium);\n    background: transparent;\n    line-height: var(--six-input-height-medium);\n    vertical-align: middle;\n\n    &::-webkit-slider-runnable-track {\n      width: 100%;\n      height: var(--track-height);\n      border-radius: 3px;\n      border: none;\n    }\n\n    &::-webkit-slider-thumb {\n      border: none;\n      width: var(--thumb-size);\n      height: var(--thumb-size);\n      border-radius: 50%;\n      background-color: var(--thumb-color);\n      -webkit-appearance: none;\n      margin-top: calc(var(--thumb-size) / -2 + var(--track-height) / 2);\n      transition: var(--six-transition-fast) border-color, var(--six-transition-fast) background-color,\n        var(--six-transition-fast) color, var(--six-transition-fast) box-shadow, var(--six-transition-fast) transform;\n      cursor: pointer;\n    }\n\n    &:not(:disabled)::-webkit-slider-thumb:hover {\n      background-color: var(--thumb-color);\n    }\n\n    &:not(:disabled):focus::-webkit-slider-thumb {\n      background-color: var(--thumb-color);\n    }\n\n    &:not(:disabled)::-webkit-slider-thumb:active {\n      background-color: var(--thumb-color);\n      cursor: grabbing;\n    }\n\n    //  Firefox\n    &::-moz-focus-outer {\n      border: 0;\n    }\n\n    &::-moz-range-track {\n      width: 100%;\n      height: var(--track-height);\n      background-color: var(--six-progress-track-color);\n      border-radius: 3px;\n      border: none;\n    }\n\n    &::-moz-range-progress {\n      height: var(--track-height);\n      border-radius: 3px;\n      background-color: var(--track-color);\n      border: none;\n    }\n\n    &::-moz-range-thumb {\n      border: none;\n      height: var(--thumb-size);\n      width: var(--thumb-size);\n      border-radius: 50%;\n      background-color: var(--thumb-color);\n      transition: var(--six-transition-fast) border-color, var(--six-transition-fast) background-color,\n        var(--six-transition-fast) color, var(--six-transition-fast) box-shadow, var(--six-transition-fast) transform;\n      cursor: pointer;\n    }\n\n    &:not(:disabled)::-moz-range-thumb:hover {\n      background-color: var(--thumb-color);\n    }\n\n    &:not(:disabled):focus::-moz-range-thumb {\n      background-color: var(--thumb-color);\n    }\n\n    &:not(:disabled)::-moz-range-thumb:active {\n      background-color: var(--thumb-color);\n      cursor: grabbing;\n    }\n\n    //  States\n    &:focus {\n      outline: none;\n    }\n\n    &:disabled {\n      &::-webkit-slider-thumb {\n        cursor: not-allowed;\n        color: var(--six-color-web-rock-300);\n        border-color: var(--six-color-web-rock-300);\n        background-color: var(--six-color-web-rock-300);\n      }\n\n      &::-moz-range-thumb {\n        cursor: not-allowed;\n        color: var(--six-color-web-rock-300);\n        border-color: var(--six-color-web-rock-300);\n        background-color: var(--six-color-web-rock-300);\n      }\n    }\n  }\n}\n\n// Tooltip\n.range__tooltip {\n  position: absolute;\n  z-index: var(--six-z-index-tooltip);\n  left: 1px;\n  border-radius: var(--six-border-radius-medium);\n  background-color: var(--six-color-web-rock-900);\n  font-family: var(--six-font-family);\n  font-size: var(--six-tooltip-font-size);\n  font-weight: var(--six-tooltip-font-weight);\n  line-height: var(--six-tooltip-line-height);\n  color: var(--six-color-white);\n  opacity: 0;\n  padding: var(--six-spacing-xxx-small) var(--six-spacing-xx-small);\n  transition: var(--six-transition-fast) opacity;\n  pointer-events: none;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    left: 50%;\n    margin-left: calc(-1 * var(--six-tooltip-arrow-size));\n  }\n}\n\n.range--tooltip-visible .range__tooltip {\n  opacity: 1;\n}\n\n// Tooltip on top\n.range--tooltip-top .range__tooltip {\n  top: calc(-1 * var(--thumb-size) - var(--tooltip-offset-y));\n\n  &::after {\n    border-top: var(--six-tooltip-arrow-size) solid var(--six-color-web-rock-900);\n    border-left: var(--six-tooltip-arrow-size) solid transparent;\n    border-right: var(--six-tooltip-arrow-size) solid transparent;\n    top: 100%;\n  }\n}\n\n// Tooltip on bottom\n.range--tooltip-bottom .range__tooltip {\n  bottom: calc(-1 * var(--thumb-size) - var(--tooltip-offset-y));\n\n  &::after {\n    border-bottom: var(--six-tooltip-arrow-size) solid var(--six-color-web-rock-900);\n    border-left: var(--six-tooltip-arrow-size) solid transparent;\n    border-right: var(--six-tooltip-arrow-size) solid transparent;\n    bottom: 100%;\n  }\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport const getSlotChildren = <T extends HTMLElement>(el: HTMLElement) =>\n  el.querySelector('slot')?.assignedElements({ flatten: true }) as T[];\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n"],"names":["EventListeners","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","getFilteredEventListeners","eventListener","removeByIdentifier","sameItem","undefined","find","removeAll","length","pop","removeEventListener","this","filter","item","from","to","host","dispatchEvent","InputEvent","bubbles","cancelable","FocusEvent","FormControl","props","children","errorMessages","Array","isArray","errorText","text","trim","hasLabel","label","hasLabelSlot","hasHelpText","helpText","hasHelpTextSlot","hasErrorText","hasErrorTextSlot","displayError","h","part","class","size","disabled","id","labelId","required","htmlFor","inputId","onClick","onLabelClick","errorTextId","slice","errorTextCount","map","helpTextId","SixRange","handleInput","nativeInput","update","parseFloat","value","requestAnimationFrame","sixChange","emit","handleBlur","hasFocus","hasTooltip","sixBlur","resizeObserver","unobserve","handleFocus","sixFocus","observe","handleSlotChange","hasSlot","handleTouchStart","setFocus","toString","shadowRoot","ResizeObserver","options","focus","blur","min","max","tooltip","output","percent","Math","inputWidth","offsetWidth","tooltipWidth","thumbSize","getComputedStyle","getPropertyValue","x","style","transform","marginLeft","navigator","userAgent","toLowerCase","indexOf","updateValue","Number","parsedValue","isNaN","getDefaultValue","calculateColorRunnableTrack","syncTooltip","isFirefox","ceil","background","invalid","range","onTouchStart","ref","type","step","onInput","onFocus","onBlur","tooltipFormatter","getTextContent","slot","nodes","assignedNodes","flatten","node","nodeType","Node","TEXT_NODE","textContent","querySelector","childNodes","some","ELEMENT_NODE","hasAttribute","getSlotChildren","assignedElements","getSlot","element","slotName"],"sourceRoot":""}