{"version":3,"file":"static/js/4025.6980f3c5.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/execution-control.ts","../../../libraries/ui-library/dist/esm/src/components/six-tag/six-tag.tsx","../../../libraries/ui-library/dist/esm/src/components/six-tag/six-tag.scss?tag=six-tag&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/utils/slot.ts"],"sourcesContent":["import { EventEmitter } from '@stencil/core';\n\nexport const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;\nexport const DEFAULT_DEBOUNCE_FAST = 300;\n\n/**\n * Debounce function to implement a timeframe to wait for no new changes before executing a callback\n\n *  example usages:\n *    debounce(() => saveInput());\n *    debounce(() => saveInput(), 750);\n *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));\n *\n *  regarding default timeout check https://lawsofux.com/doherty-threshold/\n *\n * @param callback\n * @param timeout\n */\nexport const debounce = <T>(callback: (x: T) => void, timeout = DEFAULT_DEBOUNCE_FAST) => {\n  let timer: number;\n  return (args: T) => {\n    clearTimeout(timer);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    timer = setTimeout(() => callback(args), timeout);\n  };\n};\n\n/**\n * Debounce an event\n *\n * @param event\n * @param timeout\n */\nexport const debounceEvent = (event: EventEmitter, timeout: number): EventEmitter => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const original = (event as any)._original || event;\n  const emit = debounce(original.emit.bind(original), timeout) as (_: unknown) => CustomEvent;\n  return {\n    _original: event,\n    emit: emit,\n  } as EventEmitter;\n};\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { EmptyPayload } from '../../utils/types';\nimport { getTextContent } from '../../utils/slot';\nimport { debounce } from '../../utils/execution-control';\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - The tag's content.\n *\n * @part base - The component's base wrapper.\n * @part content - The tag content.\n * @part clear-button - The clear button.\n */\n\n@Component({\n  tag: 'six-tag',\n  styleUrl: 'six-tag.scss',\n  shadow: true,\n})\nexport class SixTag {\n  /** The tag's type. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'action' | 'text' = 'primary';\n\n  /** The tag's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Set to true to draw a pill-style tag with rounded edges. */\n  @Prop({ reflect: true }) pill = false;\n\n  /** Set to true to make the tag clearable. */\n  @Prop({ reflect: true }) clearable = false;\n\n  /** Emitted when the clear button is activated. */\n  @Event({ eventName: 'six-tag-clear' }) sixClear!: EventEmitter<EmptyPayload>;\n\n  private contentSlotElement: HTMLSlotElement | undefined;\n  private tooltipElement: HTMLSixTooltipElement | undefined;\n  private contentElement: HTMLElement | undefined;\n  private resizeObserver = new ResizeObserver(debounce(() => this.updateTooltip()));\n\n  connectedCallback() {\n    if (this.contentElement != null) {\n      this.resizeObserver.observe(this.contentElement);\n    }\n  }\n\n  componentDidLoad() {\n    if (this.contentElement != null) {\n      this.resizeObserver.observe(this.contentElement);\n    }\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n\n  private updateTooltip = () => {\n    if (this.tooltipElement != null && this.contentSlotElement != null && this.contentElement != null) {\n      this.tooltipElement.content = getTextContent(this.contentSlotElement);\n      this.tooltipElement.disabled = !(this.contentElement.offsetWidth < this.contentElement.scrollWidth);\n    }\n  };\n\n  private handleClearClick = () => {\n    this.sixClear.emit();\n  };\n\n  render() {\n    return (\n      <span\n        part=\"base\"\n        class={{\n          tag: true,\n\n          // Types\n          'tag--primary': this.type === 'primary',\n          'tag--success': this.type === 'success',\n          'tag--info': this.type === 'info',\n          'tag--warning': this.type === 'warning',\n          'tag--danger': this.type === 'danger',\n          'tag--action': this.type === 'action',\n          'tag--text': this.type === 'text',\n\n          // Sizes\n          'tag--small': this.size === 'small',\n          'tag--medium': this.size === 'medium',\n          'tag--large': this.size === 'large',\n\n          // Modifers\n          'tag--pill': this.pill,\n          'tag--clear': this.clearable,\n        }}\n      >\n        <six-tooltip ref={(el) => (this.tooltipElement = el)}>\n          <span ref={(el) => (this.contentElement = el)} part=\"content\" class=\"tag__content\">\n            <slot ref={(el) => (this.contentSlotElement = el as HTMLSlotElement)} />\n          </span>\n        </six-tooltip>\n\n        {this.clearable && (\n          <six-icon-button\n            exportparts=\"base:clear-button\"\n            size=\"xSmall\"\n            name=\"clear\"\n            class=\"tag__clear\"\n            onClick={this.handleClearClick}\n          />\n        )}\n      </span>\n    );\n  }\n}\n","@import 'src/global/component';\n\n:host {\n  display: inline-block;\n  overflow: hidden;\n}\n\n.tag {\n  display: flex;\n  align-items: center;\n  border: solid 1px;\n  font-family: var(--six-font-family);\n  line-height: 1;\n  white-space: nowrap;\n  user-select: none;\n  cursor: default;\n}\n\n.tag__content {\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.tag__clear::part(base) {\n  color: inherit;\n  padding: 0;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Type modifiers\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.tag--info {\n  color: var(--six-color-white);\n  background-color: var(--six-color-web-rock-900);\n  border-color: var(--six-color-web-rock-900);\n}\n\n.tag--success {\n  color: var(--six-color-web-rock-900);\n  border-color: var(--six-color-success-500);\n  background-color: var(--six-color-success-500);\n}\n\n.tag--primary {\n  color: var(--six-color-web-rock-900);\n  border-color: var(--six-color-clay-50);\n  background-color: var(--six-color-clay-50);\n}\n\n.tag--warning {\n  color: var(--six-color-web-rock-900);\n  border-color: var(--six-color-warning-700);\n  background-color: var(--six-color-warning-700);\n}\n\n.tag--danger {\n  color: var(--six-color-white);\n  border-color: var(--six-color-danger-800);\n  background-color: var(--six-color-danger-800);\n}\n\n.tag--action {\n  color: var(--six-color-white);\n  border-color: var(--six-color-action-500);\n  background-color: var(--six-color-action-500);\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Size modifiers\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.tag--small {\n  font-size: var(--six-button-font-size-small);\n  height: calc(var(--six-height-small) * 0.8);\n  line-height: calc(var(--six-height-small) - var(--six-border-width) * 2);\n  border-radius: var(--six-input-border-radius-small);\n  padding: 0 var(--six-spacing-x-small);\n\n  .tag__clear {\n    margin-left: var(--six-spacing-xx-small);\n    margin-right: calc(-1 * var(--six-spacing-xxx-small));\n  }\n}\n\n.tag--medium {\n  font-size: var(--six-button-font-size-medium);\n  height: calc(var(--six-height-medium) * 0.8);\n  line-height: calc(var(--six-height-medium) - var(--six-border-width) * 2);\n  border-radius: var(--six-input-border-radius-medium);\n  padding: 0 var(--six-spacing-small);\n\n  .tag__clear {\n    margin-left: var(--six-spacing-xx-small);\n    margin-right: calc(-1 * var(--six-spacing-xx-small));\n  }\n}\n\n.tag--large {\n  font-size: var(--six-button-font-size-large);\n  height: calc(var(--six-height-large) * 0.8);\n  line-height: calc(var(--six-height-large) - var(--six-border-width) * 2);\n  border-radius: var(--six-input-border-radius-large);\n  padding: 0 var(--six-spacing-medium);\n\n  .tag__clear {\n    margin-left: var(--six-spacing-xx-small);\n    margin-right: calc(-1 * var(--six-spacing-x-small));\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Pill modifier\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.tag--pill {\n  border-radius: var(--six-border-radius-pill);\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport const getSlotChildren = <T extends HTMLElement>(el: HTMLElement) =>\n  el.querySelector('slot')?.assignedElements({ flatten: true }) as T[];\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n"],"names":["DEFAULT_DEBOUNCE_INSANELY_FAST","DEFAULT_DEBOUNCE_FAST","debounce","callback","timer","timeout","args","clearTimeout","setTimeout","debounceEvent","event","original","_original","emit","bind","SixTag","resizeObserver","ResizeObserver","updateTooltip","tooltipElement","contentSlotElement","contentElement","content","getTextContent","disabled","offsetWidth","scrollWidth","handleClearClick","sixClear","this","observe","disconnect","h","part","class","tag","type","size","pill","clearable","ref","el","exportparts","name","onClick","slot","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","querySelector","Array","from","childNodes","some","trim","ELEMENT_NODE","hasAttribute","getSlotChildren","assignedElements","getSlot","element","slotName"],"sourceRoot":""}