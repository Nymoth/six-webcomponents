{"version":3,"file":"static/js/4460.a10d2662.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/scroll.ts","../../../libraries/ui-library/dist/esm/src/utils/offset.ts","../../../libraries/ui-library/dist/esm/src/components/six-tab-group/six-tab-group.scss?tag=six-tab-group&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/components/six-tab-group/six-tab-group.tsx","../../../libraries/ui-library/dist/esm/src/utils/animation.ts"],"sourcesContent":["import { getOffset } from './offset';\n\nconst locks = new Set();\n\n//\n// Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible\n// without premature unlocking.\n//\nexport function lockBodyScrolling(lockingEl: HTMLElement) {\n  locks.add(lockingEl);\n  document.body.classList.add('six-scroll-lock');\n}\n\n//\n// Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method.\n//\nexport function unlockBodyScrolling(lockingEl: HTMLElement) {\n  locks.delete(lockingEl);\n\n  if (locks.size === 0) {\n    document.body.classList.remove('six-scroll-lock');\n  }\n}\n\n//\n// Scrolls an element into view of its container. If the element is already in view, nothing will happen.\n//\nexport function scrollIntoView(\n  element: HTMLElement,\n  container: HTMLElement,\n  direction: 'horizontal' | 'vertical' | 'both' = 'vertical',\n  behavior: 'smooth' | 'auto' = 'smooth'\n) {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n\n  if (direction === 'horizontal' || direction === 'both') {\n    if (offsetLeft < minX) {\n      container.scrollTo({ left: offsetLeft, behavior });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });\n    }\n  }\n\n  if (direction === 'vertical' || direction === 'both') {\n    if (offsetTop < minY) {\n      container.scrollTo({ top: offsetTop, behavior });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });\n    }\n  }\n}\n","//\n// Returns an element's offset relative to its parent. Similar to element.offsetTop and element.offsetLeft, except the\n// parent doesn't have to be positioned relative or absolute.\n//\n// NOTE: This was created to work around what appears to be a bug in Chrome where a slotted element's offsetParent\n// seems to ignore elements inside the surrounding shadow DOM: https://bugs.chromium.org/p/chromium/issues/detail?id=920069\n//\nexport function getOffset(element: HTMLElement, parent: HTMLElement) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left),\n  };\n}\n","@import 'src/global/component';\n@import 'src/global/mixins/hide-scrollbar';\n\n:host {\n  display: block;\n}\n\n.tab-group {\n  display: flex;\n  border: solid 1px transparent;\n  border-radius: 0;\n\n  .tab-group__tabs {\n    display: flex;\n    position: relative;\n  }\n}\n\n.tab-group--has-scroll-controls .tab-group__nav-container {\n  position: relative;\n  padding: 0 var(--six-spacing-x-large);\n}\n\n.tab-group__scroll-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: var(--six-spacing-x-large);\n}\n\n.tab-group__scroll-button--left {\n  left: 0;\n}\n\n.tab-group__scroll-button--right {\n  right: 0;\n}\n\n// TOP\n.tab-group--top {\n  flex-direction: column;\n\n  .tab-group__nav-container {\n    order: 1;\n  }\n\n  .tab-group__nav {\n    display: flex;\n    overflow-x: auto;\n    @include hide-scrollbar();\n  }\n\n  .tab-group__tabs {\n    flex: 1 1 auto;\n    position: relative;\n    flex-direction: row;\n  }\n\n  .tab-group__body {\n    order: 2;\n  }\n}\n\n// Bottom\n.tab-group--bottom {\n  flex-direction: column;\n\n  .tab-group__nav-container {\n    order: 2;\n  }\n\n  .tab-group__nav {\n    display: flex;\n    overflow-x: auto;\n    @include hide-scrollbar();\n  }\n\n  .tab-group__tabs {\n    flex: 1 1 auto;\n    position: relative;\n    flex-direction: row;\n  }\n\n  .tab-group__body {\n    order: 1;\n  }\n}\n\n// Left\n\n.tab-group--left {\n  flex-direction: row;\n\n  .tab-group__nav-container {\n    order: 1;\n  }\n\n  .tab-group__tabs {\n    flex: 0 0 auto;\n    flex-direction: column;\n  }\n\n  .tab-group__body {\n    flex: 1 1 auto;\n    order: 2;\n  }\n}\n\n// Right\n.tab-group--right {\n  flex-direction: row;\n\n  .tab-group__nav-container {\n    order: 2;\n  }\n\n  .tab-group__tabs {\n    flex: 0 0 auto;\n    flex-direction: column;\n  }\n\n  .tab-group__body {\n    flex: 1 1 auto;\n    order: 1;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch } from '@stencil/core';\nimport { scrollIntoView } from '../../utils/scroll';\nimport { flipAnimate } from '../../utils/animation';\n\nexport interface SixTabShowPayload {\n  name: string;\n}\n\nexport interface SixTabHidePayload {\n  name: string;\n}\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot nav - Used for grouping tabs in the tab group.\n * @slot - Used for grouping tab panels in the tab group.\n *\n * @part base - The component's base wrapper.\n * @part nav - The tab group navigation container.\n * @part tabs - The container that wraps the slotted tabs.\n * @part active-tab-indicator - An element that displays the currently selected tab. This is a child of the tab's container.\n * @part body - The tab group body where tab panels are slotted in.\n * @part scroll-button - The previous and next scroll buttons that appear when tabs are scrollable.\n */\n@Component({\n  tag: 'six-tab-group',\n  styleUrl: 'six-tab-group.scss',\n  shadow: true,\n})\nexport class SixTabGroup {\n  private activeTab?: HTMLSixTabElement;\n  private body?: HTMLElement;\n  private mutationObserver?: MutationObserver;\n  private nav?: HTMLElement;\n  private resizeObserver?: ResizeObserver;\n  private tabGroup?: HTMLElement;\n  private tabs?: HTMLElement;\n\n  @Element() host!: HTMLSixTabGroupElement;\n\n  @State() hasScrollControls = false;\n\n  /** The placement of the tabs. */\n  @Prop() placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n\n  /** Disables the scroll arrows that appear when tabs overflow. */\n  @Prop() noScrollControls = false;\n\n  @Watch('noScrollControls')\n  handleNoScrollControlsChange() {\n    this.updateScrollControls();\n  }\n\n  /** Emitted when a tab is shown. */\n  @Event({ eventName: 'six-tab-show' }) sixTabShow!: EventEmitter<SixTabShowPayload>;\n\n  /** Emitted when a tab is hidden. */\n  @Event({ eventName: 'six-tab-hide' }) sixTabHide!: EventEmitter<SixTabHidePayload>;\n\n  componentDidLoad() {\n    if (this.tabGroup == null || this.nav == null) return;\n\n    // Set initial tab state when the tabs first become visible\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (entries[0].intersectionRatio > 0) {\n        this.setAriaLabels();\n        this.setActiveTab(this.getActiveTab() || this.getAllTabs()[0], false);\n        observer.unobserve(entries[0].target);\n      }\n    });\n    observer.observe(this.host);\n    this.resizeObserver = new ResizeObserver(() => this.updateScrollControls());\n    this.resizeObserver.observe(this.nav);\n    requestAnimationFrame(() => this.updateScrollControls());\n\n    // Update aria labels if the DOM changes\n    this.mutationObserver = new MutationObserver((mutations) => {\n      if (\n        mutations.some((mutation) => {\n          return !['aria-labelledby', 'aria-controls'].includes(mutation.attributeName ?? '');\n        })\n      ) {\n        setTimeout(() => this.setAriaLabels());\n      }\n    });\n    this.mutationObserver.observe(this.host, { attributes: true, childList: true, subtree: true });\n  }\n\n  disconnectedCallback() {\n    if (this.mutationObserver == null || this.tabGroup == null || this.nav == null || this.resizeObserver == null) {\n      return;\n    }\n    this.mutationObserver.disconnect();\n    this.resizeObserver.unobserve(this.nav);\n  }\n\n  /** Shows the specified tab panel. */\n  @Method()\n  async show(panel: string) {\n    const tabs = this.getAllTabs();\n    const tab = tabs.find((el) => el.panel === panel);\n\n    if (tab != null) {\n      this.setActiveTab(tab);\n    }\n  }\n\n  private getAllTabs(includeDisabled = false): HTMLSixTabElement[] {\n    const slot = this.tabs?.querySelector('slot');\n    if (slot == null) return [];\n\n    return [...slot.assignedElements()].filter((el: Element) => {\n      return includeDisabled\n        ? el.tagName.toLowerCase() === 'six-tab'\n        : el.tagName.toLowerCase() === 'six-tab' && !(el as HTMLSixTabElement).disabled;\n    }) as [HTMLSixTabElement];\n  }\n\n  private getAllPanels(): HTMLSixTabPanelElement[] {\n    const slot = this.body?.querySelector('slot');\n    if (slot == null) return [];\n    return [...slot.assignedElements()].filter((el: Element) => el.tagName.toLowerCase() === 'six-tab-panel') as [\n      HTMLSixTabPanelElement\n    ];\n  }\n\n  private getActiveTab() {\n    return this.getAllTabs().find((el) => el.active);\n  }\n\n  private handleClick = (event: MouseEvent) => {\n    const target = event.target as HTMLElement;\n    const tab = target.closest('six-tab');\n    const tabGroup = tab?.closest('six-tab-group');\n\n    // Ensure the target tab is in this tab group\n    if (tabGroup !== this.host) {\n      return false;\n    }\n\n    if (tab != null) {\n      this.setActiveTab(tab);\n    }\n  };\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    if (this.nav == null) return;\n\n    const target = event.target as HTMLElement;\n    const tab = target.closest('six-tab');\n    const tabGroup = tab?.closest('six-tab-group');\n\n    // Ensure the target tab is in this tab group\n    if (tabGroup !== this.host) {\n      return false;\n    }\n\n    // Move focus left or right\n    if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n      const activeEl = document.activeElement as HTMLSixTabElement;\n\n      if (activeEl && activeEl.tagName.toLowerCase() === 'six-tab') {\n        const tabs = this.getAllTabs();\n        let index = tabs.indexOf(activeEl);\n\n        if (event.key === 'Home') {\n          index = 0;\n        } else if (event.key === 'End') {\n          index = tabs.length - 1;\n        } else if (event.key === 'ArrowLeft') {\n          index = Math.max(0, index - 1);\n        } else if (event.key === 'ArrowRight') {\n          index = Math.min(tabs.length - 1, index + 1);\n        }\n\n        tabs[index].setFocus({ preventScroll: true });\n        this.setActiveTab(tabs[index]);\n\n        if (['top', 'bottom'].includes(this.placement)) {\n          scrollIntoView(tabs[index], this.nav, 'horizontal');\n        }\n\n        event.preventDefault();\n      }\n    }\n  };\n\n  private handleScrollLeft = () => {\n    if (this.nav == null) return;\n\n    this.nav.scroll({\n      left: this.nav.scrollLeft - this.nav.clientWidth,\n      behavior: 'smooth',\n    });\n  };\n\n  private handleScrollRight = () => {\n    if (this.nav == null) return;\n\n    this.nav.scroll({\n      left: this.nav.scrollLeft + this.nav.clientWidth,\n      behavior: 'smooth',\n    });\n  };\n\n  private updateScrollControls() {\n    if (this.nav == null) return;\n\n    this.hasScrollControls = this.noScrollControls\n      ? false\n      : ['top', 'bottom'].includes(this.placement) && this.nav.scrollWidth > this.nav.clientWidth;\n  }\n\n  private setActiveTab(tab: HTMLSixTabElement, emitEvents = true) {\n    if (this.nav == null) return;\n\n    const newIndicator = tab?.shadowRoot?.querySelector('.tab__indicator');\n    const oldIndicator = this.getActiveTab()?.shadowRoot?.querySelector('.tab__indicator');\n\n    if (oldIndicator != null && newIndicator != null) {\n      flipAnimate(newIndicator, oldIndicator);\n    }\n\n    if (tab !== this.activeTab && !tab.disabled) {\n      const previousTab = this.activeTab;\n      this.activeTab = tab;\n\n      // Sync tabs and panels\n      this.getAllTabs().map((el) => (el.active = el === this.activeTab));\n      this.getAllPanels().map((el) => (el.active = el.name === this.activeTab?.panel));\n\n      if (['top', 'bottom'].includes(this.placement)) {\n        scrollIntoView(this.activeTab, this.nav, 'horizontal');\n      }\n\n      // Emit events\n      if (emitEvents) {\n        if (previousTab != null) {\n          this.sixTabHide.emit({ name: previousTab.panel });\n        }\n\n        this.sixTabShow.emit({ name: this.activeTab.panel });\n      }\n    }\n  }\n\n  private setAriaLabels() {\n    const tabs = this.getAllTabs();\n    const panels = this.getAllPanels();\n\n    // Link each tab with its corresponding panel\n    tabs.map((tab) => {\n      const panel = panels.find((el) => el.name === tab.panel);\n      if (panel != null) {\n        tab.setAttribute('aria-controls', panel.getAttribute('id') ?? '');\n        panel.setAttribute('aria-labelledby', tab.getAttribute('id') ?? '');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        ref={(el) => (this.tabGroup = el)}\n        class={{\n          'tab-group': true,\n\n          // Placements\n          'tab-group--top': this.placement === 'top',\n          'tab-group--bottom': this.placement === 'bottom',\n          'tab-group--left': this.placement === 'left',\n          'tab-group--right': this.placement === 'right',\n\n          'tab-group--has-scroll-controls': this.hasScrollControls,\n        }}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n      >\n        <div class=\"tab-group__nav-container\">\n          {this.hasScrollControls && (\n            <six-icon-button\n              class=\"tab-group__scroll-button tab-group__scroll-button--left\"\n              exportparts=\"base:scroll-button\"\n              name=\"chevron_left\"\n              onClick={this.handleScrollLeft}\n            />\n          )}\n          <div ref={(el) => (this.nav = el)} key=\"nav\" part=\"nav\" class=\"tab-group__nav\">\n            <div ref={(el) => (this.tabs = el)} part=\"tabs\" class=\"tab-group__tabs\" role=\"tablist\">\n              <slot name=\"nav\" />\n            </div>\n          </div>\n          {this.hasScrollControls && (\n            <six-icon-button\n              class=\"tab-group__scroll-button tab-group__scroll-button--right\"\n              exportparts=\"base:scroll-button\"\n              name=\"chevron_right\"\n              onClick={this.handleScrollRight}\n            />\n          )}\n        </div>\n\n        <div ref={(el) => (this.body = el)} part=\"body\" class=\"tab-group__body\">\n          <slot />\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * Animates a given `element` from the position and dimension of `fromElement` to\n * its current position and dimension. Can be useful to implement the FLIP animation technique.\n *\n * @see {@link https://css-tricks.com/animating-layouts-with-the-flip-technique/} for details on the FLIP technique.\n *\n * @param {Element} element - The element to animate.\n * @param {Element} fromElement - The element representing the initial position and dimensions.\n * @param {KeyframeAnimationOptions} [options={ duration: 150, easing: 'ease', fill: 'both' }] - Optional animation parameters.\n *\n */\nexport function flipAnimate(\n  element: Element,\n  fromElement: Element,\n  options: KeyframeAnimationOptions = {\n    duration: 150,\n    easing: 'ease',\n    fill: 'both',\n  }\n) {\n  const dimensionsTo = fromElement.getBoundingClientRect();\n  const dimensionsFrom = element.getBoundingClientRect();\n\n  const deltaX = dimensionsTo.left - dimensionsFrom.left;\n  const deltaY = dimensionsTo.top - dimensionsFrom.top;\n  const deltaW = dimensionsTo.width / dimensionsFrom.width;\n  const deltaH = dimensionsTo.height / dimensionsFrom.height;\n\n  element.animate(\n    [\n      {\n        transformOrigin: 'top left',\n        transform: `translate(${deltaX}px, ${deltaY}px) scale(${deltaW}, ${deltaH})`,\n      },\n      {\n        transformOrigin: 'top left',\n        transform: 'none',\n      },\n    ],\n    options\n  );\n}\n"],"names":["locks","Set","lockBodyScrolling","lockingEl","add","document","body","classList","unlockBodyScrolling","delete","size","remove","scrollIntoView","element","container","direction","behavior","offset","parent","top","Math","round","getBoundingClientRect","left","getOffset","offsetTop","scrollTop","offsetLeft","scrollLeft","minX","maxX","offsetWidth","minY","maxY","offsetHeight","scrollTo","clientWidth","clientHeight","SixTabGroup","handleClick","event","tab","target","closest","host","setActiveTab","handleKeyDown","nav","includes","key","activeEl","activeElement","tagName","toLowerCase","tabs","getAllTabs","index","indexOf","length","max","min","setFocus","preventScroll","placement","preventDefault","handleScrollLeft","scroll","handleScrollRight","this","updateScrollControls","tabGroup","IntersectionObserver","entries","observer","intersectionRatio","setAriaLabels","getActiveTab","unobserve","observe","resizeObserver","ResizeObserver","requestAnimationFrame","mutationObserver","MutationObserver","mutations","some","mutation","attributeName","setTimeout","attributes","childList","subtree","disconnect","panel","find","el","includeDisabled","slot","querySelector","assignedElements","filter","disabled","active","hasScrollControls","noScrollControls","scrollWidth","emitEvents","newIndicator","shadowRoot","oldIndicator","fromElement","options","duration","easing","fill","dimensionsTo","dimensionsFrom","deltaX","deltaY","deltaW","width","deltaH","height","animate","transformOrigin","transform","flipAnimate","activeTab","previousTab","map","getAllPanels","name","sixTabHide","emit","sixTabShow","panels","setAttribute","getAttribute","h","part","ref","class","onClick","onKeyDown","exportparts","role"],"sourceRoot":""}