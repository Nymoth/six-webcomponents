{"version":3,"file":"static/js/1834.7beac019.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/components/six-tooltip/six-tooltip.tsx","../../../libraries/ui-library/dist/esm/src/components/six-tooltip/six-tooltip.scss?tag=six-tooltip&encapsulation=shadow"],"sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, Watch } from '@stencil/core';\nimport Popover from '../../utils/popover';\nimport { EmptyPayload } from '../../utils/types';\n\nlet id = 0;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - The tooltip's target element. Only the first element will be used as the target.\n * @slot content - The tooltip's content. Alternatively, you can use the content prop.\n *\n * @part base - The component's base wrapper.\n */\n\n@Component({\n  tag: 'six-tooltip',\n  styleUrl: 'six-tooltip.scss',\n  shadow: true,\n})\nexport class SixTooltip {\n  private componentId = `tooltip-${++id}`;\n  private isVisible = false;\n  private popover?: Popover;\n  private tooltipPositioner?: HTMLElement;\n  private target?: HTMLElement;\n  private tooltip?: HTMLElement;\n\n  @Element() host!: HTMLSixTooltipElement;\n\n  /** The tooltip's content. Alternatively, you can use the content slot. */\n  @Prop() content = '';\n\n  /**\n   * The preferred placement of the tooltip. Note that the actual placement may vary as needed to keep the tooltip\n   * inside the viewport.\n   */\n  @Prop() placement:\n    | 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end' = 'top';\n\n  /** Set to true to disable the tooltip, so it won't show when triggered. */\n  @Prop() disabled = false;\n\n  /** The distance in pixels from which to offset the tooltip away from its target. */\n  @Prop() distance = 10;\n\n  /** Indicates whether the tooltip is open. You can use this in lieu of the show/hide methods. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /** The distance in pixels from which to offset the tooltip along its target. */\n  @Prop() skidding = 0;\n\n  /**\n   * Controls how the tooltip is activated. Possible options include `click`, `hover`, `focus`, and `manual`. Multiple\n   * options can be passed by separating them with a space. When manual is used, the tooltip must be activated\n   * programmatically.\n   */\n  @Prop() trigger = 'hover focus';\n\n  @Watch('open')\n  handleOpenChange() {\n    this.open ? this.show() : this.hide();\n  }\n\n  /** Emitted when the tooltip begins to show. Calling `event.preventDefault()` will prevent it from being shown. */\n  @Event({ eventName: 'six-tooltip-show' }) sixShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the tooltip has shown and all transitions are complete. */\n  @Event({ eventName: 'six-tooltip-after-show' }) sixAfterShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the tooltip begins to hide. Calling `event.preventDefault()` will prevent it from being hidden. */\n  @Event({ eventName: 'six-tooltip-hide' }) sixHide!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the tooltip has hidden and all transitions are complete. */\n  @Event({ eventName: 'six-tooltip-after-hide' }) sixAfterHide!: EventEmitter<EmptyPayload>;\n\n  componentDidLoad() {\n    if (this.tooltipPositioner == null) return;\n    this.target = this.getTarget();\n    this.popover = new Popover(this.target, this.tooltipPositioner, { strategy: 'fixed' });\n    this.syncOptions();\n\n    this.host.addEventListener('blur', this.handleBlur, true);\n    this.host.addEventListener('click', this.handleClick, true);\n    this.host.addEventListener('focus', this.handleFocus, true);\n\n    // Show on init if open\n    this.tooltipPositioner.hidden = !this.open;\n    if (this.open) {\n      this.show();\n    }\n  }\n\n  componentDidUpdate() {\n    this.syncOptions();\n  }\n\n  disconnectedCallback() {\n    if (this.popover != null) {\n      this.popover.destroy();\n    }\n\n    this.host.removeEventListener('blur', this.handleBlur, true);\n    this.host.removeEventListener('click', this.handleClick, true);\n    this.host.removeEventListener('focus', this.handleFocus, true);\n  }\n\n  /** Shows the tooltip. */\n  @Method()\n  async show() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (this.isVisible || this.disabled) {\n      return;\n    }\n\n    const sixShow = this.sixShow.emit();\n    if (sixShow.defaultPrevented) {\n      this.open = false;\n      return;\n    }\n\n    this.isVisible = true;\n    this.open = true;\n    this.popover?.show();\n  }\n\n  /** Shows the tooltip. */\n  @Method()\n  async hide() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (!this.isVisible || this.disabled) {\n      return;\n    }\n\n    const sixHide = this.sixHide.emit();\n    if (sixHide.defaultPrevented) {\n      this.open = true;\n      return;\n    }\n\n    this.isVisible = false;\n    this.open = false;\n    this.popover?.hide();\n  }\n\n  private getTarget() {\n    // Get the first child that isn't a <style> or content slot\n    const target = [...this.host.children].find(\n      (el) => el.tagName.toLowerCase() !== 'style' && el.getAttribute('slot') !== 'content'\n    ) as HTMLElement;\n\n    if (target == null) {\n      throw new Error('Invalid tooltip target: no child element was found.');\n    }\n\n    return target;\n  }\n\n  private handleBlur = () => {\n    if (this.hasTrigger('focus')) {\n      this.hide();\n    }\n  };\n\n  private handleClick = () => {\n    if (this.hasTrigger('click')) {\n      this.open ? this.hide() : this.show();\n    }\n  };\n\n  private handleFocus = () => {\n    if (this.hasTrigger('focus')) {\n      this.show();\n    }\n  };\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    // Pressing escape when the target element has focus should dismiss the tooltip\n    if (this.open && event.key === 'Escape') {\n      event.stopPropagation();\n      this.hide();\n    }\n  };\n\n  private handleMouseOver = () => {\n    if (this.hasTrigger('hover')) {\n      this.show();\n    }\n  };\n\n  private handleMouseOut = () => {\n    if (this.hasTrigger('hover')) {\n      this.hide();\n    }\n  };\n\n  private handleSlotChange = () => {\n    const oldTarget = this.target;\n    const newTarget = this.getTarget();\n\n    if (newTarget !== oldTarget) {\n      if (oldTarget != null) {\n        oldTarget.removeAttribute('aria-describedby');\n      }\n      newTarget.setAttribute('aria-describedby', this.componentId);\n    }\n  };\n\n  private hasTrigger(triggerType: string) {\n    const triggers = this.trigger.split(' ');\n    return triggers.includes(triggerType);\n  }\n\n  private syncOptions() {\n    if (this.popover == null) return;\n\n    this.popover.setOptions({\n      placement: this.placement,\n      distance: this.distance,\n      skidding: this.skidding,\n      transitionElement: this.tooltip,\n      onAfterHide: () => this.sixAfterHide.emit(),\n      onAfterShow: () => this.sixAfterShow.emit(),\n    });\n  }\n\n  render() {\n    return (\n      <Host onKeyDown={this.handleKeyDown} onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <slot onSlotchange={this.handleSlotChange} />\n        <div ref={(el) => (this.tooltipPositioner = el)} class=\"tooltip-positioner\">\n          <div\n            part=\"base\"\n            ref={(el) => (this.tooltip = el)}\n            id={this.componentId}\n            class={{\n              tooltip: true,\n              'tooltip--open': this.open,\n            }}\n            role=\"tooltip\"\n            aria-hidden={this.open ? 'false' : 'true'}\n          >\n            <slot name=\"content\">{this.content}</slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import 'src/global/component';\n\n/**\n * @prop --hide-delay: The amount of time to wait before hiding the tooltip.\n * @prop --hide-duration: The amount of time the hide transition takes to complete.\n * @prop --hide-timing-function: The timing function (easing) to use for the hide transition.\n * @prop --max-width: The maximum width of the tooltip.\n * @prop --show-delay: The amount of time to wait before showing the tooltip.\n * @prop --show-duration: The amount of time the show transition takes to complete.\n * @prop --show-timing-function: The timing function (easing) to use for the show transition.\n */\n:host {\n  --max-width: 20rem;\n  --hide-delay: 0s;\n  --hide-duration: 0.125s;\n  --hide-timing-function: ease;\n  --show-delay: 0.125s;\n  --show-duration: 0.125s;\n  --show-timing-function: ease;\n\n  display: contents;\n}\n\n.tooltip-positioner {\n  position: fixed;\n  z-index: var(--six-z-index-tooltip);\n  pointer-events: none;\n}\n\n.tooltip {\n  max-width: var(--max-width);\n  border-radius: var(--six-border-radius-medium);\n  background-color: var(--six-tooltip-background-color);\n  font-family: var(--six-font-family);\n  font-size: var(--six-tooltip-font-size);\n  font-weight: var(--six-tooltip-font-weight);\n  line-height: var(--six-tooltip-line-height);\n  color: var(--six-tooltip-color);\n  opacity: 0;\n  padding: var(--six-spacing-xxx-small) var(--six-spacing-x-small);\n  transform: scale(0.8);\n  transform-origin: bottom;\n  transition-property: opacity, transform;\n  transition-delay: var(--hide-delay);\n  transition-duration: var(--hide-duration);\n  transition-timing-function: var(--hide-timing-function);\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n}\n\n.tooltip-positioner {\n  &[data-popper-placement^='top'] .tooltip {\n    transform-origin: bottom;\n  }\n\n  &[data-popper-placement^='bottom'] .tooltip {\n    transform-origin: top;\n  }\n\n  &[data-popper-placement^='left'] .tooltip {\n    transform-origin: right;\n  }\n\n  &[data-popper-placement^='right'] .tooltip {\n    transform-origin: left;\n  }\n\n  &.popover-visible .tooltip {\n    opacity: 1;\n    transform: none;\n    transition-delay: var(--show-delay);\n    transition-duration: var(--show-duration);\n    transition-timing-function: var(--show-timing-function);\n  }\n}\n\n// Arrow + bottom\n.tooltip-positioner[data-popper-placement^='bottom'] .tooltip::after {\n  bottom: 100%;\n  left: calc(50% - var(--six-tooltip-arrow-size));\n  border-bottom: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);\n  border-left: var(--six-tooltip-arrow-size) solid transparent;\n  border-right: var(--six-tooltip-arrow-size) solid transparent;\n}\n\n.tooltip-positioner[data-popper-placement='bottom-start'] .tooltip::after {\n  left: var(--six-tooltip-arrow-start-end-offset);\n}\n\n.tooltip-positioner[data-popper-placement='bottom-end'] .tooltip::after {\n  right: var(--six-tooltip-arrow-start-end-offset);\n  left: auto;\n}\n\n// Arrow + top\n.tooltip-positioner[data-popper-placement^='top'] .tooltip::after {\n  top: 100%;\n  left: calc(50% - var(--six-tooltip-arrow-size));\n  border-top: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);\n  border-left: var(--six-tooltip-arrow-size) solid transparent;\n  border-right: var(--six-tooltip-arrow-size) solid transparent;\n}\n\n.tooltip-positioner[data-popper-placement='top-start'] .tooltip::after {\n  left: var(--six-tooltip-arrow-start-end-offset);\n}\n\n.tooltip-positioner[data-popper-placement='top-end'] .tooltip::after {\n  right: var(--six-tooltip-arrow-start-end-offset);\n  left: auto;\n}\n\n// Arrow + left\n.tooltip-positioner[data-popper-placement^='left'] .tooltip::after {\n  top: calc(50% - var(--six-tooltip-arrow-size));\n  left: 100%;\n  border-left: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);\n  border-top: var(--six-tooltip-arrow-size) solid transparent;\n  border-bottom: var(--six-tooltip-arrow-size) solid transparent;\n}\n\n.tooltip-positioner[data-popper-placement='left-start'] .tooltip::after {\n  top: var(--six-tooltip-arrow-start-end-offset);\n}\n\n.tooltip-positioner[data-popper-placement='left-end'] .tooltip::after {\n  top: auto;\n  bottom: var(--six-tooltip-arrow-start-end-offset);\n}\n\n// Arrow + right\n.tooltip-positioner[data-popper-placement^='right'] .tooltip::after {\n  top: calc(50% - var(--six-tooltip-arrow-size));\n  right: 100%;\n  border-right: var(--six-tooltip-arrow-size) solid var(--six-tooltip-background-color);\n  border-top: var(--six-tooltip-arrow-size) solid transparent;\n  border-bottom: var(--six-tooltip-arrow-size) solid transparent;\n}\n\n.tooltip-positioner[data-popper-placement='right-start'] .tooltip::after {\n  top: var(--six-tooltip-arrow-start-end-offset);\n}\n\n.tooltip-positioner[data-popper-placement='right-end'] .tooltip::after {\n  top: auto;\n  bottom: var(--six-tooltip-arrow-start-end-offset);\n}\n"],"names":["id","SixTooltip","componentId","isVisible","handleBlur","hasTrigger","hide","handleClick","open","show","handleFocus","handleKeyDown","event","key","stopPropagation","handleMouseOver","handleMouseOut","handleSlotChange","oldTarget","target","newTarget","getTarget","removeAttribute","setAttribute","this","tooltipPositioner","popover","Popover","strategy","syncOptions","host","addEventListener","hidden","destroy","removeEventListener","disabled","sixShow","emit","defaultPrevented","sixHide","children","find","el","tagName","toLowerCase","getAttribute","Error","triggerType","trigger","split","includes","setOptions","placement","distance","skidding","transitionElement","tooltip","onAfterHide","sixAfterHide","onAfterShow","sixAfterShow","h","Host","onKeyDown","onMouseOver","onMouseOut","onSlotchange","ref","class","part","role","name","content"],"sourceRoot":""}