{"version":3,"file":"static/js/1154.006ea580.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/event-listeners.ts","../../../libraries/ui-library/dist/esm/src/utils/execution-control.ts","../../../libraries/ui-library/dist/esm/src/utils/tabbable.ts","../../../libraries/ui-library/dist/esm/src/components/six-dropdown/six-dropdown.scss?tag=six-dropdown&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/components/six-dropdown/six-dropdown.tsx","../../../libraries/ui-library/dist/esm/src/components/six-menu/six-menu.scss?tag=six-menu&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/components/six-menu/six-menu.tsx","../../../libraries/ui-library/dist/esm/src/utils/slot.ts"],"sourcesContent":["interface EventListener {\n  el: GlobalEventHandlers;\n  name: string;\n  listener: EventListenerOrEventListenerObject;\n  identifier?: string | null;\n}\n\nexport class EventListeners {\n  eventListeners: EventListener[] = [];\n\n  add = <T extends GlobalEventHandlers>(\n    el: T,\n    name: string,\n    listener: EventListenerOrEventListenerObject,\n    identifier: string | null | undefined = null\n  ) => {\n    this.eventListeners.push({ el, name, listener, identifier });\n    el.addEventListener(name, listener);\n  };\n\n  remove = <T extends GlobalEventHandlers>(el: T, name: string, listener: EventListenerOrEventListenerObject) => {\n    this.eventListeners = this.getFilteredEventListeners(\n      (eventListener: EventListener) =>\n        eventListener.listener == listener && eventListener.el === el && eventListener.name === name\n    );\n  };\n\n  removeByIdentifier = (identifier: string) => {\n    const sameItem = (el: EventListener) => el.identifier === identifier;\n    const foundListener = this.eventListeners.find(sameItem) !== undefined;\n    if (!foundListener) {\n      return;\n    }\n    this.eventListeners = this.getFilteredEventListeners(sameItem);\n  };\n\n  private getFilteredEventListeners(sameItem: (el: EventListener) => boolean) {\n    return this.eventListeners.filter((item) => {\n      if (sameItem(item)) {\n        item.el.removeEventListener(item.name, item.listener);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  removeAll = () => {\n    while (this.eventListeners.length > 0) {\n      const eventListener: EventListener | undefined = this.eventListeners.pop();\n      if (eventListener != null) {\n        eventListener.el.removeEventListener(eventListener.name, eventListener.listener);\n      }\n    }\n  };\n\n  forward(from: string, to: 'input' | 'change' | 'blur' | 'focus', host: HTMLElement) {\n    switch (to) {\n      case 'input':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'change':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'blur':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'focus':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n    }\n  }\n}\n","import { EventEmitter } from '@stencil/core';\n\nexport const DEFAULT_DEBOUNCE_INSANELY_FAST = 35;\nexport const DEFAULT_DEBOUNCE_FAST = 300;\n\n/**\n * Debounce function to implement a timeframe to wait for no new changes before executing a callback\n\n *  example usages:\n *    debounce(() => saveInput());\n *    debounce(() => saveInput(), 750);\n *    this.searchInput.addEventListener('six-input-input', debounce((event) => this.searchInputChange(event)));\n *\n *  regarding default timeout check https://lawsofux.com/doherty-threshold/\n *\n * @param callback\n * @param timeout\n */\nexport const debounce = <T>(callback: (x: T) => void, timeout = DEFAULT_DEBOUNCE_FAST) => {\n  let timer: number;\n  return (args: T) => {\n    clearTimeout(timer);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    timer = setTimeout(() => callback(args), timeout);\n  };\n};\n\n/**\n * Debounce an event\n *\n * @param event\n * @param timeout\n */\nexport const debounceEvent = (event: EventEmitter, timeout: number): EventEmitter => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const original = (event as any)._original || event;\n  const emit = debounce(original.emit.bind(original), timeout) as (_: unknown) => CustomEvent;\n  return {\n    _original: event,\n    emit: emit,\n  } as EventEmitter;\n};\n","export function isTabbable(el: HTMLElement) {\n  const tabIndex = el.tabIndex;\n  return tabIndex > -1;\n}\n\nexport function getNearestTabbableElement(el: HTMLElement): HTMLElement | undefined {\n  // Check the element\n  if (isTabbable(el)) {\n    return el;\n  }\n\n  // Check the element's shadow root\n  if (el.shadowRoot != null) {\n    const tabbableShadowChild = [...el.shadowRoot.children].find((e) => isTabbable(e as HTMLElement)) as HTMLElement;\n    if (tabbableShadowChild != null) {\n      return tabbableShadowChild;\n    }\n  }\n\n  // Check the element's children\n  if (el.children != null) {\n    return [...el.children].map((e) => getNearestTabbableElement(e as HTMLElement)).at(0);\n  }\n\n  return undefined;\n}\n","@import 'src/global/component';\n@import 'src/global/mixins/scrollbar';\n\n:host {\n  display: inline-block;\n}\n\n.dropdown {\n  position: relative;\n}\n\n.dropdown__trigger {\n  display: block;\n}\n\n.dropdown__positioner {\n  position: absolute;\n  z-index: var(--six-z-index-dropdown);\n\n  &__filtered {\n    width: 100%;\n  }\n}\n\n.dropdown__panel {\n  max-height: 50vh;\n  font-family: var(--six-font-sans);\n  font-size: var(--six-font-size-small);\n  font-weight: var(--six-font-weight-normal);\n  color: var(--color);\n  background-color: var(--six-panel-background-color);\n  border-radius: var(--six-border-radius-medium);\n  box-shadow: var(--six-elevation-2dp);\n  opacity: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  overscroll-behavior: none;\n  pointer-events: none;\n  transform: scale(0.9);\n  transition: var(--six-transition-fast) opacity, var(--six-transition-fast) transform;\n  // fix for firefox scrollbar\n  scrollbar-width: thin;\n}\n\n.filter-hidden {\n  display: none;\n}\n\n.dropdown__positioner {\n  &[data-popper-placement^='top'] .dropdown__panel {\n    transform-origin: bottom;\n  }\n\n  &[data-popper-placement^='bottom'] .dropdown__panel {\n    transform-origin: top;\n  }\n\n  &[data-popper-placement^='left'] .dropdown__panel {\n    transform-origin: right;\n  }\n\n  &[data-popper-placement^='right'] .dropdown__panel {\n    transform-origin: left;\n  }\n\n  &.popover-visible .dropdown__panel {\n    opacity: 1;\n    transform: none;\n    pointer-events: all;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch } from '@stencil/core';\nimport { getNearestTabbableElement } from '../../utils/tabbable';\nimport Popover from '../../utils/popover';\nimport { EventListeners } from '../../utils/event-listeners';\nimport { getSlotChildren } from '../../utils/slot';\nimport { debounce, DEFAULT_DEBOUNCE_FAST } from '../../utils/execution-control';\nimport { EmptyPayload } from '../../utils/types';\nimport { SixMenuItemData } from '../six-menu/six-menu';\n\nexport interface SixDropdownAutoFilterPayload {\n  filterValue: string;\n}\n\nexport interface SixDropdownAsyncFilterPayload {\n  filterValue: string;\n}\n\nexport interface SixDropdownScrollPayload {\n  scrollHeight: number;\n  scrollTop: number;\n  scrollbarHeight: number;\n  scrollRatio: number;\n}\n\nconst isTagName =\n  (name: string) =>\n  <T extends Element>(el?: T) =>\n    el?.tagName.toLowerCase() === name.toLowerCase();\nconst isSixMenu = isTagName('six-menu');\nconst isSixMenuItem = isTagName('six-menu-item');\n\nlet id = 0;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot trigger - The dropdown's trigger, usually a `<six-button>` element.\n * @slot - The dropdown's content.\n *\n * @part base - The component's base wrapper.\n * @part trigger - The container that wraps the trigger.\n * @part panel - The panel that gets shown when the dropdown is open.\n */\n\n@Component({\n  tag: 'six-dropdown',\n  styleUrl: 'six-dropdown.scss',\n  shadow: true,\n})\nexport class SixDropdown {\n  private componentId = `dropdown-${++id}`;\n  private isVisible = false;\n  private panel?: HTMLElement;\n  private positioner?: HTMLElement;\n  private popover?: Popover;\n  private trigger?: HTMLElement;\n  private hasBeenInitialized = false;\n\n  // the input element shown in the dropdown when filter is set to true\n  private filterInputElement?: HTMLSixInputElement;\n\n  @Element() host!: HTMLSixDropdownElement;\n\n  /** Indicates whether the dropdown is open. You can use this in lieu of the show/hide methods. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\n   * inside the viewport.\n   */\n  @Prop() placement:\n    | 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end' = 'bottom-start';\n\n  /** Determines whether the dropdown should hide when a menu item is selected. */\n  @Prop() closeOnSelect = true;\n\n  /** The distance in pixels from which to offset the panel away from its trigger. */\n  @Prop() distance = 0;\n\n  /** The distance in pixels from which to offset the panel along its trigger. */\n  @Prop() skidding = 0;\n\n  /**\n   * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n   * `overflow: auto|scroll`.\n   */\n  @Prop() hoist = false;\n\n  /** The dropdown will close when the user interacts outside of this element (e.g. clicking). */\n  @Prop() containingElement?: HTMLElement;\n\n  /**\n   * Set to true to allow auto filtering for entries in the dropdown.\n   * With this flag the dropdown will automatically filter itsel.\n   * If you need to coordinate the shown elements yourself,\n   * e.g. because you need to call an endpoint use asyncFilter instead\n   */\n  @Prop() filter = false;\n\n  /**\n   * Set to true to allow async filtering.\n   * When you enter something in the search field the component will only emit an event but not filter any elements itself.\n   * You can then simply listen to the 'six-async-filter-fired' event to manage the shown menu-items yourself\n   */\n  @Prop() asyncFilter = false;\n\n  /** The filter's placeholder text. */\n  @Prop() filterPlaceholder = 'Filter...';\n\n  /** By default the search field will be focused when opening a dropdown with filtering enabled. */\n  @Prop() autofocusFilter = true;\n\n  get hasFilterEnabled() {\n    return this.filter || this.asyncFilter;\n  }\n\n  /** The debounce for the filter callbacks. */\n  @Prop() filterDebounce = DEFAULT_DEBOUNCE_FAST;\n\n  /** The panel can be opend/closed by pressing the spacebar or the enter key. In some cases you might want to avoid this */\n  @Prop() disableHideOnEnterAndSpace = false;\n\n  /** Set the options to be shown in the dropdown (alternative to setting the elements via html)*/\n  @Prop() options: SixMenuItemData[] = [];\n\n  /** Defines whether the menu list will be rendered virtually i.e. only the elements actually shown (and a couple around)\n   *  are actually rendered in the DOM. If you use virtual scrolling pass the elements via prop instead of via slot. */\n  @Prop() virtualScroll = false;\n\n  get container() {\n    return this.containingElement || this.host;\n  }\n\n  /** Emitted when the dropdown opens. Calling `event.preventDefault()` will prevent it from being opened. */\n  @Event({ eventName: 'six-dropdown-show' }) sixShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the dropdown opens and all transitions are complete. */\n  @Event({ eventName: 'six-dropdown-after-show' }) sixAfterShow!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the dropdown closes. Calling `event.preventDefault()` will prevent it from being closed. */\n  @Event({ eventName: 'six-dropdown-hide' }) sixHide!: EventEmitter<EmptyPayload>;\n\n  /** Emitted after the dropdown closes and all transitions are complete. */\n  @Event({ eventName: 'six-dropdown-after-hide' }) sixAfterHide!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the auto filter is triggered */\n  @Event({ eventName: 'six-dropdown-auto-filter-fired' }) sixAutoFilter!: EventEmitter<SixDropdownAutoFilterPayload>;\n\n  /** Emitted when the async filter is triggered */\n  @Event({ eventName: 'six-async-filter-fired' }) sixAsyncFilterFired!: EventEmitter<SixDropdownAsyncFilterPayload>;\n\n  /** Emitted when the user scrolls inside dropdown panel.*/\n  @Event({ eventName: 'six-dropdown-scroll' }) sixScroll!: EventEmitter<SixDropdownScrollPayload>;\n\n  private eventListeners = new EventListeners();\n\n  // internal representation of options, so we don't have to make options mutable\n  @State() filteredOptions: SixMenuItemData[] = [];\n\n  @Watch('open')\n  handleOpenChange() {\n    this.open ? this.show() : this.hide();\n    this.updateAccessibleTrigger();\n  }\n\n  @Watch('distance')\n  @Watch('hoist')\n  @Watch('placement')\n  @Watch('skidding')\n  handlePopoverOptionsChange() {\n    if (this.popover == null) return;\n\n    this.popover.setOptions({\n      strategy: this.hoist ? 'fixed' : 'absolute',\n      placement: this.placement,\n      distance: this.distance,\n      skidding: this.skidding,\n    });\n  }\n\n  @Watch('options')\n  handleOptionsChange() {\n    if (Array.isArray(this.options)) {\n      this.filteredOptions = [...this.options];\n    }\n  }\n\n  connectedCallback() {\n    if (this.virtualScroll && this.options === null) {\n      console.error('Options must be defined when using virtual scrolling');\n    }\n\n    if (Array.isArray(this.options)) {\n      this.filteredOptions = [...this.options];\n    }\n\n    if (this.hasBeenInitialized && this.popover == null) {\n      // there was a weird bug when using six-dropdown inside an ag-grid filter. When closing the ag-grid filter\n      // disconnectedCallback() is executed. However, since componentDidLoad() will not be rerendered the popover had\n      // no longer a connected transitionEnd callback to the dropdown. To fix this, we have this sanity check here,\n      // to re-initialize the popover in case the component has already been initialized but the popover is undefined.\n      this.initializePopover();\n    }\n  }\n\n  componentDidLoad() {\n    this.hasBeenInitialized = true;\n    this.initializePopover();\n\n    // Show on init if open\n    if (this.open) {\n      void this.show();\n    }\n\n    if (this.filter) {\n      this.setupFiltering(this.handleFilterInputChange);\n    } else if (this.asyncFilter) {\n      this.setupFiltering(() => this.sixAsyncFilterFired.emit({ filterValue: this.filterInputElement?.value ?? '' }));\n    }\n  }\n\n  private initializePopover() {\n    if (this.trigger == null || this.positioner == null) return;\n    const onAfterHide = () => {\n      if (this.filter && this.filterInputElement != null) {\n        this.filterInputElement.value = '';\n\n        if (this.filteredOptions.length > 0) {\n          this.filteredOptions = [...this.options];\n        } else {\n          const menuItems = this.getMenuItems();\n          menuItems.forEach((item) => (item.style.display = 'unset'));\n        }\n      }\n\n      this.sixAfterHide.emit();\n    };\n\n    const onAfterShow = async () => {\n      if (this.hasFilterEnabled && this.autofocusFilter) {\n        // if dropdown filter is enabled we should autofocus the search field\n        await this.filterInputElement?.setFocus();\n      }\n\n      this.sixAfterShow.emit();\n    };\n\n    const onTransitionEnd = () => {\n      if (!this.open && this.panel != null) {\n        this.panel.scrollTop = 0;\n      }\n    };\n\n    this.popover = new Popover(this.trigger, this.positioner, {\n      strategy: this.hoist ? 'fixed' : 'absolute',\n      placement: this.placement,\n      distance: this.distance,\n      skidding: this.skidding,\n      transitionElement: this.panel,\n      onAfterHide,\n      onAfterShow,\n      onTransitionEnd,\n    });\n  }\n\n  private setupFiltering(callback: () => void) {\n    if (this.filterInputElement != null) {\n      this.eventListeners.add(this.filterInputElement, 'six-input-input', debounce(callback, this.filterDebounce));\n    }\n  }\n\n  private getMenuItems = (): HTMLSixMenuItemElement[] => {\n    if (this.filteredOptions.length > 0) {\n      return this.filteredOptions.map((option) => <six-menu-item value={option.value}>{option.label}</six-menu-item>);\n    }\n    if (this.panel == null) return [];\n\n    const [panel] = getSlotChildren<HTMLSixMenuElement>(this.panel);\n\n    // the menu-items can be in a slot e.g. in six-select or direct children of the panel\n    return getSlotChildren(panel) || Array.from(panel.querySelectorAll('six-menu-item'));\n  };\n\n  private handleFilterInputChange = () => {\n    if (this.filterInputElement == null) return;\n\n    const lowerCaseFilterTerm = this.filterInputElement.value?.toLowerCase()?.trim() || '';\n\n    if (this.filteredOptions.length > 0) {\n      this.handleFilteringForAttributeItems(lowerCaseFilterTerm);\n    } else {\n      this.handleFilteringForSlotItems(lowerCaseFilterTerm);\n    }\n\n    this.sixAutoFilter.emit({ filterValue: lowerCaseFilterTerm });\n  };\n\n  private handleFilteringForAttributeItems(lowerCaseFilterTerm: string) {\n    if (lowerCaseFilterTerm === '' && Array.isArray(this.options)) {\n      this.filteredOptions = [...this.options];\n      return;\n    }\n\n    this.filteredOptions = this.options.filter(\n      (option) =>\n        (option.label && String(option.label)?.toLowerCase()?.includes(lowerCaseFilterTerm)) ||\n        (option.value && String(option.value)?.toLowerCase()?.includes(lowerCaseFilterTerm))\n    );\n  }\n\n  private handleFilteringForSlotItems(lowerCaseFilterTerm: string) {\n    const menuItems = this.getMenuItems();\n    menuItems.forEach(async (menuItem) => {\n      // hide all elements which don't contain the entered substring\n      const elementContainsFilterTerm =\n        menuItem?.value?.toLowerCase()?.includes(lowerCaseFilterTerm) ||\n        (await menuItem?.getTextLabel())?.toLowerCase()?.includes(lowerCaseFilterTerm);\n\n      menuItem.style.display = elementContainsFilterTerm ? 'unset' : 'none';\n    });\n  }\n\n  disconnectedCallback() {\n    this.eventListeners.removeAll();\n\n    void this.hide();\n    this.popover?.destroy();\n    this.popover = undefined;\n  }\n\n  /** Shows the dropdown panel */\n  @Method()\n  async show() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (this.isVisible || this.popover == null || this.panel == null) {\n      return;\n    }\n\n    const sixShow = this.sixShow.emit();\n    if (sixShow.defaultPrevented) {\n      this.open = false;\n      return;\n    }\n\n    this.eventListeners.add(this.panel, 'six-menu-item-selected', this.handlePanelSelect);\n    this.eventListeners.add(document, 'keydown', this.handleDocumentKeyDown);\n    this.eventListeners.add(document, 'mousedown', this.handleDocumentMouseDown);\n\n    this.isVisible = true;\n    this.open = true;\n    this.popover.show();\n  }\n\n  /** Hides the dropdown panel */\n  @Method()\n  async hide() {\n    // Prevent subsequent calls to the method, whether manually or triggered by the `open` watcher\n    if (!this.isVisible || this.panel == null || this.popover == null) {\n      return;\n    }\n\n    const sixHide = this.sixHide.emit();\n    if (sixHide.defaultPrevented) {\n      this.open = true;\n      return;\n    }\n\n    this.eventListeners.remove(this.panel, 'six-menu-item-selected', this.handlePanelSelect);\n    this.eventListeners.remove(document, 'keydown', this.handleDocumentKeyDown);\n    this.eventListeners.remove(document, 'mousedown', this.handleDocumentMouseDown);\n\n    this.isVisible = false;\n    this.open = false;\n    this.popover.hide();\n  }\n\n  private focusOnTrigger() {\n    if (this.trigger == null) return;\n    const [trigger] = getSlotChildren<HTMLSixButtonElement>(this.trigger);\n    if (trigger != null) {\n      if (typeof trigger.setFocus === 'function') {\n        trigger.setFocus();\n      } else if (typeof trigger.focus === 'function') {\n        trigger.focus();\n      }\n    }\n  }\n\n  private getMenu(): HTMLSixMenuElement | undefined {\n    if (this.panel == null) return;\n    return getSlotChildren<HTMLSixMenuElement>(this.panel).filter(isSixMenu).at(0);\n  }\n\n  /**\n   * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu\n   * is activated.\n   */\n  @Method()\n  async reposition() {\n    if (!this.open || this.popover == null) {\n      return;\n    }\n    this.popover.reposition();\n  }\n\n  private handleDocumentKeyDown = (event: Event) => {\n    const keyboardEvent = event as KeyboardEvent;\n    // Close when escape is pressed\n    if (keyboardEvent.key === 'Escape') {\n      void this.hide();\n      this.focusOnTrigger();\n      return;\n    }\n\n    if (this.filterInputElement === this.host.shadowRoot?.activeElement) {\n      if (keyboardEvent.key === 'ArrowDown') {\n        const item = this.getMenuItems().find((item) => item.style.display !== 'none');\n        if (item != null) {\n          item.setFocus();\n        }\n      }\n    }\n\n    // Handle tabbing\n    if (keyboardEvent.key === 'Tab') {\n      // Tabbing within an open menu should close the dropdown and refocus the trigger\n      if (this.open && document.activeElement != null && isSixMenuItem(document.activeElement)) {\n        keyboardEvent.preventDefault();\n        void this.hide();\n        this.focusOnTrigger();\n        return;\n      }\n\n      // Tabbing outside the containing element closes the panel\n      //\n      // If the dropdown is used within a shadow DOM, we need to obtain the activeElement within that shadowRoot,\n      // otherwise `document.activeElement` will only return the name of the parent shadow DOM element.\n      setTimeout(() => {\n        const activeElement =\n          this.container.getRootNode() instanceof ShadowRoot\n            ? document.activeElement?.shadowRoot?.activeElement\n            : document.activeElement;\n\n        if (activeElement?.closest(this.container.tagName.toLowerCase()) !== this.container) {\n          void this.hide();\n          return;\n        }\n      });\n    }\n  };\n\n  private handleDocumentMouseDown = (event: Event) => {\n    // Close when clicking outside the containing element\n    const path = event.composedPath() as EventTarget[];\n    if (!path.includes(this.container)) {\n      void this.hide();\n      return;\n    }\n  };\n\n  private handlePanelSelect = (event: Event) => {\n    const target = event.target as HTMLElement;\n\n    // Hide the dropdown when a menu item is selected\n    if (this.closeOnSelect && isSixMenu(target)) {\n      void this.hide();\n      this.focusOnTrigger();\n    }\n  };\n\n  private handleTriggerClick = () => {\n    this.open ? this.hide() : this.show();\n  };\n\n  private handleTriggerKeyDown = (event: KeyboardEvent) => {\n    // Close when escape or tab is pressed\n    if (event.key === 'Escape') {\n      this.focusOnTrigger();\n      void this.hide();\n      return;\n    }\n\n    // When spacebar/enter is pressed, show the panel but don't focus on the menu. This let's the user press the same\n    // key again to hide the menu in case they don't want to make a selection.\n    if (!this.disableHideOnEnterAndSpace && [' ', 'Enter'].includes(event.key)) {\n      event.preventDefault();\n      this.open ? void this.hide() : void this.show();\n      return;\n    }\n\n    const menu = this.getMenu();\n\n    // When up/down is pressed, we make the assumption that the user is familiar with the menu and plans to make a\n    // selection. Rather than toggle the panel, we focus on the menu (if one exists) and activate the first item for\n    // faster navigation.\n    if (['ArrowDown', 'ArrowUp'].includes(event.key)) {\n      event.preventDefault();\n\n      // Show the menu if it's not already open\n      if (!this.open) {\n        void this.show();\n      }\n\n      if (menu == null) {\n        return;\n      }\n      const menuItems = [...menu.querySelectorAll('six-menu-item')];\n      const firstMenuItem = menuItems.at(0);\n      const lastMenuItem = menuItems.at(menuItems.length - 1);\n\n      // Focus on a menu item\n      if (event.key === 'ArrowDown' && firstMenuItem != null) {\n        firstMenuItem.setFocus();\n        return;\n      }\n\n      if (event.key === 'ArrowUp' && lastMenuItem != null) {\n        lastMenuItem.setFocus();\n        return;\n      }\n    }\n\n    // Other keys bring focus to the menu and initiate type-to-select behavior\n    const ignoredKeys = ['Tab', 'Shift', 'Meta', 'Ctrl', 'Alt'];\n    if (this.open && menu != null && !ignoredKeys.includes(event.key)) {\n      void menu.typeToSelect(event.key);\n      return;\n    }\n  };\n\n  private handleTriggerKeyUp = (event: KeyboardEvent) => {\n    // Prevent space from triggering a click event in Firefox\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  private handleTriggerSlotChange = () => {\n    this.updateAccessibleTrigger();\n  };\n\n  private handleDropdownScroll = () => {\n    if (this.panel == null) return;\n\n    this.sixScroll.emit({\n      scrollHeight: this.panel.scrollHeight,\n      scrollTop: this.panel.scrollTop,\n      scrollbarHeight: this.panel.offsetHeight * (this.panel.offsetHeight / this.panel.scrollHeight),\n      scrollRatio: this.panel.scrollTop / (this.panel.scrollHeight - this.panel.clientHeight),\n    });\n  };\n\n  //\n  // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and\n  // `aria-expanded`. These must be applied to the \"accessible trigger\" (the tabbable portion of the trigger element\n  // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,\n  // a child of the slotted element, or an element in the slotted element's shadow root.\n  //\n  // For example, the accessible trigger of an <sl-button> is a <button> located inside its shadow root.\n  //\n  // To determine this, we assume the first tabbable element in the trigger slot is the \"accessible trigger.\"\n  //\n  private updateAccessibleTrigger() {\n    if (this.trigger == null) return;\n\n    const accessibleTrigger = getSlotChildren(this.trigger).map(getNearestTabbableElement).at(0);\n    if (accessibleTrigger != null) {\n      accessibleTrigger.setAttribute('aria-haspopup', 'true');\n      accessibleTrigger.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n    }\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        id={this.componentId}\n        class={{\n          dropdown: true,\n          'dropdown--open': this.open,\n        }}\n      >\n        <span\n          part=\"trigger\"\n          class=\"dropdown__trigger\"\n          ref={(el) => (this.trigger = el)}\n          onClick={this.handleTriggerClick}\n          onKeyDown={this.handleTriggerKeyDown}\n          onKeyUp={this.handleTriggerKeyUp}\n        >\n          <slot name=\"trigger\" onSlotchange={this.handleTriggerSlotChange} />\n        </span>\n\n        {/* Position the panel with a wrapper since the popover makes use of `translate`. This let's us add transitions\n        on the panel without interfering with the position. */}\n        <div\n          ref={(el) => (this.positioner = el)}\n          class={{\n            dropdown__positioner: true,\n            dropdown__positioner__filtered: (this.filter || this.asyncFilter) && !this.hoist,\n          }}\n        >\n          {this.hasFilterEnabled && (\n            <six-input\n              class={{\n                'filter-hidden': !this.open,\n              }}\n              aria-hidden={this.open ? 'false' : 'true'}\n              ref={(el) => (this.filterInputElement = el)}\n              placeholder={this.filterPlaceholder}\n            />\n          )}\n          <div\n            ref={(el) => (this.panel = el)}\n            part=\"panel\"\n            class=\"dropdown__panel\"\n            role=\"menu\"\n            aria-hidden={this.open ? 'false' : 'true'}\n            aria-labelledby={this.componentId}\n            onScroll={this.handleDropdownScroll}\n          >\n            <slot />\n            {this.filteredOptions.length > 0 && (\n              <six-menu part=\"menu\" items={this.filteredOptions} virtualScroll={this.virtualScroll}></six-menu>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","@import 'src/global/component';\n\n:host {\n  display: block;\n}\n\n.menu {\n  padding: 0 0;\n  border: none;\n  box-shadow: var(--six-elevation-2dp);\n\n  &:focus {\n    outline: none;\n  }\n\n  &--noshadow {\n    box-shadow: none;\n  }\n\n  &__wrapper {\n    &--scrollable {\n      overflow-y: auto;\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Method, Prop, State } from '@stencil/core';\nimport { getTextContent } from '../../utils/slot';\nimport { StyleDeclaration } from '../../utils/types';\nimport { EventListeners } from '../../utils/event-listeners';\nimport { debounce } from '../../utils/execution-control';\n\nexport interface SixMenuItemData {\n  label: string;\n  value: string;\n}\n\nexport interface SixMenuItemSelectedPayload {\n  name: string;\n  item: HTMLSixMenuItemElement;\n}\n\nconst isFocusedMenuItem = (menuItem: HTMLSixMenuItemElement) =>\n  menuItem?.shadowRoot?.querySelector('.menu-item')?.classList?.contains('menu-item--focused');\n\nconst isSIXMenuItemElement = (el?: Element): el is HTMLSixMenuItemElement =>\n  el?.tagName.toLowerCase() === 'six-menu-item';\n\nconst mapToMenuItem = ({ value, label }: SixMenuItemData) => <six-menu-item value={value}>{label}</six-menu-item>;\n\nconst DEFAULT_NUMBER_OF_ITEMS_SHOWN_FOR_VIRTUAL_SCROLLING = 5;\n\nconst DEFAULT_SIX_MENU_ITEM_HEIGHT = 64;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - The menu's content, including menu items, menu dividers, and menu labels.\n *\n * @part base - The component's base wrapper.\n */\n@Component({\n  tag: 'six-menu',\n  styleUrl: 'six-menu.scss',\n  shadow: true,\n})\nexport class SixMenu {\n  private readonly eventListeners = new EventListeners();\n\n  private menu?: HTMLElement;\n  private menuWrapper?: HTMLElement;\n  private typeToSelectString = '';\n  private typeToSelectTimeout?: number;\n\n  @Element() host!: HTMLSixMenuElement;\n\n  /** Emitted when a menu item is selected. */\n  @Event({ eventName: 'six-menu-item-selected' }) sixMenuItemSelected!: EventEmitter<SixMenuItemSelectedPayload>;\n\n  /** Set to true to remove the box-shadow */\n  @Prop() removeBoxShadow = false;\n\n  /** Set the options to be shown in the dropdown */\n  @Prop() items: SixMenuItemData[] | null = null;\n\n  /** Defines how many items should be shown. If the number of items is larger than this property a scrollbar will be shown */\n  @Prop() itemsShown?: number;\n\n  /** Defines whether the menu list will be rendered virtually i.e. only the elements actually shown (and a couple around)\n   *  are actually rendered in the DOM. If you use virtual scrolling pass the elements via prop instead of via slot. */\n  @Prop() virtualScroll = false;\n\n  /**\n   * Used for virtual scrolling\n   * Define how many items should be rendered in the DOM when using virtual scrolling\n   */\n  @Prop() itemSize = 10;\n\n  /**\n   * Used for virtual scrolling\n   * Define the debounce for listening on scrolling changes in milliseconds.\n   * The lower the number the more sensitive the component reacts to scrolling changes.\n   */\n  @Prop() scrollingDebounce = 15;\n\n  /**\n   * Used to calculate which items should be rendered in the DOM\n   */\n  @State()\n  private scrollingIndex = 0;\n\n  // set a default item height, this variable will be updated with the real value after the first render.\n  // However, it's necessary to have a default value because we can only fetch the proper height after the first render\n  @State()\n  sixMenuItemHeight = DEFAULT_SIX_MENU_ITEM_HEIGHT;\n\n  connectedCallback() {\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillLoad() {\n    if (this.items === null) {\n      return;\n    }\n  }\n\n  private handleScrolling = () => {\n    if (this.menuWrapper == null) return;\n    // for performance improvements we only update the DOM if the scrollRatio change \"enough\"\n    this.scrollingIndex = Math.floor(this.menuWrapper.scrollTop / this.sixMenuItemHeight);\n  };\n\n  componentDidLoad() {\n    this.setupForVirtualScrollingAfterRendering();\n  }\n\n  disconnectedCallback() {\n    this.eventListeners.removeAll();\n  }\n\n  /**\n   * Initiates type-to-select logic, which automatically selects an option based on what the user is currently typing.\n   * The key passed will be appended to the internal query and the selection will be updated. After a brief period, the\n   * internal query is cleared automatically. This method is intended to be used with the keydown event. Useful for\n   * enabling type-to-select when the menu doesn't have focus.\n   */\n  @Method()\n  async typeToSelect(key: string) {\n    clearTimeout(this.typeToSelectTimeout);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.typeToSelectTimeout = setTimeout(() => (this.typeToSelectString = ''), 750);\n    this.typeToSelectString += key.toLowerCase();\n    const items = this.getItems();\n    for (const item of items) {\n      const slot = item.shadowRoot?.querySelector('slot:not([name])') as HTMLSlotElement;\n      const label = getTextContent(slot).toLowerCase().trim();\n      if (label.substring(0, this.typeToSelectString.length) === this.typeToSelectString) {\n        item.setFocus();\n        break;\n      }\n    }\n  }\n\n  private getItemsShown(): number {\n    const defaultItemsShown = this.virtualScroll ? DEFAULT_NUMBER_OF_ITEMS_SHOWN_FOR_VIRTUAL_SCROLLING : 0;\n    return this.itemsShown ?? defaultItemsShown;\n  }\n\n  private setupForVirtualScrollingAfterRendering() {\n    if (!this.virtualScroll || this.menuWrapper == null) return;\n\n    this.eventListeners.add(this.menuWrapper, 'scroll', debounce(this.handleScrolling, this.scrollingDebounce));\n\n    // set menu height to proper height once the item is rendered.\n    const menuItemHeight = this.menu?.querySelector('six-menu-item')?.clientHeight;\n    if (menuItemHeight != null && menuItemHeight > 0) {\n      this.sixMenuItemHeight = menuItemHeight;\n    }\n  }\n\n  private getItems(): HTMLSixMenuItemElement[] {\n    if (this.menu == null) return [];\n\n    if (this.items != null) {\n      return this.items.map(mapToMenuItem);\n    }\n\n    const slot = this.menu.querySelector('slot');\n    if (slot == null) return [];\n    return [...slot.assignedElements({ flatten: true })].filter(\n      (el): el is HTMLSixMenuItemElement => isSIXMenuItemElement(el) && !el.disabled\n    );\n  }\n\n  private getActiveItemIndex() {\n    const items = this.getItems();\n    const selectedItem = this.getActiveItem();\n    if (selectedItem != null) {\n      const itemIndex = items.indexOf(selectedItem);\n      if (itemIndex > -1) {\n        return itemIndex;\n      }\n    }\n    const sixMenuItems = this.extractItemsFromDOM();\n    return sixMenuItems.findIndex(isFocusedMenuItem);\n  }\n\n  private getActiveItem(): HTMLSixMenuItemElement | undefined {\n    const activeElement = this.getItems().find((i) => i === document.activeElement);\n    if (activeElement != null) {\n      return activeElement;\n    }\n    return this.extractItemsFromDOM()?.find(isFocusedMenuItem);\n  }\n\n  private extractItemsFromDOM() {\n    return Array.from(this.host.shadowRoot?.querySelectorAll('six-menu-item') ?? []);\n  }\n\n  private setActiveItem(item: HTMLSixMenuItemElement) {\n    item?.setFocus();\n  }\n\n  private handleClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    const clickedItem = target.closest('six-menu-item');\n    if (clickedItem && !clickedItem.disabled) {\n      this.sixMenuItemSelected.emit({ name: clickedItem.value, item: clickedItem });\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    // Make a selection when pressing enter\n    if (event.key === 'Enter') {\n      const activeItem = this.getActiveItem();\n      event.preventDefault();\n\n      if (activeItem != null) {\n        this.sixMenuItemSelected.emit({ name: activeItem.value, item: activeItem });\n      }\n    }\n\n    // Prevent scrolling when space is pressed\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n\n    // Move the selection when pressing down or up\n    if (['ArrowDown', 'ArrowUp', 'Home', 'End'].includes(event.key)) {\n      const items = this.items === null ? this.getItems() : this.extractItemsFromDOM();\n\n      let indexOfActiveItem = this.getActiveItemIndex();\n\n      if (items.length > 0) {\n        event.preventDefault();\n\n        if (event.key === 'ArrowDown') {\n          indexOfActiveItem++;\n        } else if (event.key === 'ArrowUp') {\n          indexOfActiveItem--;\n        } else if (event.key === 'Home') {\n          indexOfActiveItem = 0;\n        } else if (event.key === 'End') {\n          indexOfActiveItem = items.length - 1;\n        }\n\n        if (indexOfActiveItem < 0) indexOfActiveItem = 0;\n        if (indexOfActiveItem > items.length - 1) indexOfActiveItem = items.length - 1;\n\n        this.setActiveItem(items[indexOfActiveItem]);\n\n        return;\n      }\n    }\n\n    void this.typeToSelect(event.key);\n  }\n\n  private getMenuWrapperStyle() {\n    const styles: Partial<StyleDeclaration> = {};\n    if (this.getItemsShown() > 0) {\n      // calculate the proper height to show the correct number of items\n      styles.height = `${(this.getItemsShown() ?? 0) * this.sixMenuItemHeight}px`;\n    }\n    return {\n      ...styles,\n    };\n  }\n\n  private getMenuContainerStyle() {\n    const styles: Partial<StyleDeclaration> = {};\n\n    if (this.virtualScroll) {\n      // calculate height of content are if all items would be rendered so the scrollbar has the proper size\n      styles.transform = `translateY(${this.sixMenuItemHeight * this.scrollingIndex}px)`;\n    }\n\n    return {\n      ...styles,\n    };\n  }\n\n  private getScrollbarGhostStyle() {\n    const styles: Partial<StyleDeclaration> = {};\n\n    if (this.virtualScroll && this.items !== null) {\n      styles.height = `${this.items.length * this.sixMenuItemHeight - this.itemSize * this.sixMenuItemHeight}px`;\n    }\n\n    return {\n      ...styles,\n    };\n  }\n\n  private renderItems() {\n    if (this.items === undefined || this.items === null) {\n      return;\n    }\n\n    if (!this.virtualScroll) {\n      return this.items.map(mapToMenuItem);\n    }\n\n    return this.items\n      .slice(this.scrollingIndex, Math.min(this.items.length, this.itemSize + this.scrollingIndex))\n      .map(mapToMenuItem);\n  }\n\n  render() {\n    return (\n      <div\n        ref={(el) => (this.menuWrapper = el)}\n        style={this.getMenuWrapperStyle()}\n        part=\"wrapper\"\n        class={{\n          menu: true,\n          'menu--noshadow': this.removeBoxShadow,\n          'menu__wrapper--scrollable': this.getItemsShown() > 0,\n        }}\n      >\n        <div\n          ref={(el) => (this.menu = el)}\n          part=\"base\"\n          role=\"menu\"\n          onClick={this.handleClick}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n          style={this.getMenuContainerStyle()}\n        >\n          <slot />\n          {this.renderItems()}\n        </div>\n        {this.virtualScroll && <div style={this.getScrollbarGhostStyle()} />}\n      </div>\n    );\n  }\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport const getSlotChildren = <T extends HTMLElement>(el: HTMLElement) =>\n  el.querySelector('slot')?.assignedElements({ flatten: true }) as T[];\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n"],"names":["EventListeners","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","getFilteredEventListeners","eventListener","removeByIdentifier","sameItem","undefined","find","removeAll","length","pop","removeEventListener","this","filter","item","from","to","host","dispatchEvent","InputEvent","bubbles","cancelable","FocusEvent","DEFAULT_DEBOUNCE_INSANELY_FAST","DEFAULT_DEBOUNCE_FAST","debounce","callback","timer","timeout","args","clearTimeout","setTimeout","debounceEvent","event","original","_original","emit","bind","isTabbable","tabIndex","getNearestTabbableElement","shadowRoot","tabbableShadowChild","children","e","map","at","isTagName","tagName","toLowerCase","isSixMenu","isSixMenuItem","id","SixDropdown","componentId","isVisible","hasBeenInitialized","getMenuItems","filteredOptions","option","h","value","label","panel","getSlotChildren","Array","querySelectorAll","handleFilterInputChange","filterInputElement","lowerCaseFilterTerm","trim","handleFilteringForAttributeItems","handleFilteringForSlotItems","sixAutoFilter","filterValue","handleDocumentKeyDown","keyboardEvent","key","hide","focusOnTrigger","activeElement","style","display","setFocus","open","document","preventDefault","container","getRootNode","ShadowRoot","closest","handleDocumentMouseDown","composedPath","includes","handlePanelSelect","target","closeOnSelect","handleTriggerClick","show","handleTriggerKeyDown","disableHideOnEnterAndSpace","menu","getMenu","menuItems","firstMenuItem","lastMenuItem","typeToSelect","handleTriggerKeyUp","handleTriggerSlotChange","updateAccessibleTrigger","handleDropdownScroll","sixScroll","scrollHeight","scrollTop","scrollbarHeight","offsetHeight","scrollRatio","clientHeight","asyncFilter","containingElement","popover","setOptions","strategy","hoist","placement","distance","skidding","isArray","options","virtualScroll","console","error","initializePopover","setupFiltering","sixAsyncFilterFired","trigger","positioner","onAfterShow","hasFilterEnabled","autofocusFilter","sixAfterShow","Popover","transitionElement","onAfterHide","forEach","sixAfterHide","onTransitionEnd","filterDebounce","String","menuItem","getTextLabel","_c","_d","elementContainsFilterTerm","destroy","sixShow","defaultPrevented","sixHide","focus","reposition","accessibleTrigger","setAttribute","part","class","dropdown","ref","onClick","onKeyDown","onKeyUp","onSlotchange","dropdown__positioner","dropdown__positioner__filtered","placeholder","filterPlaceholder","role","onScroll","items","isFocusedMenuItem","querySelector","classList","contains","mapToMenuItem","SixMenu","typeToSelectString","handleScrolling","menuWrapper","scrollingIndex","Math","floor","sixMenuItemHeight","handleClick","handleKeyDown","setupForVirtualScrollingAfterRendering","typeToSelectTimeout","getItems","slot","getTextContent","substring","defaultItemsShown","itemsShown","scrollingDebounce","menuItemHeight","assignedElements","flatten","isSIXMenuItemElement","disabled","selectedItem","getActiveItem","itemIndex","indexOf","extractItemsFromDOM","findIndex","i","clickedItem","sixMenuItemSelected","activeItem","indexOfActiveItem","getActiveItemIndex","setActiveItem","styles","getItemsShown","height","transform","itemSize","slice","min","getMenuWrapperStyle","removeBoxShadow","getMenuContainerStyle","renderItems","getScrollbarGhostStyle","nodes","assignedNodes","text","node","nodeType","Node","TEXT_NODE","textContent","hasSlot","childNodes","some","ELEMENT_NODE","hasAttribute","getSlot","element","slotName"],"sourceRoot":""}