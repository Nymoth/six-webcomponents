{"version":3,"file":"static/js/3701.647fcfbc.chunk.js","mappings":"kPAuBaA,EAAO,W,kHAoBV,KAAAC,eAAiB,IAAIC,gBAAe,YAAO,IACzCC,GADyC,YAAD,GACzBC,YAAfD,MACR,EAAKE,SAAWF,EAAQ,EAAKG,U,oBAlBV,K,aAGJ,E,WAGU,K,aAGT,G,eAKE,C,+CAQpB,SAAgBC,GACdC,KAAKC,eAAeC,KAAK,CAAEH,UAAAA,G,GAC5B,+BAED,WACEC,KAAKP,eAAeU,QAAQH,KAAKI,K,GAClC,kCAED,WACEJ,KAAKP,eAAeY,Y,GACrB,oBAED,WACE,OACEC,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,MAAM,aACVD,EAAAA,EAAAA,GAAAA,SAAAA,CAAQE,KAAK,UACVR,KAAKS,QAASH,EAAAA,EAAAA,GAAAA,sBAAAA,CAAqBG,MAAOT,KAAKS,OAAQT,KAAKU,UAC7DJ,EAAAA,EAAAA,GAAAA,OAAAA,CAAMK,KAAK,aAEbL,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAM,yBAAyBC,KAAK,iBACvCF,EAAAA,EAAAA,GAAAA,iBAAAA,CAAgBM,MAAO,CAAEC,MAAOb,KAAKH,YACnCS,EAAAA,EAAAA,GAAAA,OAAAA,CAAMK,KAAK,oBAGfL,EAAAA,EAAAA,GAAAA,OAAAA,CAAME,KAAK,SACTF,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAO,CAAE,uBAAuB,EAAM,8BAA+BP,KAAKc,QAAUN,KAAK,cAC5FF,EAAAA,EAAAA,GAAAA,OAAAA,CAAMK,KAAK,WAEbL,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAM,qBACTD,EAAAA,EAAAA,GAAAA,OAAAA,CAAMK,KAAK,cAGfL,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,MAAM,0BAA0BC,KAAK,kBACxCF,EAAAA,EAAAA,GAAAA,OAAAA,CAAMK,KAAK,mB,GAIlB,2B,kGA/DiB,G,QCvBD,klB","sources":["../../../libraries/ui-library/dist/esm/src/components/six-root/six-root.tsx","../../../libraries/ui-library/dist/esm/src/components/six-root/six-root.scss?tag=six-root&encapsulation=shadow"],"sourcesContent":["import { Component, Element, Event, EventEmitter, h, Prop, State, Watch } from '@stencil/core';\nimport { StageType } from '../six-stage-indicator/six-stage-indicator';\n\nexport interface SixRootCollapsedPayload {\n  collapsed: boolean;\n}\n\n/**\n * @since 1.0\n * @status stable\n *\n * @slot header - Used to define the header component.\n * @slot main - Used to define the components in the main area.\n * @slot left-sidebar - Used to define the sidebar on the left side.\n * @slot right-sidebar - Used to define the sidebar on the right side.\n * @slot footer - Used to define the footer component.\n */\n\n@Component({\n  tag: 'six-root',\n  styleUrl: 'six-root.scss',\n  shadow: true,\n})\nexport class SixRoot {\n  @Element() host!: HTMLSixRootElement;\n\n  /** Breakpoint for smaller screens when the right sidebar is collapsed by default. */\n  @Prop() breakpoint = 1024;\n\n  /** Defines whether the content section should be padded */\n  @Prop() padded = true;\n\n  /** Defines the stage of the application*/\n  @Prop() stage: StageType = null;\n\n  /** Defines the version of the application*/\n  @Prop() version = '';\n\n  /** Emitted when display size is updated. */\n  @Event({ eventName: 'six-root-collapsed' }) collapsedEvent!: EventEmitter<SixRootCollapsedPayload>;\n\n  @State() collapse = false;\n\n  private resizeObserver = new ResizeObserver(([host]) => {\n    const { width } = host.contentRect;\n    this.collapse = width < this.breakpoint;\n  });\n\n  @Watch('collapse')\n  handleCollapsed(collapsed: boolean) {\n    this.collapsedEvent.emit({ collapsed });\n  }\n\n  componentWillLoad() {\n    this.resizeObserver.observe(this.host);\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n\n  render() {\n    return (\n      <host class=\"six-root\">\n        <header part=\"header\">\n          {this.stage && <six-stage-indicator stage={this.stage}>{this.version}</six-stage-indicator>}\n          <slot name=\"header\" />\n        </header>\n        <nav class=\"six-root__left-sidebar\" part=\"left-sidebar\">\n          <set-attributes value={{ open: !this.collapse }}>\n            <slot name=\"left-sidebar\" />\n          </set-attributes>\n        </nav>\n        <main part=\"main\">\n          <div class={{ 'six-root__container': true, 'six-root__container--padded': this.padded }} part=\"container\">\n            <slot name=\"main\" />\n          </div>\n          <div class=\"six-root__footer\">\n            <slot name=\"footer\" />\n          </div>\n        </main>\n        <nav class=\"six-root__right-sidebar\" part=\"right-sidebar\">\n          <slot name=\"right-sidebar\" />\n        </nav>\n      </host>\n    );\n  }\n}\n","@import 'src/global/mixins/scrollbar';\n\n:host {\n  display: block;\n  overflow: hidden;\n  height: inherit;\n}\n\n.six-root {\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n  height: 100%;\n\n  &__container {\n    &--padded {\n      padding: var(--six-spacing-xxx-large);\n    }\n  }\n\n  &__left-sidebar {\n    height: 100%;\n    overflow: scroll;\n    grid-column: 1 / 2;\n  }\n\n  &__right-sidebar {\n    height: 100%;\n    overflow: scroll;\n    grid-column: 3 / 4;\n  }\n\n  nav {\n    overflow: hidden;\n  }\n}\n\nheader {\n  grid-column: 1 / 4;\n  position: sticky;\n  top: 0;\n  z-index: var(--six-z-index-header);\n  // border fix\n  margin-right: 2px;\n}\n\nmain {\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  grid-column: 2 / 3;\n  overflow: auto;\n}\n\nfooter {\n  grid-column: 1 / 4;\n}\n"],"names":["SixRoot","resizeObserver","ResizeObserver","width","contentRect","collapse","breakpoint","collapsed","this","collapsedEvent","emit","observe","host","disconnect","h","class","part","stage","version","name","value","open","padded"],"sourceRoot":""}