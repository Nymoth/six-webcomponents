{"version":3,"file":"static/js/8002.e5537cd5.chunk.js","mappings":"qPAaMA,EAAoB,CAAC,KAAM,KAAM,MAc1BC,EAAmB,W,uHAqCtB,KAAAC,wBAA0B,SAACC,EAAqBC,GAAsB,OAAK,gBAC3DC,IAAlBD,EACF,EAAKE,UAAUC,KAAKH,GAEpB,EAAKE,UAAUC,KAAKJ,GAEtB,EAAKK,SAAWL,C,CACjB,E,oCAvC0DH,C,sDAG3D,SAAuBS,GACrB,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIG,MAAM,wCAGlBC,KAAKC,wB,GACN,+BAMD,gBACwBT,IAAlBQ,KAAKL,UACPK,KAAKC,wB,GAER,oCAEO,WACN,IAAMC,EAAmBF,KAAKG,UAAU,GACR,kBAArBD,GACTF,KAAKL,SAAWO,EAChBF,KAAKP,UAAUC,KAAKM,KAAKL,YAEzBK,KAAKL,SAAWO,EAAiBE,IACjCJ,KAAKP,UAAUC,KAAKQ,EAAiBG,O,GAExC,oBAWD,WAAM,WACJ,OACEC,EAAAA,EAAAA,GAAAA,MAAAA,CAAKC,KAAK,YAAYC,MAAM,gCACzBR,KAAKG,UAAUM,KAAI,SAACC,EAAMC,GACzB,IAAMC,EAA2B,kBAATF,EAAoBA,EAAOA,EAAKN,IACxD,OACEE,EAAAA,EAAAA,GAAAA,MAAAA,CAAKO,QAAS,EAAKxB,wBAAwBuB,EAA0B,kBAATF,EAAoBA,EAAOA,EAAKL,SAC1FC,EAAAA,EAAAA,GAAAA,OAAAA,CACEC,KAAK,QACLC,MAAO,CACL,4BAA4B,EAC5B,qCAAsC,EAAKb,WAAaiB,IAGzDA,GAEFD,EAAQ,EAAKR,UAAUW,OAAS,IAC/BR,EAAAA,EAAAA,GAAAA,OAAAA,CAAMC,KAAK,YAAYC,MAAM,gCAA8B,K,QASxE,gC,mDAxE6B,G,QC3BD,gQ","sources":["../../../libraries/ui-library/dist/esm/src/components/six-language-switcher/six-language-switcher.tsx","../../../libraries/ui-library/dist/esm/src/components/six-language-switcher/six-language-switcher.scss?tag=six-language-switcher&encapsulation=shadow"],"sourcesContent":["import { Component, Event, EventEmitter, h, Prop, Watch } from '@stencil/core';\n\n/**\n * @since 2.1.0\n * @status experimental\n **/\n\nexport interface SixLanguageSwitcherInput {\n  key: string;\n  value: string;\n}\nexport type SixLanguageSwitcherChangePayload = string;\n\nconst DEFAULT_LANGUAGES = ['EN', 'DE', 'ES'];\n\n/*\n * @since 2.2.0\n * @status experimental\n * @part container - The whole component container\n * @part label - The language label\n * @part separator - The separator between the language labels\n */\n@Component({\n  tag: 'six-language-switcher',\n  styleUrl: 'six-language-switcher.scss',\n  shadow: true,\n})\nexport class SixLanguageSwitcher {\n  /** The language which should be shown as selected */\n  @Prop({ mutable: true, reflect: true }) selected?: string;\n\n  /** The languages which should be selectable options. */\n  @Prop() languages: string[] | SixLanguageSwitcherInput[] = DEFAULT_LANGUAGES;\n\n  @Watch('languages')\n  handleChangesLanguages(newValue: string[]) {\n    if (!Array.isArray(newValue)) {\n      throw new Error('languages is expected to be an array');\n    }\n\n    this.updateSelectedLanguage();\n  }\n  /**\n   * Emitted when the language switchers value changes\n   */\n  @Event({ eventName: 'six-language-switcher-change' }) sixChange!: EventEmitter<SixLanguageSwitcherChangePayload>;\n\n  componentWillLoad() {\n    if (this.selected === undefined) {\n      this.updateSelectedLanguage();\n    }\n  }\n\n  private updateSelectedLanguage() {\n    const selectedLanguage = this.languages[0];\n    if (typeof selectedLanguage === 'string') {\n      this.selected = selectedLanguage;\n      this.sixChange.emit(this.selected);\n    } else {\n      this.selected = selectedLanguage.key;\n      this.sixChange.emit(selectedLanguage.value);\n    }\n  }\n\n  private handleLanguageSwitching = (newLanguage: string, languageValue?: string) => () => {\n    if (languageValue !== undefined) {\n      this.sixChange.emit(languageValue);\n    } else {\n      this.sixChange.emit(newLanguage);\n    }\n    this.selected = newLanguage;\n  };\n\n  render() {\n    return (\n      <div part=\"container\" class=\"language-switcher__container\">\n        {this.languages.map((lang, index) => {\n          const language = typeof lang === 'string' ? lang : lang.key;\n          return (\n            <div onClick={this.handleLanguageSwitching(language, typeof lang === 'string' ? lang : lang.value)}>\n              <span\n                part=\"label\"\n                class={{\n                  'language-switcher__label': true,\n                  'language-switcher__label--selected': this.selected === language,\n                }}\n              >\n                {language}\n              </span>\n              {index < this.languages.length - 1 && (\n                <span part=\"separator\" class=\"language-switcher__separator\">\n                  /\n                </span>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n",".language-switcher {\n  &__container {\n    display: flex;\n  }\n\n  &__separator {\n    padding: 0 0.25rem;\n  }\n\n  &__label {\n    cursor: pointer;\n\n    &:hover {\n      color: var(--six-color-red);\n    }\n\n    &--selected {\n      color: var(--six-color-red);\n    }\n  }\n}\n"],"names":["DEFAULT_LANGUAGES","SixLanguageSwitcher","handleLanguageSwitching","newLanguage","languageValue","undefined","sixChange","emit","selected","newValue","Array","isArray","Error","this","updateSelectedLanguage","selectedLanguage","languages","key","value","h","part","class","map","lang","index","language","onClick","length"],"sourceRoot":""}