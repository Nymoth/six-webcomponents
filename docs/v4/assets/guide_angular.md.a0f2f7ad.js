import{_ as s,o as a,c as n,X as o}from"./chunks/framework.f9831273.js";const u=JSON.parse('{"title":"Angular","description":"","frontmatter":{},"headers":[],"relativePath":"guide/angular.md","filePath":"guide/angular.md"}'),e={name:"guide/angular.md"},l=o(`<h1 id="angular" tabindex="-1">Angular <a class="header-anchor" href="#angular" aria-label="Permalink to &quot;Angular&quot;">​</a></h1><p>We provide a <a href="https://www.npmjs.com/package/@six-group/ui-library-angular" target="_blank" rel="noreferrer">dedicated npm package for Angular</a>, designed to simplify the utilization of our web components. Check out the instructions in this guide to learn how to use it.</p><p>For additional assistance with the implementation, you can also examine the <a href="https://six-group.github.io/six-webcomponents/v4/demo/angular" target="_blank" rel="noreferrer">Angular demo</a> and its <a href="https://github.com/six-group/six-webcomponents/tree/main/examples/angular" target="_blank" rel="noreferrer">accompanying code</a>.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><ol><li><p>Install the web components and the angular library:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@six-group/ui-library</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@six-group/ui-library-angular</span></span></code></pre></div></li><li><p>Add <code>UiLibraryAngularModule.forRoot()</code> to your root angular module imports section.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">NgModule</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">declarations</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">imports</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// other imports</span></span>
<span class="line"><span style="color:#A6ACCD;">   UiLibraryAngularModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forRoot</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></li><li><p>If your project contains child modules, add the <code>UiLibraryAngularModule</code> (without the <code>forRoot()</code>) to those too.</p></li><li><p>Import the SIX styles to your global <code>styles.scss</code> file (usually located at <code>src/styles.scss</code>):</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@six-group/ui-library/dist/ui-library/ui-library.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li></ol><h2 id="using-the-components" tabindex="-1">Using the Components <a class="header-anchor" href="#using-the-components" aria-label="Permalink to &quot;Using the Components&quot;">​</a></h2><p>The components can be utilized just like any other Angular component. However, there&#39;s one caveat: while you&#39;ll receive code completion for attributes/properties of the component, code completion for events provided by the components is currently unavailable. Please check the <a href="./../components/six-alert.html">components documentation</a> for available events.</p><h2 id="forms" tabindex="-1">Forms <a class="header-anchor" href="#forms" aria-label="Permalink to &quot;Forms&quot;">​</a></h2><p>Form components like <code>six-input</code> work seamlessly in <a href="https://angular.io/guide/forms-overview" target="_blank" rel="noreferrer">Angular forms</a>, both in template-driven and reactive forms.</p><p>An objective of the SIX library is to ensure a consistent look and feel across all applications. Hence, the SIX Library takes on the responsibility of displaying error messages, when appropriate. For instance, it avoids displaying the message if the form is pristine, even if a field is marked as invalid.</p><p>To select the correct translation, your application should ensure the <code>lang</code> attribute of the <code>html</code> element is set. Supported languages are <code>en</code>, <code>de</code>, <code>it</code> and <code>fr</code>. Refer to the <a href="https://github.com/six-group/six-webcomponents/tree/main/examples/angular" target="_blank" rel="noreferrer">Angular example</a> for a concrete implementation of this, when switching the language.</p><h3 id="form-util" tabindex="-1">Form Util <a class="header-anchor" href="#form-util" aria-label="Permalink to &quot;Form Util&quot;">​</a></h3><p>From a <a href="https://www.bennadel.com/blog/4419-the-user-experience-ux-of-disabled-form-buttons.htm" target="_blank" rel="noreferrer">usability standpoint</a>, we consider that users should always be allowed to submit a form, even if it contains invalid values The library comes with an additional utility to aid in the process of displaying errors after the user clicked on the submit button.</p><p>The <code>FormUtilDirective</code> provides a way to set all fields as dirty and touched, and focusing on the first field that contains an error.</p><p>To use it, simply add the <code>sixFormUtil</code> directive to a form like this:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">sixFormUtil</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">[formGroup]</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">form</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">(ngSubmit)</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">onSubmit()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">six-input</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">six-input</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">six-button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">[submit]</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Sunit</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">six-button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>Afterwards, you can access the directive using <code>ViewChild</code> in your TypeScript file and call <code>focusInvalidField()</code> to display all current errors if applicable:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyForm</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ViewChild</span><span style="color:#A6ACCD;">(SixFormUtilDirective) </span><span style="color:#F07178;">sixFormUtil</span><span style="color:#89DDFF;">!:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SixFormUtilDirective</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">submit</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!this.</span><span style="color:#A6ACCD;">form</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">valid</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sixFormUtil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">focusInvalidField</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// submit the form</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,18),t=[l];function p(r,c,i,y,F,d){return a(),n("div",null,t)}const h=s(e,[["render",p]]);export{u as __pageData,h as default};
