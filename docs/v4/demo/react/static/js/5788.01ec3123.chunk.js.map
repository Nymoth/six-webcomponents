{"version":3,"file":"static/js/5788.01ec3123.chunk.js","mappings":"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","sources":["../../../libraries/ui-library/dist/esm/src/utils/event-listeners.ts","../../../libraries/ui-library/dist/esm/src/components/six-header/six-header.tsx","../../../libraries/ui-library/dist/esm/src/components/six-header/six-header.scss?tag=six-header&encapsulation=shadow","../../../libraries/ui-library/dist/esm/src/utils/slot.ts","../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["interface EventListener {\n  el: GlobalEventHandlers;\n  name: string;\n  listener: EventListenerOrEventListenerObject;\n  identifier?: string | null;\n}\n\nexport class EventListeners {\n  eventListeners: EventListener[] = [];\n\n  add = <T extends GlobalEventHandlers>(\n    el: T,\n    name: string,\n    listener: EventListenerOrEventListenerObject,\n    identifier: string | null | undefined = null\n  ) => {\n    this.eventListeners.push({ el, name, listener, identifier });\n    el.addEventListener(name, listener);\n  };\n\n  remove = <T extends GlobalEventHandlers>(el: T, name: string, listener: EventListenerOrEventListenerObject) => {\n    this.eventListeners = this.getFilteredEventListeners(\n      (eventListener: EventListener) =>\n        eventListener.listener == listener && eventListener.el === el && eventListener.name === name\n    );\n  };\n\n  removeByIdentifier = (identifier: string) => {\n    const sameItem = (el: EventListener) => el.identifier === identifier;\n    const foundListener = this.eventListeners.find(sameItem) !== undefined;\n    if (!foundListener) {\n      return;\n    }\n    this.eventListeners = this.getFilteredEventListeners(sameItem);\n  };\n\n  private getFilteredEventListeners(sameItem: (el: EventListener) => boolean) {\n    return this.eventListeners.filter((item) => {\n      if (sameItem(item)) {\n        item.el.removeEventListener(item.name, item.listener);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  removeAll = () => {\n    while (this.eventListeners.length > 0) {\n      const eventListener: EventListener | undefined = this.eventListeners.pop();\n      if (eventListener != null) {\n        eventListener.el.removeEventListener(eventListener.name, eventListener.listener);\n      }\n    }\n  };\n\n  forward(from: string, to: 'input' | 'change' | 'blur' | 'focus', host: HTMLElement) {\n    switch (to) {\n      case 'input':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'change':\n        this.add(host, from, () => host.dispatchEvent(new InputEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'blur':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n      case 'focus':\n        this.add(host, from, () => host.dispatchEvent(new FocusEvent(to, { bubbles: true, cancelable: true })));\n        break;\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\nimport { EventListeners } from '../../utils/event-listeners';\nimport { getSlot, hasSlot } from '../../utils/slot';\nimport { EmptyPayload } from '../../utils/types';\n\nexport interface SixHeaderAppSwitcherSelectPayload {\n  selectedLabel: string;\n  name: string;\n  item: HTMLSixMenuItemElement;\n}\n\nexport interface SixHeaderProfileSelectPayload {\n  selectedLabel: string;\n  name: string;\n  item: HTMLSixMenuItemElement;\n}\n\nexport interface SixHeaderSearchFieldToggle {\n  visible: boolean;\n}\n\nenum Section {\n  None,\n  Search,\n  AppSwitcher,\n  Profile,\n}\n\nenum Slot {\n  Search = 'search-field',\n  Notifications = 'notifications',\n  AppSwitcher = 'app-switcher-menu',\n  Profile = 'profile-menu',\n  Logo = 'logo',\n}\n\n/**\n * @since 1.0\n * @status stable\n *\n * @slot - Used to define a custom component that is included in the header.\n * @slot search-field - Used to define the search field component in the header.\n * @slot notifications - Used to define the notification component in the header.\n * @slot app-switcher-menu - Used to define the application switcher menu in the header.\n * @slot profile-menu - Used to define the profile menu in the header.\n * @slot profile-avatar - Used to define the avator in the header.\n */\n\n@Component({\n  tag: 'six-header',\n  styleUrl: 'six-header.scss',\n  shadow: true,\n  assetsDirs: ['assets'],\n})\nexport class SixHeader {\n  /** Indicates if content should be shifted down when search field is visible. */\n  @Prop() shiftContent = false;\n\n  /** Set the hamburger menu icon to open or closed state */\n  @Prop() openHamburgerMenu = false;\n\n  /** Set the header search to be in an open or closed state */\n  @Prop() openSearch = false;\n\n  /** Set whether the logo should be clickable */\n  @Prop() clickableLogo = false;\n\n  @Watch('openSearch')\n  handleOpenSearchChange() {\n    this.computeSearchOpenState();\n  }\n\n  /** Sets open state for search */\n  @Method()\n  async setSearchOpenState(openState: boolean) {\n    if (this.selectedSection === Section.Search && !openState) {\n      this.selectedSection = Section.None;\n    } else if (openState && this.selectedSection !== Section.Search) {\n      this.selectedSection = Section.Search;\n    }\n  }\n\n  /** Get open state for search */\n  @Method()\n  async getIsSearchOpen() {\n    return this.selectedSection === Section.Search;\n  }\n\n  /** Emitted when the name of the selected app is clicked. */\n  @Event({ eventName: 'six-header-app-name-clicked' }) sixAppNameClicked!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when a menu item is in the app switcher menu is selected. */\n  @Event({ eventName: 'six-header-app-switcher-select' })\n  sixAppSwitcherSelect!: EventEmitter<SixHeaderAppSwitcherSelectPayload>;\n\n  /** Emitted when a menu item is in the profile menu is selected. */\n  @Event({ eventName: 'six-header-profile-select' }) sixProfileSelect!: EventEmitter<SixHeaderProfileSelectPayload>;\n\n  /** Emitted when the hamburger menu is clicked. */\n  @Event({ eventName: 'six-header-hamburger-menu-clicked' }) sixHamburgerClick!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when the header logo is clicked. */\n  @Event({ eventName: 'six-header-logo-clicked' }) sixLogoClick!: EventEmitter<EmptyPayload>;\n\n  /** Emitted when search field is toggled. */\n  @Event({ eventName: 'six-header-search-field-toggle' })\n  sixSearchFieldToggle!: EventEmitter<SixHeaderSearchFieldToggle>;\n\n  @Element() host!: HTMLSixHeaderElement;\n\n  private eventListeners = new EventListeners();\n\n  private slots?: Record<Slot, boolean>;\n\n  @State() selectedApp?: string;\n  @State() selectedSection?: Section;\n\n  private hasSlot(slot: Slot): boolean {\n    if (this.slots == null) {\n      return false;\n    }\n    return this.slots[slot];\n  }\n\n  private isSectionSelected(value: Section) {\n    return value === this.selectedSection;\n  }\n\n  private selectSection(section: Section) {\n    return () => (this.selectedSection = section);\n  }\n\n  private toggleSearch() {\n    const visible = this.selectedSection !== Section.Search;\n    this.selectedSection = this.selectedSection === Section.Search ? Section.None : Section.Search;\n    this.sixSearchFieldToggle.emit({ visible });\n    if (this.selectedSection === Section.Search) {\n      // setFocus deferred due to https://github.com/ionic-team/stencil/issues/3772\n      setTimeout(async () => {\n        const slot = getSlot(this.host, Slot.Search);\n        slot?.shadowRoot?.querySelector('six-input')?.setFocus();\n      }, 50);\n    }\n  }\n\n  private setupMenu = (el?: HTMLSixIconButtonElement) => {\n    if (el == null) return;\n\n    this.eventListeners.add(el, 'click', () => this.sixHamburgerClick.emit());\n  };\n\n  private setupLogo = (el?: HTMLElement) => {\n    if (!this.clickableLogo || el == null) return;\n\n    this.eventListeners.add(el, 'click', () => this.sixLogoClick.emit());\n  };\n\n  private setupProfile = (el?: HTMLSixDropdownElement) => {\n    if (el == null) return;\n\n    this.eventListeners.add(el, 'six-dropdown-show', this.selectSection(Section.Profile));\n    this.eventListeners.add(el, 'six-dropdown-hide', this.selectSection(Section.None));\n    this.eventListeners.add(el, 'six-menu-item-selected', (event: Event) => {\n      const { name, item } = (event as CustomEvent).detail;\n      this.sixProfileSelect.emit({ selectedLabel: item.innerText, name, item });\n    });\n  };\n\n  private setupAppSwitcher = (el?: HTMLSixDropdownElement) => {\n    if (el == null) return;\n\n    this.eventListeners.add(el, 'six-dropdown-show', this.selectSection(Section.AppSwitcher));\n    this.eventListeners.add(el, 'six-dropdown-hide', this.selectSection(Section.None));\n    this.eventListeners.add(el, 'six-menu-item-selected', (event: Event) => {\n      const { name, item } = (event as CustomEvent).detail;\n      this.selectedApp = item.innerText;\n      this.sixAppSwitcherSelect.emit({ selectedLabel: item.innerText, name, item });\n    });\n  };\n\n  private appNameClicked = () => this.sixAppNameClicked.emit();\n\n  private computeSearchOpenState = () => {\n    this.selectedSection = this.openSearch ? Section.Search : Section.None;\n  };\n\n  componentWillLoad() {\n    this.slots = {\n      [Slot.Search]: hasSlot(this.host, Slot.Search),\n      [Slot.Notifications]: hasSlot(this.host, Slot.Notifications),\n      [Slot.AppSwitcher]: hasSlot(this.host, Slot.AppSwitcher),\n      [Slot.Profile]: hasSlot(this.host, Slot.Profile),\n      [Slot.Logo]: hasSlot(this.host, Slot.Logo),\n    };\n\n    if (this.hasSlot(Slot.AppSwitcher)) {\n      this.selectedApp = this.getSelectedApp();\n    }\n\n    if (this.hasSlot(Slot.Search)) {\n      this.computeSearchOpenState();\n    }\n  }\n\n  private getSelectedApp(): string | undefined {\n    // there are more concise ways to select the first checked menu item, but this is one that works for jest\n    const element = getSlot(this.host, Slot.AppSwitcher);\n    if (element == null) {\n      return undefined;\n    }\n    const items = Array.from(element.querySelectorAll('six-menu-item'));\n    const firstCheckedMenuItem = items.find((item: HTMLElement) => item.hasAttribute('checked'));\n    return firstCheckedMenuItem?.textContent ?? undefined;\n  }\n\n  disconnectedCallback() {\n    this.eventListeners.removeAll();\n  }\n\n  render() {\n    const search = this.hasSlot(Slot.Search) && (\n      <section\n        class={{\n          'six-header__search': true,\n          'six-header__search--open': this.isSectionSelected(Section.Search),\n        }}\n      >\n        <six-icon-button name=\"search\" onClick={() => this.toggleSearch()} data-testid=\"search-trigger\" />\n      </section>\n    );\n\n    const notifications = this.hasSlot(Slot.Notifications) && (\n      <section class=\"six-header__notification\">\n        <slot name={Slot.Notifications} />\n      </section>\n    );\n\n    const appSwitcher = this.hasSlot(Slot.AppSwitcher) && (\n      <section\n        class={{\n          'six-header__app-switcher': true,\n          'six-header__app-switcher--open': this.isSectionSelected(Section.AppSwitcher),\n        }}\n      >\n        <a onClick={this.appNameClicked} class=\"six-header__selected-app\">\n          {this.selectedApp}\n        </a>\n        <six-dropdown distance={13} skidding={20} placement=\"bottom-end\" ref={this.setupAppSwitcher}>\n          <six-icon-button name=\"apps\" slot=\"trigger\" />\n          <slot name={Slot.AppSwitcher} />\n        </six-dropdown>\n      </section>\n    );\n\n    const profile = this.hasSlot(Slot.Profile) && (\n      <section\n        class={{\n          'six-header__profile': true,\n          'six-header__profile--open': this.isSectionSelected(Section.Profile),\n        }}\n      >\n        <six-dropdown distance={17} skidding={20} placement=\"bottom-end\" ref={this.setupProfile}>\n          <slot name=\"profile-avatar\" slot=\"trigger\" />\n          <slot name=\"profile-menu\" />\n        </six-dropdown>\n      </section>\n    );\n\n    const logo = this.hasSlot(Slot.Logo) ? (\n      <section>\n        <slot name=\"logo\" />\n      </section>\n    ) : (\n      <section\n        class={{\n          'six-header__logo': true,\n          'six-header__logo--clickable': this.clickableLogo,\n        }}\n        ref={this.setupLogo}\n      >\n        <svg height=\"20\" viewBox=\"0 0 90 26\" xmlns=\"http://www.w3.org/2000/svg\">\n          <title>SIX</title>\n          <g fill=\"#DE3919\" fill-rule=\"nonzero\">\n            <path d=\"m22.798 3.869c1.82-2.168 4.549-3.545 7.6-3.545h6.807v4.961h-6.807c-1.526 0-2.89.689-3.8 1.771l-12.19 14.526c-1.82 2.166-4.549 3.545-7.6 3.545h-6.808v-4.961h6.808c1.525 0 2.889-.689 3.799-1.773l12.191-14.525\" />\n            <path d=\"m42.16.324h5.21v24.806h-5.21z\" />\n            <path d=\"m66.743 3.869l4.195 4.999 4.195-4.999c1.819-2.168 4.549-3.545 7.6-3.545h6.806v4.961h-6.806c-1.526 0-2.89.689-3.8 1.771l-4.758 5.669 4.758 5.669c.91 1.084 2.274 1.773 3.8 1.773h6.806v4.961h-6.806c-3.051 0-5.781-1.379-7.6-3.545l-4.195-4.999-4.195 4.999c-1.82 2.166-4.55 3.545-7.6 3.545h-6.807v-4.961h6.807c1.525 0 2.889-.689 3.799-1.773l4.758-5.669-4.758-5.669c-.91-1.083-2.274-1.771-3.799-1.771h-6.807v-4.961h6.807c3.05 0 5.78 1.378 7.6 3.545\" />\n          </g>\n        </svg>\n      </section>\n    );\n\n    return (\n      <Host>\n        <header class=\"six-header\">\n          <section class=\"six-header__menu\">\n            <six-icon-button name={this.openHamburgerMenu ? 'menu_open' : 'menu'} ref={this.setupMenu} />\n          </section>\n\n          {logo}\n\n          <section class=\"six-header__placeholder\" />\n\n          <section class=\"six-header__custom\">\n            <slot />\n          </section>\n\n          {search}\n\n          {notifications}\n\n          {appSwitcher}\n\n          {profile}\n        </header>\n\n        <div\n          class={{\n            'six-header__search-field': true,\n            'six-header__search-field--visible': this.isSectionSelected(Section.Search),\n            'six-header__search-field--shift-content': this.shiftContent,\n          }}\n        >\n          <slot name={Slot.Search} />\n        </div>\n      </Host>\n    );\n  }\n}\n","@import 'src/global/component';\n\n$header-height: 3.75rem;\n$border-height: 0.25rem;\n\n:host {\n  display: block;\n  user-select: none;\n  --search-border-width: 1px;\n}\n\n::slotted(six-search-field) {\n  position: absolute;\n  margin-left: var(--search-border-width);\n  width: calc(100% - 2 * var(--search-border-width));\n}\n\n.six-header {\n  display: flex;\n  width: 100%;\n  height: $header-height;\n  background-color: var(--six-header-background-color);\n  align-items: center;\n  flex-wrap: wrap;\n  box-shadow: var(--six-shadow-x-large);\n  border-bottom: var(--six-header-border-with) solid var(--six-header-border-color);\n\n  &__logo {\n    width: 6rem;\n    margin-top: 0.15rem;\n\n    &--clickable {\n      cursor: pointer;\n    }\n  }\n\n  &__placeholder {\n    flex: 1;\n  }\n\n  &__menu,\n  &__logo,\n  &__custom,\n  &__search,\n  &__notification,\n  &__app-switcher,\n  &__profile {\n    height: calc(100% - #{$border-height} - 1px);\n    padding: 0 1.25rem;\n    display: flex;\n    align-items: center;\n    border-bottom: solid $border-height transparent;\n\n    &--open {\n      border-bottom: solid $border-height var(--six-header-border-color-open);\n    }\n  }\n\n  &__selected-app {\n    cursor: pointer;\n    font-size: 0.9rem;\n    font-weight: 600;\n    padding-right: 0;\n    padding-left: 0.3rem;\n    &:hover {\n      color: var(--six-header-selected-app-color-hover);\n    }\n  }\n\n  &__search-field {\n    opacity: 0;\n    transform: scale(0.9);\n    transition: var(--six-transition-fast) opacity, var(--six-transition-fast) transform;\n    display: none;\n\n    &--visible {\n      opacity: 1;\n      transform: none;\n      display: block;\n    }\n\n    &--shift-content.six-header__search-field--visible {\n      height: 2.65rem;\n      transition: var(--six-transition-fast) height;\n    }\n\n    &--shift-content:not(.six-header__search-field--visible) {\n      height: 0;\n      transition: var(--six-transition-fast) height;\n    }\n  }\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport const getSlotChildren = <T extends HTMLElement>(el: HTMLElement) =>\n  el.querySelector('slot')?.assignedElements({ flatten: true }) as T[];\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":["EventListeners","eventListeners","add","el","name","listener","identifier","push","addEventListener","remove","getFilteredEventListeners","eventListener","removeByIdentifier","sameItem","undefined","find","removeAll","length","pop","removeEventListener","this","filter","item","from","to","host","dispatchEvent","InputEvent","bubbles","cancelable","FocusEvent","Section","Slot","SixHeader","setupMenu","sixHamburgerClick","emit","setupLogo","clickableLogo","sixLogoClick","setupProfile","selectSection","Profile","None","event","detail","sixProfileSelect","selectedLabel","innerText","setupAppSwitcher","AppSwitcher","selectedApp","sixAppSwitcherSelect","appNameClicked","sixAppNameClicked","computeSearchOpenState","selectedSection","openSearch","Search","openState","slot","slots","value","section","visible","sixSearchFieldToggle","setTimeout","getSlot","shadowRoot","querySelector","setFocus","hasSlot","Notifications","Logo","getSelectedApp","element","firstCheckedMenuItem","Array","querySelectorAll","hasAttribute","textContent","search","h","class","isSectionSelected","onClick","toggleSearch","notifications","appSwitcher","distance","skidding","placement","ref","profile","logo","height","viewBox","xmlns","fill","d","Host","openHamburgerMenu","shiftContent","getTextContent","nodes","assignedNodes","flatten","text","map","node","nodeType","Node","TEXT_NODE","childNodes","some","trim","ELEMENT_NODE","getSlotChildren","assignedElements","slotName","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}