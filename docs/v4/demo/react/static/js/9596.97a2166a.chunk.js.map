{"version":3,"file":"static/js/9596.97a2166a.chunk.js","mappings":"2PAGIA,EAAK,EAmBIC,EAAM,W,4FACT,KAAAC,YAAc,OAAH,SAAYF,G,WAME,G,aAGC,E,eAGf,E,eAGiB,C,iDAKpC,WACEG,KAAKC,iBAAmBD,KAAKC,iBAAiBC,KAAKF,K,kEAKrD,WAAeG,GAAsB,4EAC3B,QAAR,EAAAH,KAAKI,WAAG,SAAEC,MAAMF,GAAS,gDAC1B,mD,sEAID,yFACU,QAAR,EAAAH,KAAKI,WAAG,SAAEE,OAAO,gDAClB,kD,IAAA,8BAEO,WACNN,KAAKO,SAASC,M,GACf,oBAED,WAAM,WACJ,OAEEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAACb,GAAIG,KAAKW,KAAKd,IAAMG,KAAKD,cAC7BU,EAAAA,EAAAA,GAAAA,MAAAA,CACEG,KAAK,OACLC,IAAK,SAACC,GAAE,OAAM,EAAKV,IAAMU,CAAE,EAC3BC,MAAO,CACLX,KAAK,EAGL,cAAeJ,KAAKgB,OACpB,gBAAiBhB,KAAKiB,SACtB,gBAAiBjB,KAAKkB,UAExBC,KAAK,MAAK,gBACKnB,KAAKkB,SAAW,OAAS,QAAO,gBAChClB,KAAKgB,OAAS,OAAS,QACtCI,SAAUpB,KAAKkB,WAAalB,KAAKgB,OAAS,KAAO,MAEjDP,EAAAA,EAAAA,GAAAA,OAAAA,MACCT,KAAKiB,WACJR,EAAAA,EAAAA,GAAAA,kBAAAA,CACEY,KAAK,QACLC,KAAK,SACLC,YAAY,oBACZR,MAAM,oBACNS,QAASxB,KAAKC,iBACdwB,UAAW,EAAC,cACA,U,GAMvB,2B,0BA5EgB,G,QCtBD,ikC","sources":["../../../libraries/ui-library/dist/esm/src/components/six-tab/six-tab.tsx","../../../libraries/ui-library/dist/esm/src/components/six-tab/six-tab.scss?tag=six-tab&encapsulation=shadow"],"sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Method, Prop } from '@stencil/core';\nimport { EmptyPayload } from '../../utils/types';\n\nlet id = 0;\n\n/**\n * @since 1.0\n * @status stable\n *\n * Forked from https://github.com/shoelace-style/shoelace version v2.0.0-beta27.\n *\n * @slot - The tab's label.\n *\n * @part base - The component's base wrapper.\n * @part close-button - The close button, which is the icon button's base wrapper.\n */\n\n@Component({\n  tag: 'six-tab',\n  styleUrl: 'six-tab.scss',\n  shadow: true,\n})\nexport class SixTab {\n  private componentId = `tab-${++id}`;\n  private tab?: HTMLElement;\n\n  @Element() host!: HTMLSixTabElement;\n\n  /** The name of the tab panel the tab will control. The panel must be located in the same tab group. */\n  @Prop({ reflect: true }) panel = '';\n\n  /** Set to true to draw the tab in an active state. */\n  @Prop({ reflect: true }) active = false;\n\n  /** When true, the tab will be rendered with a close icon. */\n  @Prop() closable = false;\n\n  /** Set to true to draw the tab in a disabled state. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Emitted when the tab is closable and the close button is activated. */\n  @Event({ eventName: 'six-tab-close' }) sixClose!: EventEmitter<EmptyPayload>;\n\n  connectedCallback() {\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n  }\n\n  /** Sets focus to the tab. */\n  @Method()\n  async setFocus(options?: FocusOptions) {\n    this.tab?.focus(options);\n  }\n\n  /** Removes focus from the tab. */\n  @Method()\n  async removeFocus() {\n    this.tab?.blur();\n  }\n\n  private handleCloseClick() {\n    this.sixClose.emit();\n  }\n\n  render() {\n    return (\n      // If the user didn't provide an ID, we'll set one so we can link tabs and tab panels with aria labels\n      <Host id={this.host.id || this.componentId}>\n        <div\n          part=\"base\"\n          ref={(el) => (this.tab = el)}\n          class={{\n            tab: true,\n\n            // States\n            'tab--active': this.active,\n            'tab--closable': this.closable,\n            'tab--disabled': this.disabled,\n          }}\n          role=\"tab\"\n          aria-disabled={this.disabled ? 'true' : 'false'}\n          aria-selected={this.active ? 'true' : 'false'}\n          tabindex={this.disabled || !this.active ? '-1' : '0'}\n        >\n          <slot />\n          {this.closable && (\n            <six-icon-button\n              name=\"close\"\n              size=\"xSmall\"\n              exportparts=\"base:close-button\"\n              class=\"tab__close-button\"\n              onClick={this.handleCloseClick}\n              tabIndex={-1}\n              aria-hidden=\"true\"\n            />\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import 'src/global/component';\n\n:host {\n  display: inline-block;\n}\n\n.tab {\n  display: inline-flex;\n  align-items: center;\n  font-family: var(--six-font-family);\n  font-size: var(--six-font-size-small);\n  font-weight: var(--six-font-weight-semibold);\n  border-radius: 4px;\n  color: var(--six-tab-color);\n  padding: var(--six-spacing-medium) var(--six-spacing-large);\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  transition: var(--six-transition-fast) box-shadow, var(--six-transition-fast) color;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus:not(.tab--disabled) {\n    color: var(--six-tab-color-active);\n  }\n\n  &.tab--active:not(.tab--disabled) {\n    color: var(--six-tab-color-active);\n    font-weight: var(--six-font-weight-bold);\n  }\n\n  &.tab--closable {\n    padding-right: var(--six-spacing-small);\n  }\n\n  &.tab--disabled {\n    color: var(--six-tab-color-disabled);\n    cursor: not-allowed;\n  }\n\n  &:hover:not(.tab--disabled) {\n    color: var(--six-tab-color-hover);\n  }\n}\n\n.tab__close-button {\n  font-size: var(--six-font-size-large);\n  margin-left: var(--six-spacing-xx-small);\n\n  &::part(base) {\n    padding: var(--six-spacing-xxx-small);\n  }\n}\n"],"names":["id","SixTab","componentId","this","handleCloseClick","bind","options","tab","focus","blur","sixClose","emit","h","Host","host","part","ref","el","class","active","closable","disabled","role","tabindex","name","size","exportparts","onClick","tabIndex"],"sourceRoot":""}